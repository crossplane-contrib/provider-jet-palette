make: Entering directory `/Users/justinbarksdale/git/provider-jet-palette'
/Library/Developer/CommandLineTools/usr/bin/make build.all PLATFORMS="linux_arm64"
 
/Library/Developer/CommandLineTools/usr/bin/make build.init
 
echo `date +%H:%M:%S` [34m[ .. ][0m verify dependencies have expected content
GOOS=darwin GOARCH=arm64 go mod verify || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
echo `date +%H:%M:%S` [32m[ OK ][0m go modules dependencies verified
 
if [ "on" != "on" ] && [ "/" !=  "" ]; then \
		echo `date +%H:%M:%S` [33m[WARN][0m the source directory is not relative to the GOPATH at /Users/justinbarksdale/git/provider-jet-palette/.work/pkg or you are you using symlinks. The build might run into issue. Please move the source directory to be at /Users/justinbarksdale/git/provider-jet-palette/.work/pkg/src/github.com/crossplane-contrib/provider-jet-palette ;\
	fi
mkdir -p /Users/justinbarksdale/git/provider-jet-palette/_output
echo "v0.0.0-1.g69503ad.dirty" > /Users/justinbarksdale/git/provider-jet-palette/_output/version
:
 
/Library/Developer/CommandLineTools/usr/bin/make build.check
 
echo `date +%H:%M:%S` [34m[ .. ][0m installing golangci-lint-v1.31.0 darwin-amd64
mkdir -p /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/tmp-golangci-lint || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
curl -fsSL https://github.com/golangci/golangci-lint/releases/download/v1.31.0/golangci-lint-1.31.0-darwin-amd64.tar.gz | tar -xz --strip-components=1 -C /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/tmp-golangci-lint || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
 
mv /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/tmp-golangci-lint/golangci-lint /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/golangci-lint-v1.31.0 || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
rm -fr /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/tmp-golangci-lint
echo `date +%H:%M:%S` [32m[ OK ][0m installing golangci-lint-v1.31.0 darwin-amd64
echo `date +%H:%M:%S` [34m[ .. ][0m golangci-lint
mkdir -p /Users/justinbarksdale/git/provider-jet-palette/_output/lint/darwin_arm64
/Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/golangci-lint-v1.31.0 run  || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
echo `date +%H:%M:%S` [32m[ OK ][0m golangci-lint
:
/Library/Developer/CommandLineTools/usr/bin/make build.code
 
:
 
/Library/Developer/CommandLineTools/usr/bin/make do.build.platform
 
/Library/Developer/CommandLineTools/usr/bin/make build.check.platform PLATFORM=linux_arm64
 
:
 
/Library/Developer/CommandLineTools/usr/bin/make build.code.platform PLATFORM=linux_arm64
 
echo `date +%H:%M:%S` [34m[ .. ][0m go build linux_arm64
CGO_ENABLED=0 go build -v -i -o /Users/justinbarksdale/git/provider-jet-palette/_output/bin/linux_arm64/provider  -tags '' -pkgdir /Users/justinbarksdale/git/provider-jet-palette/.work/pkg/linux_arm64_static -installsuffix static  -ldflags '-X github.com/crossplane-contrib/provider-jet-palette/internal/version.Version=v0.0.0-1.g69503ad.dirty -s -w' github.com/crossplane-contrib/provider-jet-palette/cmd/provider || (echo `date +%H:%M:%S` [31m[FAIL][0m && false) 
echo `date +%H:%M:%S` [32m[ OK ][0m go build linux_arm64
 
:
 
/Library/Developer/CommandLineTools/usr/bin/make build.artifacts
 
:
 
/Library/Developer/CommandLineTools/usr/bin/make do.build.artifacts
 
/Library/Developer/CommandLineTools/usr/bin/make build.artifacts.platform PLATFORM=linux_arm64
 
/Library/Developer/CommandLineTools/usr/bin/make -C /Users/justinbarksdale/git/provider-jet-palette/cluster/images/provider-jet-palette PLATFORM=linux_arm64
 
/Library/Developer/CommandLineTools/usr/bin/make build.all PLATFORMS="linux_arm64"
 
/Library/Developer/CommandLineTools/usr/bin/make build.init
 
:
 
/Library/Developer/CommandLineTools/usr/bin/make build.check
 
:
 
/Library/Developer/CommandLineTools/usr/bin/make build.code
 
:
 
/Library/Developer/CommandLineTools/usr/bin/make do.build.platform
 
/Library/Developer/CommandLineTools/usr/bin/make build.check.platform PLATFORM=linux_arm64
 
:
 
/Library/Developer/CommandLineTools/usr/bin/make build.code.platform PLATFORM=linux_arm64
 
:
 
/Library/Developer/CommandLineTools/usr/bin/make build.artifacts
 
:
 
/Library/Developer/CommandLineTools/usr/bin/make do.build.artifacts
 
/Library/Developer/CommandLineTools/usr/bin/make build.artifacts.platform PLATFORM=linux_arm64
 
echo `date +%H:%M:%S` [34m[ .. ][0m docker build build-e2886f39/provider-jet-palette-arm64
cp Dockerfile /var/folders/c3/40rs861j0d93j1mp5t8ms17r0000gn/T/tmp.WkkZ3OCy || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
cp -R ../../../package /var/folders/c3/40rs861j0d93j1mp5t8ms17r0000gn/T/tmp.WkkZ3OCy || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
cd /var/folders/c3/40rs861j0d93j1mp5t8ms17r0000gn/T/tmp.WkkZ3OCy && sed -i -e 's|BASEIMAGE|scratch|g' Dockerfile || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
 
cd /var/folders/c3/40rs861j0d93j1mp5t8ms17r0000gn/T/tmp.WkkZ3OCy && sed -i -e 's|VERSION|v0.0.0-1.g69503ad.dirty|g' package/crossplane.yaml || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
cd /var/folders/c3/40rs861j0d93j1mp5t8ms17r0000gn/T/tmp.WkkZ3OCy && sed -i -e 's|DOCKER_REGISTRY|crossplane|g' package/crossplane.yaml || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
cd /var/folders/c3/40rs861j0d93j1mp5t8ms17r0000gn/T/tmp.WkkZ3OCy && find package -type f -name '*.yaml' -exec cat {} >> 'package.yaml' \; -exec printf '\n---\n' \; || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
docker build -q \
		--build-arg ARCH=arm64 \
		--build-arg TINI_VERSION=v0.16.1 \
		-t build-e2886f39/provider-jet-palette-arm64 \
		/var/folders/c3/40rs861j0d93j1mp5t8ms17r0000gn/T/tmp.WkkZ3OCy || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
echo `date +%H:%M:%S` [32m[ OK ][0m docker build build-e2886f39/provider-jet-palette-arm64
:
 
/Library/Developer/CommandLineTools/usr/bin/make build.done
 
for i in ; do \
		IMGID=$(docker images -q $i); \
		if [ -n "$IMGID" ]; then \
			echo === caching image $i; \
			CACHE_IMAGE=cache/${i#*/}; \
			docker tag $i ${CACHE_IMAGE}:2022-06-10.123940; \
			for r in $(docker images --format "{{.ID}}#{{.Repository}}:{{.Tag}}" | grep $IMGID | grep cache/ | grep -v ${CACHE_IMAGE}:2022-06-10.123940); do \
				docker rmi ${r#*#} > /dev/null 2>&1 || true; \
			done; \
		fi; \
	done
 
rm -fr /var/folders/c3/40rs861j0d93j1mp5t8ms17r0000gn/T/tmp.7fCocBRk
:
 
/Library/Developer/CommandLineTools/usr/bin/make -C /Users/justinbarksdale/git/provider-jet-palette/cluster/images/provider-jet-palette-controller PLATFORM=linux_arm64
 
/Library/Developer/CommandLineTools/usr/bin/make build.all PLATFORMS="linux_arm64"
 
/Library/Developer/CommandLineTools/usr/bin/make build.init
 
:
 
/Library/Developer/CommandLineTools/usr/bin/make build.check
 
:
 
/Library/Developer/CommandLineTools/usr/bin/make build.code
 
:
 
/Library/Developer/CommandLineTools/usr/bin/make do.build.platform
 
/Library/Developer/CommandLineTools/usr/bin/make build.check.platform PLATFORM=linux_arm64
 
:
 
/Library/Developer/CommandLineTools/usr/bin/make build.code.platform PLATFORM=linux_arm64
 
:
 
/Library/Developer/CommandLineTools/usr/bin/make build.artifacts
 
:
 
/Library/Developer/CommandLineTools/usr/bin/make do.build.artifacts
 
/Library/Developer/CommandLineTools/usr/bin/make build.artifacts.platform PLATFORM=linux_arm64
 
echo `date +%H:%M:%S` [34m[ .. ][0m docker build build-e2886f39/provider-jet-palette-controller-arm64
cp Dockerfile /var/folders/c3/40rs861j0d93j1mp5t8ms17r0000gn/T/tmp.l9mcaatk || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
cp terraformrc.hcl /var/folders/c3/40rs861j0d93j1mp5t8ms17r0000gn/T/tmp.l9mcaatk || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
 
cp /Users/justinbarksdale/git/provider-jet-palette/_output/bin/linux_arm64/provider /var/folders/c3/40rs861j0d93j1mp5t8ms17r0000gn/T/tmp.l9mcaatk || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
cd /var/folders/c3/40rs861j0d93j1mp5t8ms17r0000gn/T/tmp.l9mcaatk && sed -i -e 's|BASEIMAGE|arm64v8/alpine:3.13|g' Dockerfile || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
docker build -q \
		--build-arg ARCH=arm64 \
		--build-arg TINI_VERSION=v0.16.1 \
		--build-arg TERRAFORM_VERSION=1.1.6 \
		--build-arg TERRAFORM_PROVIDER_SOURCE=spectrocloud/spectrocloud \
		--build-arg TERRAFORM_PROVIDER_VERSION=0.7.7 \
		--build-arg TERRAFORM_PROVIDER_DOWNLOAD_NAME=terraform-provider-spectrocloud \
		--build-arg TERRAFORM_PROVIDER_DOWNLOAD_URL_PREFIX=https://github.com/spectrocloud/terraform-provider-spectrocloud/releases/download/v0.7.7 \
		--build-arg TERRAFORM_NATIVE_PROVIDER_BINARY=terraform-provider-spectrocloud_v0.7.7 \
		-t build-e2886f39/provider-jet-palette-controller-arm64 \
		/var/folders/c3/40rs861j0d93j1mp5t8ms17r0000gn/T/tmp.l9mcaatk || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
echo `date +%H:%M:%S` [32m[ OK ][0m docker build build-e2886f39/provider-jet-palette-controller-arm64
:
 
/Library/Developer/CommandLineTools/usr/bin/make build.done
 
for i in ; do \
		IMGID=$(docker images -q $i); \
		if [ -n "$IMGID" ]; then \
			echo === caching image $i; \
			CACHE_IMAGE=cache/${i#*/}; \
			docker tag $i ${CACHE_IMAGE}:2022-06-10.123941; \
			for r in $(docker images --format "{{.ID}}#{{.Repository}}:{{.Tag}}" | grep $IMGID | grep cache/ | grep -v ${CACHE_IMAGE}:2022-06-10.123941); do \
				docker rmi ${r#*#} > /dev/null 2>&1 || true; \
			done; \
		fi; \
	done
rm -fr /var/folders/c3/40rs861j0d93j1mp5t8ms17r0000gn/T/tmp.j5jcL7Sq
 
:
 
:
 
/Library/Developer/CommandLineTools/usr/bin/make build.done
 
for i in ; do \
		IMGID=$(docker images -q $i); \
		if [ -n "$IMGID" ]; then \
			echo === caching image $i; \
			CACHE_IMAGE=cache/${i#*/}; \
			docker tag $i ${CACHE_IMAGE}:2022-06-10.123941; \
			for r in $(docker images --format "{{.ID}}#{{.Repository}}:{{.Tag}}" | grep $IMGID | grep cache/ | grep -v ${CACHE_IMAGE}:2022-06-10.123941); do \
				docker rmi ${r#*#} > /dev/null 2>&1 || true; \
			done; \
		fi; \
	done
 
rm -fr /var/folders/c3/40rs861j0d93j1mp5t8ms17r0000gn/T/tmp.BxQkvZNb
:
 
make: Leaving directory `/Users/justinbarksdale/git/provider-jet-palette'
 
