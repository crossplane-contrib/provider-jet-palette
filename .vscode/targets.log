make all --print-data-base --no-builtin-variables --no-builtin-rules --question
# GNU Make 3.81
# Copyright (C) 2006  Free Software Foundation, Inc.
# This is free software; see the source for copying conditions.
# There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

# This program built for i386-apple-darwin11.3.0
 
# GNU Make 3.81
# Copyright (C) 2006  Free Software Foundation, Inc.
# This is free software; see the source for copying conditions.
# There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

# This program built for i386-apple-darwin11.3.0
 
# GNU Make 3.81
# Copyright (C) 2006  Free Software Foundation, Inc.
# This is free software; see the source for copying conditions.
# There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

# This program built for i386-apple-darwin11.3.0
 

# Make data base, printed on Fri Jun 10 08:39:42 2022

# Variables

# makefile (from `build/makelib/golang.mk', line 28)
GO_VENDOR_DIR = vendor
# automatic
<D = $(patsubst %/,%,$(dir $<))
# automatic
?F = $(notdir $?)
 
# makefile (from `build/makelib/golang.mk', line 107)
GO_LINT_OUTPUT := /Users/justinbarksdale/git/provider-jet-palette/_output/lint/darwin_arm64
# makefile (from `build/makelib/golang.mk', line 39)
GO_CGO_ENABLED = 0
# makefile (from `build/makelib/image.mk', line 87)
CACHEBUST = 0
# makefile (from `build/makelib/k8s_tools.mk', line 41)
OLMBUNDLE := /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/olm-bundle-v0.4.0
# makefile (from `build/makelib/image.mk', line 183)
define repo.targets
img.release.build.$(1).$(2).$(3):
	@$(INFO) docker build $(1)/$(2)-$(3):$(VERSION)
	@docker tag $(BUILD_REGISTRY)/$(2)-$(3) $(1)/$(2)-$(3):$(VERSION) || $(FAIL)
	@# Save image as _output/images/linux_<arch>/<image>.tar.gz (no builds for darwin or windows)
	@mkdir -p $(OUTPUT_DIR)/images/linux_$(3) || $(FAIL)
	@docker save $(BUILD_REGISTRY)/$(2)-$(3) | gzip -c > $(OUTPUT_DIR)/images/linux_$(3)/$(2).tar.gz || $(FAIL)
	@$(OK) docker build $(1)/$(2)-$(3):$(VERSION)
img.release.build: img.release.build.$(1).$(2).$(3)

img.release.publish.$(1).$(2).$(3):
	@$(INFO) docker push $(1)/$(2)-$(3):$(VERSION)
	@docker push $(1)/$(2)-$(3):$(VERSION) || $(FAIL)
	@$(OK) docker push $(1)/$(2)-$(3):$(VERSION)
img.release.publish: img.release.publish.$(1).$(2).$(3)

img.release.promote.$(1).$(2).$(3):
	@$(INFO) docker promote $(1)/$(2)-$(3):$(VERSION) to $(1)/$(2)-$(3):$(CHANNEL)
	@docker pull $(1)/$(2)-$(3):$(VERSION) || $(FAIL)
	@[ "$(CHANNEL)" = "master" ] || docker tag $(1)/$(2)-$(3):$(VERSION) $(1)/$(2)-$(3):$(VERSION)-$(CHANNEL) || $(FAIL)
	@docker tag $(1)/$(2)-$(3):$(VERSION) $(1)/$(2)-$(3):$(CHANNEL) || $(FAIL)
	@[ "$(CHANNEL)" = "master" ] || docker push $(1)/$(2)-$(3):$(VERSION)-$(CHANNEL)
	@docker push $(1)/$(2)-$(3):$(CHANNEL) || $(FAIL)
	@$(OK) docker promote $(1)/$(2)-$(3):$(VERSION) to $(1)/$(2)-$(3):$(CHANNEL) || $(FAIL)
img.release.promote: img.release.promote.$(1).$(2).$(3)

img.release.clean.$(1).$(2).$(3):
	@[ -z "$$$$(docker images -q $(1)/$(2)-$(3):$(VERSION))" ] || docker rmi $(1)/$(2)-$(3):$(VERSION)
	@[ -z "$$$$(docker images -q $(1)/$(2)-$(3):$(VERSION)-$(CHANNEL))" ] || docker rmi $(1)/$(2)-$(3):$(VERSION)-$(CHANNEL)
	@[ -z "$$$$(docker images -q $(1)/$(2)-$(3):$(CHANNEL))" ] || docker rmi $(1)/$(2)-$(3):$(CHANNEL)
img.release.clean: img.release.clean.$(1).$(2).$(3)
endef
# makefile (from `build/makelib/k8s_tools.mk', line 24)
ISTIO_DOWNLOAD_TUPLE := osx
# environment
VSCODE_LOG_NATIVE = false
# makefile (from `build/makelib/common.mk', line 90)
REMOTE_NAME = origin
# makefile (from `build/makelib/image.mk', line 75)
PRUNE_DRYRUN = 0
# automatic
?D = $(patsubst %/,%,$(dir $?))
# makefile (from `Makefile', line 38)
GO_TEST_PARALLEL := 5
# makefile (from `build/makelib/golang.mk', line 38)
GO_COVER_MODE = count
# automatic
@D = $(patsubst %/,%,$(dir $@))
# automatic
@F = $(notdir $@)
# makefile (from `Makefile', line 12)
TERRAFORM_PROVIDER_DOWNLOAD_URL_PREFIX := https://github.com/spectrocloud/terraform-provider-spectrocloud/releases/download/v0.7.7
# makefile
CURDIR := /Users/justinbarksdale/git/provider-jet-palette
# makefile (from `build/makelib/common.mk', line 56)
OK = echo ${TIME} ${GREEN}[ OK ]${CNone}
# makefile (from `build/makelib/common.mk', line 19)
SHELL := /bin/bash
# makefile (from `build/makelib/image.mk', line 94)
BUILD_ARGS = -q
# makefile (from `build/makelib/golang.mk', line 84)
GO := go
# makefile (from `build/makelib/common.mk', line 63)
V = 0
# environment
VSCODE_NLS_CONFIG = {"locale":"en-us","availableLanguages":{},"_languagePackSupport":true}
# makefile (from `build/makelib/image.mk', line 52)
BUILD_REGISTRY := build-e2886f39
# environment
_ = /Library/Developer/CommandLineTools/usr/bin/make
# makefile (from `build/makelib/common.mk', line 35)
YELLOW_BOLD := [33;1m
# makefile (from `build/makelib/common.mk', line 36)
BLUE := [34m
# makefile (from `build/makelib/golang.mk', line 126)
GO_PKG_STATIC_FLAGS := -pkgdir /Users/justinbarksdale/git/provider-jet-palette/.work/pkg/darwin_arm64_static
# makefile (from `build/makelib/common.mk', line 196)
TOOLS_HOST_DIR := /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64
# makefile (from `build/makelib/golang.mk', line 86)
GO_VERSION := 1.17
# makefile (from `Makefile', line 55)
IMAGES = provider-jet-palette provider-jet-palette-controller
# makefile (from `Makefile', line 40)
GO_STATIC_PACKAGES = $(GO_PROJECT)/cmd/provider
# makefile (from `build/makelib/image.mk', line 1)
MAKEFILE_LIST :=  Makefile build/makelib/common.mk build/makelib/output.mk build/makelib/golang.mk build/makelib/k8s_tools.mk build/makelib/image.mk
# makefile (from `build/makelib/common.mk', line 43)
WHITE_BOLD := [37;1m
# makefile (from `Makefile', line 43)
GO111MODULE = on
# makefile (from `build/makelib/image.mk', line 265)
define IMAGE_HELPTEXT
DEPRECATED: this module has been replaced by imagelight.mk and may be removed in the future. 

Image Targets:
    prune        Prune orphaned and cached images.

Image Options:
    PRUNE_HOURS  The number of hours from when an image is last used for it to be
                 considered a target for pruning. Default is 48 hrs.
    PRUNE_KEEP   The minimum number of cached images to keep. Default is 24 images.

endef
# makefile (from `build/makelib/common.mk', line 71)
DEBUG = 0
# makefile (from `build/makelib/common.mk', line 185)
WORK_DIR := /Users/justinbarksdale/git/provider-jet-palette/.work
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
# environment
AUTOJUMP_SOURCED = 1
# environment
VERSION = v0.0.0-1.g69503ad.dirty
# environment
VSCODE_VERBOSE_LOGGING = true
# makefile (from `build/makelib/output.mk', line 31)
S3_SYNC_DEL := aws s3 sync --only-show-errors --delete
# environment
__CFBundleIdentifier = com.microsoft.VSCode
# environment
INFOPATH = /opt/homebrew/share/info:
# makefile (from `build/makelib/common.mk', line 221)
VERSION_REGEX := ^v\([0-9]*\)[.]\([0-9]*\)[.]\([0-9]*\)$$
# makefile (from `build/makelib/common.mk', line 254)
COMMA := ,
# environment
VSCODE_IPC_HOOK_EXTHOST = /var/folders/c3/40rs861j0d93j1mp5t8ms17r0000gn/T/vscode-ipc-511c51b0-5321-487a-9bdc-ed6820668847.sock
# makefile (from `build/makelib/golang.mk', line 102)
GO_BIN_DIR := /Users/justinbarksdale/git/provider-jet-palette/_output/bin
# environment
VSCODE_CWD = /
# makefile (from `build/makelib/common.mk', line 49)
TIME_LONG = `date +%Y-%m-%d' '%H:%M:%S`
# environment
GOPROXY = https://proxy.golang.org,direct
# makefile (from `Makefile', line 76)
TERRAFORM_PROVIDER_SCHEMA := config/schema.json
# makefile (from `build/makelib/image.mk', line 41)
OSBASEIMAGE = arm64v8/$(OSBASE)
# makefile (from `build/makelib/golang.mk', line 65)
GO_INTEGRATION_TEST_PACKAGES := 
# makefile (from `build/makelib/image.mk', line 37)
OSBASE = alpine:3.13
# environment
PATH = /Users/justinbarksdale/.krew/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion Tech Preview.app/Contents/Public:/Users/justinbarksdale/go/bin
# makefile (from `build/makelib/common.mk', line 149)
BUILD_PLATFORMS = linux_$(TARGETARCH)
# makefile (from `build/makelib/golang.mk', line 90)
GOFMT_VERSION := 1.11
# makefile (from `build/makelib/golang.mk', line 100)
GOLANGCILINT := /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/golangci-lint-v1.31.0
# makefile (from `build/makelib/k8s_tools.mk', line 46)
HELM3 := /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/helm-v3.7.1
# makefile (from `build/makelib/common.mk', line 31)
RED_BOLD := [31;1m
# makefile (from `build/makelib/golang.mk', line 79)
DEP := /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/dep-v0.5.1
# environment
LSCOLORS = Gxfxcxdxbxegedabagacad
# makefile (from `build/makelib/golang.mk', line 32)
GO_BUILDFLAGS = 
# makefile (from `build/makelib/common.mk', line 29)
BLACK_BOLD := [30;1m
# makefile (from `build/makelib/golang.mk', line 99)
GOLANGCILINT_VERSION = 1.31.0
# makefile (from `Makefile', line 5)
PROJECT_REPO := github.com/crossplane-contrib/provider-jet-palette
# makefile (from `build/makelib/common.mk', line 135)
SAFEHOSTPLATFORM := darwin-amd64
 
# makefile (from `build/makelib/k8s_tools.mk', line 21)
ISTIOOS := darwin
# makefile (from `build/makelib/common.mk', line 41)
CYAN_BOLD := [36;1m
# makefile (from `build/makelib/golang.mk', line 78)
DEP_VERSION = v0.5.1
# makefile (from `build/makelib/golang.mk', line 29)
GO_PKG_DIR = $(WORK_DIR)/pkg
# makefile (from `build/makelib/golang.mk', line 139)
GOPATH = $(abspath $(GO_PKG_DIR))
# makefile (from `build/makelib/k8s_tools.mk', line 54)
HELM := /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/helm-v2.17.0
# makefile (from `build/makelib/image.mk', line 55)
MANIFEST_TOOL_VERSION = v0.7.0
# environment
VSCODE_LOG_STACK = false
# environment
ELECTRON_RUN_AS_NODE = 1
# makefile (from `build/makelib/image.mk', line 23)
IMAGE_DIR := /Users/justinbarksdale/git/provider-jet-palette/cluster/images
# makefile (from `build/makelib/golang.mk', line 52)
GO_LDFLAGS = -X $(GO_PROJECT)/internal/version.Version=$(VERSION) -s -w
# makefile (from `build/makelib/image.mk', line 83)
IMAGE_ARCHS := arm64
# default
.FEATURES := target-specific order-only second-expansion else-if archives jobserver check-symlink
# makefile (from `build/makelib/golang.mk', line 81)
GOCOVER_COBERTURA := /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/gocover-cobertura
# makefile (from `build/makelib/k8s_tools.mk', line 53)
HELM_VERSION = v2.17.0
# makefile (from `build/makelib/golang.mk', line 61)
GOHOSTOS := darwin
# makefile (from `build/makelib/golang.mk', line 106)
GO_LINT_DIR := /Users/justinbarksdale/git/provider-jet-palette/_output/lint
# makefile (from `build/makelib/image.mk', line 79)
CACHE_PRUNE_DATE := 2022-06-08.123942
# environment
SSH_AUTH_SOCK = /private/tmp/com.apple.launchd.DAYjhAYmzc/Listeners
# automatic
%F = $(notdir $%)
# makefile (from `build/makelib/golang.mk', line 19)
GO_PROJECT = $(PROJECT_REPO)
# makefile (from `build/makelib/image.mk', line 78)
CACHE_DATE_FORMAT := "%Y-%m-%d.%H%M%S"
# makefile (from `build/makelib/common.mk', line 51)
TIME = $(TIME_SHORT)
# makefile (from `build/makelib/common.mk', line 156)
OS := darwin
# makefile (from `build/makelib/k8s_tools.mk', line 33)
KUBECTL := /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/kubectl-v1.22.2
# makefile (from `build/makelib/common.mk', line 77)
CHANNEL = master
# makefile (from `build/makelib/common.mk', line 87)
BRANCH_NAME := main
# command line
PLATFORMS = linux_arm64
# makefile (from `build/makelib/golang.mk', line 34)
GO_TAGS = 
# makefile (from `build/makelib/common.mk', line 222)
VERSION_VALID := 0
# environment
VSCODE_PIPE_LOGGING = true
# makefile (from `build/makelib/image.mk', line 66)
CACHE_REGISTRY := cache
# environment
PWD = /Users/justinbarksdale/git/provider-jet-palette
# makefile (from `build/makelib/k8s_tools.mk', line 32)
KUBECTL_VERSION = v1.22.2
# environment
HOMEBREW_CELLAR = /opt/homebrew/Cellar
# makefile (from `build/makelib/common.mk', line 195)
TOOLS_DIR := /Users/justinbarksdale/git/provider-jet-palette/.cache/tools
# makefile (from `build/makelib/golang.mk', line 131)
GO_GENERATE_FLAGS = $(GO_BUILDFLAGS) -tags 'generate $(GO_TAGS)'
# makefile (from `build/makelib/common.mk', line 37)
BLUE_BOLD := [34;1m
# makefile (from `build/makelib/common.mk', line 111)
SAFEHOSTARCH := amd64
# environment
ORIGINAL_XDG_CURRENT_DESKTOP = undefined
# makefile (from `build/makelib/common.mk', line 32)
GREEN := [32m
# makefile (from `build/makelib/common.mk', line 136)
SAFEHOST_PLATFORM := darwin_amd64
# environment
MANPATH = /opt/homebrew/share/man::
# environment
GOMODCACHE = /Users/justinbarksdale/go/pkg/mod
# environment
HOME = /Users/justinbarksdale
# makefile (from `build/makelib/image.mk', line 80)
CACHE_TAG := 2022-06-10.123942
# makefile (from `build/makelib/common.mk', line 192)
CACHE_DIR := /Users/justinbarksdale/git/provider-jet-palette/.cache
# default
MAKEFILEPATH = $(shell /usr/bin/xcode-select -print-path 2>/dev/null || echo /Developer)/Makefiles
# environment
VSCODE_CODE_CACHE_PATH = /Users/justinbarksdale/Library/Application Support/Code/CachedData/4af164ea3a06f701fe3e89a2bcbb421d2026b68f
# makefile (from `build/makelib/common.mk', line 54)
WARN = echo ${TIME} ${YELLOW}[WARN]${CNone}
# environment
LOGNAME = justinbarksdale
# makefile (from `build/makelib/common.mk', line 39)
MAGENTA_BOLD := [35;1m
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = 1
# makefile (from `build/makelib/golang.mk', line 94)
GOFMT := /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/gofmt1.11
# automatic
+F = $(notdir $+)
# makefile (from `build/makelib/image.mk', line 27)
IMAGE_OUTPUT_DIR := /Users/justinbarksdale/git/provider-jet-palette/_output/images/darwin_arm64
# makefile (from `Makefile', line 75)
TERRAFORM_WORKDIR := /Users/justinbarksdale/git/provider-jet-palette/.work/terraform
# environment
ZSH = /Users/justinbarksdale/.oh-my-zsh
# makefile (from `build/makelib/image.mk', line 31)
IMAGE_TEMP_DIR := /var/folders/c3/40rs861j0d93j1mp5t8ms17r0000gn/T/tmp.06P5fEvf
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# makefile (from `build/makelib/output.mk', line 29)
S3_CP := aws s3 cp --only-show-errors
# automatic
^D = $(patsubst %/,%,$(dir $^))
# makefile (from `build/makelib/common.mk', line 44)
CNone := [0m
# makefile (from `build/makelib/common.mk', line 202)
HOSTNAME := jb-2.local
# makefile (from `build/makelib/golang.mk', line 62)
GOHOSTARCH := arm64
# makefile (from `build/makelib/common.mk', line 178)
OUTPUT_DIR := /Users/justinbarksdale/git/provider-jet-palette/_output
# environment
XPC_FLAGS = 0x0
# default
MAKE = $(MAKE_COMMAND)
# default
MAKECMDGOALS := build.init
# makefile (from `build/makelib/common.mk', line 50)
TIME_SHORT = `date +%H:%M:%S`
# makefile (from `Makefile', line 54)
DOCKER_REGISTRY = crossplane
# environment
PULL = 1
# makefile (from `build/makelib/common.mk', line 42)
WHITE := [37m
# makefile (from `build/makelib/image.mk', line 69)
PRUNE_HOURS = 48
# makefile (from `build/makelib/golang.mk', line 129)
GO_COMMON_FLAGS = $(GO_BUILDFLAGS) -tags '$(GO_TAGS)'
# environment
MAKEOVERRIDES = ${-*-command-variables-*-}
# default
MAKE_VERSION := 3.81
# environment
USER = justinbarksdale
# makefile (from `build/makelib/common.mk', line 160)
NPROCS := 10
# makefile (from `build/makelib/common.mk', line 100)
HOSTOS := darwin
# makefile (from `build/makelib/golang.mk', line 36)
GO_TEST_SUITE = 
# makefile
.DEFAULT_GOAL := all
# makefile (from `build/makelib/common.mk', line 33)
GREEN_BOLD := [32;1m
# makefile (from `build/makelib/image.mk', line 106)
TINI_VERSION = v0.16.1
# makefile (from `build/makelib/golang.mk', line 130)
GO_STATIC_FLAGS = $(GO_COMMON_FLAGS) $(GO_PKG_STATIC_FLAGS) -installsuffix static  -ldflags '$(GO_LDFLAGS)'
# makefile (from `build/makelib/common.mk', line 223)
VERSION_MAJOR := v0.0.0-1.g69503ad.dirty
# makefile (from `build/makelib/golang.mk', line 37)
GO_NOCOV = 
# environment
LESS = -R
# automatic
%D = $(patsubst %/,%,$(dir $%))
# makefile (from `build/makelib/golang.mk', line 103)
GO_OUT_DIR := /Users/justinbarksdale/git/provider-jet-palette/_output/bin/darwin_arm64
# makefile (from `build/makelib/golang.mk', line 307)
define GO_HELPTEXT
Go Targets:
    generate        Runs go code generation followed by goimports on generated files.
    fmt             Checks go source code for formatting issues.
    fmt.simplify    Format, simplify, update source files.
    imports         Checks go source code import lines for issues.
    imports.fix     Updates go source files to fix issues with import lines.
    vendor          Updates vendor packages.
    vendor.check    Fail the build if vendor packages have changed.
    vendor.update   Update vendor dependencies.
    vet             Checks go source code and reports suspicious constructs.
    test.unit.nocov Runs unit tests without coverage (faster for iterative development)
endef
# makefile (from `build/makelib/common.mk', line 55)
ERR = echo ${TIME} ${RED}[FAIL]${CNone}
# default
MAKE_COMMAND := /Library/Developer/CommandLineTools/usr/bin/make
# makefile (from `build/makelib/image.mk', line 102)
BUILD_BASE_ARGS = --pull $(BUILD_ARGS)
 
# makefile (from `build/makelib/common.mk', line 252)
SED_CMD = sed -i -e
# makefile (from `build/makelib/k8s_tools.mk', line 37)
KUSTOMIZE := /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/kustomize-v3.3.0
# default
.VARIABLES := 
# environment
TMPDIR = /var/folders/c3/40rs861j0d93j1mp5t8ms17r0000gn/T/
# automatic
*F = $(notdir $*)
# makefile (from `build/makelib/golang.mk', line 56)
GOOS := darwin
# environment
VSCODE_IPC_HOOK = /Users/justinbarksdale/Library/Application Support/Code/1.68.0-main.sock
# makefile (from `Makefile', line 42)
GO_SUBDIRS = cmd internal apis
# makefile (from `build/makelib/common.mk', line 30)
RED := [31m
# makefile (from `build/makelib/common.mk', line 57)
FAIL = (echo ${TIME} ${RED}[FAIL]${CNone} && false)
# makefile (from `build/makelib/common.mk', line 157)
ARCH := arm64
# makefile
MAKEFLAGS =  --no-print-directory -Rrqp -- $(MAKEOVERRIDES)
# makefile (from `build/makelib/golang.mk', line 80)
GOJUNIT := /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/go-junit-report
# environment
MFLAGS = - --no-print-directory -Rrqp
# automatic
*D = $(patsubst %/,%,$(dir $*))
# makefile (from `build/makelib/k8s_tools.mk', line 36)
KUSTOMIZE_VERSION = v3.3.0
# makefile (from `build/makelib/common.mk', line 28)
BLACK := [30m
# makefile (from `build/makelib/output.mk', line 30)
S3_SYNC := aws s3 sync --only-show-errors
# environment
XPC_SERVICE_NAME = application.com.microsoft.VSCode.28402901.28402907
# makefile (from `build/makelib/golang.mk', line 105)
GO_TEST_OUTPUT := /Users/justinbarksdale/git/provider-jet-palette/_output/tests/darwin_arm64
# makefile (from `Makefile', line 10)
TERRAFORM_PROVIDER_VERSION := 0.7.7
# environment
HOMEBREW_PREFIX = /opt/homebrew
# automatic
+D = $(patsubst %/,%,$(dir $+))
# makefile (from `build/makelib/common.mk', line 34)
YELLOW := [33m
# makefile (from `build/makelib/golang.mk', line 85)
GOHOST := GOOS=darwin GOARCH=arm64 go
# makefile (from `build/makelib/common.mk', line 40)
CYAN := [36m
# automatic
-*-command-variables-*- := PLATFORMS=linux_arm64
# environment
HOMEBREW_REPOSITORY = /opt/homebrew
# makefile (from `Makefile', line 11)
TERRAFORM_PROVIDER_DOWNLOAD_NAME := terraform-provider-spectrocloud
# makefile (from `build/makelib/image.mk', line 82)
REGISTRIES = $(DOCKER_REGISTRY)
# makefile (from `build/makelib/k8s_tools.mk', line 29)
KIND := /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/kind-v0.11.1
# environment
__CF_USER_TEXT_ENCODING = 0x1F5:0x0:0x0
# makefile (from `build/makelib/common.mk', line 106)
HOSTARCH := arm64
# makefile (from `build/makelib/golang.mk', line 104)
GO_TEST_DIR := /Users/justinbarksdale/git/provider-jet-palette/_output/tests
# environment
COMMAND_MODE = unix2003
# makefile (from `build/makelib/common.mk', line 141)
PLATFORM := darwin_arm64
# default
MAKEFILES := 
# makefile (from `build/makelib/common.mk', line 134)
HOST_PLATFORM := darwin_arm64
# makefile (from `build/makelib/common.mk', line 256)
SPACE := $(subst ,, )
# automatic
<F = $(notdir $<)
# makefile (from `Makefile', line 74)
TERRAFORM := /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/terraform-1.1.6
# makefile (from `build/makelib/k8s_tools.mk', line 28)
KIND_VERSION = v0.11.1
# makefile (from `Makefile', line 4)
PROJECT_NAME := provider-jet-palette
# makefile (from `build/makelib/common.mk', line 225)
VERSION_PATCH := v0.0.0-1.g69503ad.dirty
# makefile (from `Makefile', line 135)
define CROSSPLANE_MAKE_HELP
Crossplane Targets:
    cobertura             Generate a coverage report for cobertura applying exclusions on generated files.
    submodules            Update the submodules, such as the common build scripts.
    run                   Run crossplane locally, out-of-cluster. Useful for development.

endef
# makefile (from `build/makelib/common.mk', line 112)
TARGETARCH := arm64
# environment
PAGER = less
# environment
LC_ALL = C
# makefile (from `build/makelib/common.mk', line 137)
TARGET_PLATFORM := darwin_arm64
# makefile (from `Makefile', line 7)
TERRAFORM_VERSION := 1.1.6
# `override' directive (from `build/makelib/common.mk', line 83)
COMMIT_HASH := 69503ad5769b49e91e73cb74c8a9f73465a1c67f
# makefile (from `build/makelib/golang.mk', line 64)
GO_PACKAGES := github.com/crossplane-contrib/provider-jet-palette/cmd/... github.com/crossplane-contrib/provider-jet-palette/internal/... github.com/crossplane-contrib/provider-jet-palette/apis/...
# makefile (from `build/makelib/golang.mk', line 57)
GOARCH := arm64
# makefile (from `build/makelib/k8s_tools.mk', line 40)
OLMBUNDLE_VERSION = v0.4.0
# automatic
^F = $(notdir $^)
# default
SUFFIXES := 
# makefile (from `build/makelib/golang.mk', line 82)
GOIMPORTS := /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/goimports
# makefile (from `build/makelib/common.mk', line 438)
define HELPTEXT
Usage: make [make-options] <target> [options]

Common Targets:
    build        Build source code and other artifacts for host platform.
    build.all    Build source code and other artifacts for all platforms.
    clean        Remove all files created during the build.
    distclean    Remove all files created during the build including cached tools.
    lint         Run lint and code analysis tools.
    help         Show this help info.
    test         Runs unit tests.
    e2e          Runs end-to-end integration tests.
    generate     Run code generation.
    reviewable   Validate that a PR is ready for review.
    check-diff   Ensure the reviewable target doesn't create a git diff.

Common Options:
    DEBUG        Whether to generate debug symbols. Default is 0.
    PLATFORM     The platform to build.
    SUITE        The test suite to run.
    TESTFILTER   Tests to run in a suite.
    V            Set to 1 enable verbose build. Default is 0.

Release Targets:
    publish      Build and publish final releasable artifacts
    promote      Promote a release to a release channel
    tag          Tag a release

Release Options:
    VERSION      The version information for binaries and releases.
    CHANNEL      Sets the release channel. Can be set to master, main, alpha, beta, or stable.

endef
# makefile (from `build/makelib/k8s_tools.mk', line 44)
USE_HELM3 = false
# makefile (from `build/makelib/image.mk', line 56)
MANIFEST_TOOL := /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/manifest-tool-v0.7.0
# makefile (from `build/makelib/golang.mk', line 125)
GO_PKG_BASE_DIR := /Users/justinbarksdale/git/provider-jet-palette/.work/pkg/darwin_arm64
# makefile (from `build/makelib/common.mk', line 173)
ROOT_DIR := /Users/justinbarksdale/git/provider-jet-palette
# makefile (from `build/makelib/golang.mk', line 68)
GO_TEST_FLAGS =  -p $(GO_TEST_PARALLEL)
# makefile (from `build/makelib/common.mk', line 169)
COMMON_SELF_DIR := build/makelib/
# makefile (from `build/makelib/common.mk', line 38)
MAGENTA := [35m
# makefile (from `build/makelib/golang.mk', line 25)
GO_INTEGRATION_TESTS_SUBDIRS = 
# environment
MAKELEVEL := 2
# makefile (from `build/makelib/k8s_tools.mk', line 20)
ISTIO := /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/istioctl-1.8.1
# environment
SHLVL = 2
# environment
AUTOJUMP_ERROR_PATH = /Users/justinbarksdale/Library/autojump/errors.log
# makefile (from `build/makelib/common.mk', line 53)
INFO = echo ${TIME} ${BLUE}[ .. ]${CNone}
# makefile (from `build/makelib/image.mk', line 72)
PRUNE_KEEP = 24
# makefile (from `build/makelib/k8s_tools.mk', line 45)
HELM3_VERSION = v3.7.1
# makefile (from `build/makelib/common.mk', line 259)
define \n


endef
# environment
LANG = C
# makefile (from `Makefile', line 9)
TERRAFORM_PROVIDER_SOURCE := spectrocloud/spectrocloud
# makefile (from `build/makelib/k8s_tools.mk', line 19)
ISTIO_VERSION = 1.8.1
# environment
VSCODE_PID = 58784
# makefile (from `build/makelib/common.mk', line 224)
VERSION_MINOR := v0.0.0-1.g69503ad.dirty
# makefile (from `build/makelib/image.mk', line 84)
IMAGE_PLATFORMS := linux/arm64
# makefile (from `Makefile', line 13)
TERRAFORM_NATIVE_PROVIDER_BINARY := terraform-provider-spectrocloud_v0.7.7
 
# variable set hash-table stats:
# Load=246/1024=24%, Rehash=0, Collisions=130/869=15%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 16777233, inode 28689582): 19 files, no impossibilities.

# 19 files, no impossibilities in 1 directories.

# Implicit Rules

do.build.platform.%:
#  commands to execute (from `build/makelib/common.mk', line 316):
	@$(MAKE) build.check.platform PLATFORM=$*
	@$(MAKE) build.code.platform PLATFORM=$*
	

do.build.artifacts.%:
#  commands to execute (from `build/makelib/common.mk', line 322):
	@$(MAKE) build.artifacts.platform PLATFORM=$*
	

img.release.manifest.publish.%: img.release.publish /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/manifest-tool-v0.7.0
#  commands to execute (from `build/makelib/image.mk', line 218):
	@$(MANIFEST_TOOL) push from-args --platforms $(IMAGE_PLATFORMS) --template $(DOCKER_REGISTRY)/$*-ARCH:$(VERSION) --target $(DOCKER_REGISTRY)/$*:$(VERSION) || $(FAIL)
	

img.release.manifest.promote.%: img.release.promote /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/manifest-tool-v0.7.0
#  commands to execute (from `build/makelib/image.mk', line 221):
	@[ "$(CHANNEL)" = "master" ] || $(MANIFEST_TOOL) push from-args --platforms $(IMAGE_PLATFORMS) --template $(DOCKER_REGISTRY)/$*-ARCH:$(VERSION) --target $(DOCKER_REGISTRY)/$*:$(VERSION)-$(CHANNEL) || $(FAIL)
	@$(MANIFEST_TOOL) push from-args --platforms $(IMAGE_PLATFORMS) --template $(DOCKER_REGISTRY)/$*-ARCH:$(VERSION) --target $(DOCKER_REGISTRY)/$*:$(CHANNEL) || $(FAIL)
	

do.build.image.%:
#  commands to execute (from `build/makelib/image.mk', line 234):
	@$(MAKE) -C $(IMAGE_DIR)/$* PLATFORM=$(PLATFORM)
	

# 5 implicit rules, 0 (0.0%) terminal.

# Files

/Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/golangci-lint-v1.31.0:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/golang.mk', line 341):
	@$(INFO) installing golangci-lint-v$(GOLANGCILINT_VERSION) $(SAFEHOSTPLATFORM)
	@mkdir -p $(TOOLS_HOST_DIR)/tmp-golangci-lint || $(FAIL)
	@curl -fsSL https://github.com/golangci/golangci-lint/releases/download/v$(GOLANGCILINT_VERSION)/golangci-lint-$(GOLANGCILINT_VERSION)-$(SAFEHOSTPLATFORM).tar.gz | tar -xz --strip-components=1 -C $(TOOLS_HOST_DIR)/tmp-golangci-lint || $(FAIL)
	@mv $(TOOLS_HOST_DIR)/tmp-golangci-lint/golangci-lint $(GOLANGCILINT) || $(FAIL)
	@rm -fr $(TOOLS_HOST_DIR)/tmp-golangci-lint
	@$(OK) installing golangci-lint-v$(GOLANGCILINT_VERSION) $(SAFEHOSTPLATFORM)
	

build.init: go.init output.init
#  Phony target (prerequisite of .PHONY).
#  Command-line target.
#  Implicit rule search has not been done.
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/18=0%
#  commands to execute (from `build/makelib/common.mk', line 288):
	@:
	

/Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/dep-v0.5.1:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/golang.mk', line 333):
	@$(INFO) installing dep-$(DEP_VERSION) $(SAFEHOSTPLATFORM)
	@mkdir -p $(TOOLS_HOST_DIR)/tmp-dep || $(FAIL)
	@curl -fsSL -o $(DEP) https://github.com/golang/dep/releases/download/$(DEP_VERSION)/dep-$(SAFEHOSTPLATFORM) || $(FAIL)
	@chmod +x $(DEP) || $(FAIL)
	@rm -fr $(TOOLS_HOST_DIR)/tmp-dep
	@$(OK) installing dep-$(DEP_VERSION) $(SAFEHOSTPLATFORM)
	

/Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/kind-v0.11.1:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/k8s_tools.mk', line 83):
	@$(INFO) installing kind $(KIND_VERSION)
	@mkdir -p $(TOOLS_HOST_DIR) || $(FAIL)
	@curl -fsSLo $(KIND) https://github.com/kubernetes-sigs/kind/releases/download/$(KIND_VERSION)/kind-$(SAFEHOSTPLATFORM) || $(FAIL)
	@chmod +x $(KIND)
	@$(OK) installing kind $(KIND_VERSION)
	

build.code.platform: go.build
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 302):
	@:
	

build.artifacts.platform: do.build.images
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 308):
	@:
	

go.clean:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/golang.mk', line 260):
	@# `go modules` creates read-only folders under WORK_DIR
	@# make all folders within WORK_DIR writable, so they can be deleted
	@if [ -d $(WORK_DIR) ]; then chmod -R +w $(WORK_DIR); fi 
	@rm -fr $(GO_BIN_DIR) $(GO_TEST_DIR)
	

e2e:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 376):
	@$(MAKE) e2e.init
	@$(MAKE) e2e.run
	@$(MAKE) e2e.done
	

# Not a target:
build/makelib/output.mk:
#  A default, MAKEFILES, or -include/sinclude makefile.
#  Implicit rule search has been done.
#  Last modified 2022-04-25 19:38:25
#  File has been updated.
#  Successfully updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/0=0%

test.run: go.test.unit
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 362):
	@:
	

cobertura:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 113):
	@cat $(GO_TEST_OUTPUT)/coverage.txt | \
	grep -v zz_ | \
	$(GOCOVER_COBERTURA) > $(GO_TEST_OUTPUT)/cobertura-coverage.xml
	

go.vendor.lite:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: `'
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# automatic
# @ := go.vendor.lite
# automatic
# % := 
# automatic
# * := 
# automatic
# + := 
# automatic
# | := 
# automatic
# < := 
# automatic
# ^ := 
# automatic
# ? := 
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=15/26=58%
#  commands to execute (from `build/makelib/golang.mk', line 217):
	@$(INFO) verify dependencies have expected content
	@$(GOHOST) mod verify || $(FAIL)
	@$(OK) go modules dependencies verified
	

debug.nuke:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/image.mk', line 170):
	@for c in $$(docker ps -a -q --no-trunc); do \
	if [ "$$c" != "$(SELF_CID)" ]; then \
	echo stopping and removing container $${c}; \
	docker stop $${c}; \
	docker rm $${c}; \
	fi; \
	done
	@for i in $$(docker images -q); do \
	echo removing image $$i; \
	docker rmi -f $$i > /dev/null 2>&1; \
	done
	

img.release.clean.crossplane.provider-jet-palette-controller.arm64:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/image.mk', line 215):
	@[ -z "$$(docker images -q crossplane/provider-jet-palette-controller-arm64:v0.0.0-1.g69503ad.dirty)" ] || docker rmi crossplane/provider-jet-palette-controller-arm64:v0.0.0-1.g69503ad.dirty
	@[ -z "$$(docker images -q crossplane/provider-jet-palette-controller-arm64:v0.0.0-1.g69503ad.dirty-master)" ] || docker rmi crossplane/provider-jet-palette-controller-arm64:v0.0.0-1.g69503ad.dirty-master
 
	@[ -z "$$(docker images -q crossplane/provider-jet-palette-controller-arm64:master)" ] || docker rmi crossplane/provider-jet-palette-controller-arm64:master
	

vendor.check: go.vendor.check
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

/Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/kustomize-v3.3.0:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/k8s_tools.mk', line 98):
	@$(INFO) installing kustomize $(KUSTOMIZE_VERSION)
	@mkdir -p $(TOOLS_HOST_DIR)/tmp-kustomize
	@curl -fsSL https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize/$(KUSTOMIZE_VERSION)/kustomize_$(KUSTOMIZE_VERSION)_$(SAFEHOST_PLATFORM).tar.gz | tar -xz -C $(TOOLS_HOST_DIR)/tmp-kustomize
	@mv $(TOOLS_HOST_DIR)/tmp-kustomize/kustomize $(KUSTOMIZE)
	@rm -fr $(TOOLS_HOST_DIR)/tmp-kustomize
	@$(OK) installing kustomize $(KUSTOMIZE_VERSION)
	

all: build
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

go.test.unit: /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/go-junit-report /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/gocover-cobertura
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/golang.mk', line 163):
	@$(INFO) go test unit-tests
	@mkdir -p $(GO_TEST_OUTPUT)
	@CGO_ENABLED=$(GO_CGO_ENABLED) $(GOHOST) test -i -cover $(GO_STATIC_FLAGS) $(GO_PACKAGES) || $(FAIL)
	@CGO_ENABLED=$(GO_CGO_ENABLED) $(GOHOST) test -v -covermode=$(GO_COVER_MODE) -coverprofile=$(GO_TEST_OUTPUT)/coverage.txt $(GO_TEST_FLAGS) $(GO_STATIC_FLAGS) $(GO_PACKAGES) 2>&1 | tee $(GO_TEST_OUTPUT)/unit-tests.log || $(FAIL)
	@cat $(GO_TEST_OUTPUT)/unit-tests.log | $(GOJUNIT) -set-exit-code > $(GO_TEST_OUTPUT)/unit-tests.xml || $(FAIL)
	@$(GOCOVER_COBERTURA) < $(GO_TEST_OUTPUT)/coverage.txt > $(GO_TEST_OUTPUT)/coverage.xml
	@$(OK) go test unit-tests
	

do.build.artifacts.%:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

/Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/helm-v2.17.0:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/k8s_tools.mk', line 115):
	@$(INFO) installing helm $(HELM_VERSION)
	@mkdir -p $(TOOLS_HOST_DIR)/tmp-helm
	@curl -fsSL https://get.helm.sh/helm-$(HELM_VERSION)-$(SAFEHOSTPLATFORM).tar.gz | tar -xz -C $(TOOLS_HOST_DIR)/tmp-helm
	@mv $(TOOLS_HOST_DIR)/tmp-helm/$(SAFEHOSTPLATFORM)/helm $(HELM)
	@rm -fr $(TOOLS_HOST_DIR)/tmp-helm
	@$(OK) installing helm $(HELM_VERSION)
	

.PHONY: all build.init build.check build.check.platform build.code build.code.platform build.artifacts build.artifacts.platform build.done do.build.platform.% do.build.platform do.build.artifacts.% do.build.artifacts build.all build clean distclean lint test test.init test.run test.done e2e.init e2e.run e2e.done publish.init publish.artifacts publish promote.init promote.artifacts promote tag generate reviewable check-diff help help-special go.init go.build go.install go.test.unit go.test.integration go.test.codecov go.lint go.vet go.fmt go.generate go.validate go.vendor.lite go.vendor go.vendor.check go.vendor.update go.clean go.distclean fmt vendor vet go.help prune img.help config/schema.json cobertura submodules fallthrough run crds.clean crossplane.help help-special
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

img.cache:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/image.mk', line 140):
	@for i in $(CACHE_IMAGES); do \
	IMGID=$$(docker images -q $$i); \
	if [ -n "$$IMGID" ]; then \
	echo === caching image $$i; \
	CACHE_IMAGE=$(CACHE_REGISTRY)/$${i#*/}; \
	docker tag $$i $${CACHE_IMAGE}:$(CACHE_TAG); \
	for r in $$(docker images --format "{{.ID}}#{{.Repository}}:{{.Tag}}" | grep $$IMGID | grep $(CACHE_REGISTRY)/ | grep -v $${CACHE_IMAGE}:$(CACHE_TAG)); do \
	docker rmi $${r#*#} > /dev/null 2>&1 || true; \
	done; \
	fi; \
	done
	

promote.artifacts: img.release.manifest.promote.provider-jet-palette img.release.manifest.promote.provider-jet-palette-controller
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 402):
	@:
	

# Not a target:
build/makelib/golang.mk:
#  A default, MAKEFILES, or -include/sinclude makefile.
#  Implicit rule search has been done.
#  Last modified 2022-04-25 19:38:25
#  File has been updated.
#  Successfully updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/0=0%

generate.init: config/schema.json go.init
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 413):
	@:
	

/Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/helm-v3.7.1:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/k8s_tools.mk', line 125):
	@$(INFO) installing helm3 $(HELM_VERSION)
	@mkdir -p $(TOOLS_HOST_DIR)/tmp-helm3
	@curl -fsSL https://get.helm.sh/helm-$(HELM3_VERSION)-$(SAFEHOSTPLATFORM).tar.gz | tar -xz -C $(TOOLS_HOST_DIR)/tmp-helm3
	@mv $(TOOLS_HOST_DIR)/tmp-helm3/$(SAFEHOSTPLATFORM)/helm $(HELM3)
	@rm -fr $(TOOLS_HOST_DIR)/tmp-helm3
	@$(OK) installing helm3 $(HELM_VERSION)
	

go.validate: go.vet go.fmt
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

submodules:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 119):
	@git submodule sync
	@git submodule update --init --recursive
	

distclean: clean go.distclean
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 349):
	@rm -fr $(CACHE_DIR)
	

img.prune:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/image.mk', line 154):
	@$(INFO) pruning images older than $(PRUNE_HOURS) keeping a minimum of $(PRUNE_KEEP) images
	@EXPIRED=$$(docker images --format "{{.Tag}}#{{.Repository}}:{{.Tag}}" \
	| grep -E '$(CACHE_REGISTRY)/' \
	| sort -r \
	| awk -v i=0 -v cd="$(CACHE_PRUNE_DATE)" -F  "#" '{if ($$1 <= cd && i >= $(PRUNE_KEEP)) print $$2; i++ }') &&\
	for i in $$EXPIRED; do \
	echo removing expired cache image $$i; \
	[ $(PRUNE_DRYRUN) = 1 ] || docker rmi $$i > /dev/null 2>&1 || true; \
	done
	@for i in $$(docker images -q -f dangling=true); do \
	echo removing dangling image $$i; \
	docker rmi $$i > /dev/null 2>&1 || true; \
	done
	@$(OK) pruning
	

# Not a target:
do.build.image.provider-jet-palette:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
img.release.manifest.promote.provider-jet-palette-controller:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

e2e.done:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 373):
	@:
	

go.fmt.simplify: /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/gofmt1.11
 
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/golang.mk', line 208):
	@$(INFO) gofmt simplify
	@$(GOFMT) -l -s -w $(GO_SUBDIRS) $(GO_INTEGRATION_TESTS_SUBDIRS) || $(FAIL)
	@$(OK) gofmt simplify
	

img.release.promote: img.release.promote.crossplane.provider-jet-palette.arm64 img.release.promote.crossplane.provider-jet-palette-controller.arm64
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

fallthrough: submodules
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 69):
	@echo Initial setup complete. Running make again . . .
	@make
	

go.vet:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/golang.mk', line 198):
	@$(INFO) go vet $(PLATFORM)
	@CGO_ENABLED=0 $(GOHOST) vet $(GO_COMMON_FLAGS) $(GO_PACKAGES) $(GO_INTEGRATION_TEST_PACKAGES) || $(FAIL)
	@$(OK) go vet $(PLATFORM)
	

.SUFFIXES:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

/Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/goimports:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/golang.mk', line 357):
	@$(INFO) installing goimports
	@mkdir -p $(TOOLS_HOST_DIR)/tmp-goimports || $(FAIL)
	@GO111MODULE=off GOPATH=$(TOOLS_HOST_DIR)/tmp-goimports GOBIN=$(TOOLS_HOST_DIR) $(GOHOST) get golang.org/x/tools/cmd/goimports || rm -fr $(TOOLS_HOST_DIR)/tmp-goimports || $(FAIL)
	@rm -fr $(TOOLS_HOST_DIR)/tmp-goimports
	@$(OK) installing goimports
	

go.generate:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/golang.mk', line 270):
	@$(INFO) go generate $(PLATFORM)
	@CGO_ENABLED=0 $(GOHOST) generate $(GO_GENERATE_FLAGS) $(GO_PACKAGES) $(GO_INTEGRATION_TEST_PACKAGES) || $(FAIL)
	@$(OK) go generate $(PLATFORM)
	@$(INFO) go mod tidy
	@$(GOHOST) mod tidy || $(FAIL)
	@$(OK) go mod tidy
	

generate.run: go.generate
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 414):
	@:
	

# Not a target:
Makefile:
#  Implicit rule search has been done.
#  Last modified 2022-06-08 06:53:48
#  File has been updated.
#  Successfully updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/0=0%

publish.init: img.release.build
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 388):
	@:
	

build.clean: output.clean
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

common.buildvars:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 268):
	@echo PROJECT_NAME=$(PROJECT_NAME)
	@echo PROJECT_REPO=$(PROJECT_REPO)
	@echo BUILD_HOST=$(HOSTNAME)
	@echo BUILD_REGISTRY=$(BUILD_REGISTRY)
	@echo DOCKER_REGISTRY=$(DOCKER_REGISTRY)
	@echo OUTPUT_DIR=$(OUTPUT_DIR)
	@echo WORK_DIR=$(WORK_DIR)
	@echo CACHE_DIR=$(CACHE_DIR)
	@echo HOSTOS=$(HOSTOS)
	@echo HOSTARCH=$(HOSTARCH)
	@echo SAFEHOSTARCH=$(SAFEHOSTARCH)
	@echo TARGETARCH=$(TARGETARCH)
	

img.release.build.crossplane.provider-jet-palette.arm64:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/image.mk', line 215):
	@echo `date +%H:%M:%S` [34m[ .. ][0m docker build crossplane/provider-jet-palette-arm64:v0.0.0-1.g69503ad.dirty
	@docker tag build-e2886f39/provider-jet-palette-arm64 crossplane/provider-jet-palette-arm64:v0.0.0-1.g69503ad.dirty || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
	@# Save image as _output/images/linux_<arch>/<image>.tar.gz (no builds for darwin or windows)
	@mkdir -p /Users/justinbarksdale/git/provider-jet-palette/_output/images/linux_arm64 || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
	@docker save build-e2886f39/provider-jet-palette-arm64 | gzip -c > /Users/justinbarksdale/git/provider-jet-palette/_output/images/linux_arm64/provider-jet-palette.tar.gz || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
	@echo `date +%H:%M:%S` [32m[ OK ][0m docker build crossplane/provider-jet-palette-arm64:v0.0.0-1.g69503ad.dirty
	

go.test.integration: /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/go-junit-report
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/golang.mk', line 184):
	@$(INFO) go test integration-tests
	@mkdir -p $(GO_TEST_OUTPUT) || $(FAIL)
	@CGO_ENABLED=0 $(GOHOST) test -i $(GO_STATIC_FLAGS) $(GO_INTEGRATION_TEST_PACKAGES) || $(FAIL)
	@CGO_ENABLED=0 $(GOHOST) test $(GO_TEST_FLAGS) $(GO_STATIC_FLAGS) $(GO_INTEGRATION_TEST_PACKAGES) $(TEST_FILTER_PARAM) 2>&1 | tee $(GO_TEST_OUTPUT)/integration-tests.log || $(FAIL)
	@cat $(GO_TEST_OUTPUT)/integration-tests.log | $(GOJUNIT) -set-exit-code > $(GO_TEST_OUTPUT)/integration-tests.xml || $(FAIL)
	@$(OK) go test integration-tests
	

test:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 366):
	@$(MAKE) test.init
	@$(MAKE) test.run
	@$(MAKE) test.done
	

img.release.clean: img.release.clean.crossplane.provider-jet-palette.arm64 img.release.clean.crossplane.provider-jet-palette-controller.arm64
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

imports: go.imports
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

build:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 338):
	@$(MAKE) build.all PLATFORMS="$(BUILD_PLATFORMS)"
	

fmt.simplify: go.fmt.simplify
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

do.build.platform.%:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

# Not a target:
go.imports.fix:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
build/makelib/image.mk:
#  A default, MAKEFILES, or -include/sinclude makefile.
#  Implicit rule search has been done.
#  Last modified 2022-04-25 19:38:25
#  File has been updated.
#  Successfully updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/0=0%

vet: go.vet
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

/Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/kubectl-v1.22.2:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/k8s_tools.mk', line 91):
	@$(INFO) installing kubectl $(KUBECTL_VERSION)
	@curl -fsSLo $(KUBECTL) https://storage.googleapis.com/kubernetes-release/release/$(KUBECTL_VERSION)/bin/$(HOSTOS)/$(SAFEHOSTARCH)/kubectl || $(FAIL)
	@chmod +x $(KUBECTL)
	@$(OK) installing kubectl $(KUBECTL_VERSION)
	

version.isdirty:
#  Implicit rule search has not been done.
 
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 243):
	@if [[ $(VERSION) = *.dirty ]]; then \
	$(ERR) version '$(VERSION)' is dirty aborting publish. The following files changed: ;\
	git status --short;\
	exit 1; \
	fi
	

go.cachedir:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 108):
	@go env GOCACHE
	

config/schema.json: /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/terraform-1.1.6
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 88):
	@$(INFO) generating provider schema for $(TERRAFORM_PROVIDER_SOURCE) $(TERRAFORM_PROVIDER_VERSION)
	@mkdir -p $(TERRAFORM_WORKDIR)
	@echo '{"terraform":[{"required_providers":[{"provider":{"source":"'"$(TERRAFORM_PROVIDER_SOURCE)"'","version":"'"$(TERRAFORM_PROVIDER_VERSION)"'"}}],"required_version":"'"$(TERRAFORM_VERSION)"'"}]}' > $(TERRAFORM_WORKDIR)/main.tf.json
	@$(TERRAFORM) -chdir=$(TERRAFORM_WORKDIR) init > $(TERRAFORM_WORKDIR)/terraform-logs.txt 2>&1
	@$(TERRAFORM) -chdir=$(TERRAFORM_WORKDIR) providers schema -json=true > $(TERRAFORM_PROVIDER_SCHEMA) 2>> $(TERRAFORM_WORKDIR)/terraform-logs.txt
	@$(OK) generating provider schema for $(TERRAFORM_PROVIDER_SOURCE) $(TERRAFORM_PROVIDER_VERSION)
	

img.release.publish.crossplane.provider-jet-palette.arm64:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/image.mk', line 215):
	@echo `date +%H:%M:%S` [34m[ .. ][0m docker push crossplane/provider-jet-palette-arm64:v0.0.0-1.g69503ad.dirty
	@docker push crossplane/provider-jet-palette-arm64:v0.0.0-1.g69503ad.dirty || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
	@echo `date +%H:%M:%S` [32m[ OK ][0m docker push crossplane/provider-jet-palette-arm64:v0.0.0-1.g69503ad.dirty
	

build.all:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 327):
	@$(MAKE) build.init
	@$(MAKE) build.check
	@$(MAKE) build.code
	@$(MAKE) do.build.platform
	@$(MAKE) build.artifacts
	@$(MAKE) do.build.artifacts
	@$(MAKE) build.done
	

go.vendor.update:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/golang.mk', line 222):
	@$(INFO) update go modules
	@$(GOHOST) get -u ./... || $(FAIL)
	@$(OK) update go modules
	

tag: release.tag
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

help:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 476):
	@echo "$$HELPTEXT"
	@$(MAKE) help-special
	

test.done:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 363):
	@:
	

imports.fix: go.imports.fix
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

lint.init: go.init
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 352):
	@:
	

output.init:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/output.mk', line 37):
	@mkdir -p $(OUTPUT_DIR)
	@echo "$(VERSION)" > $(OUTPUT_DIR)/version
	

/Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/manifest-tool-v0.7.0:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/image.mk', line 290):
	@$(INFO) installing manifest-tool $(MANIFEST_TOOL_VERSION)
	@mkdir -p $(TOOLS_HOST_DIR) || $(FAIL)
	@curl -fsSL https://github.com/estesp/manifest-tool/releases/download/$(MANIFEST_TOOL_VERSION)/manifest-tool-$(HOSTOS)-$(SAFEHOSTARCH) > $@ || $(FAIL)
	@chmod +x $@ || $(FAIL)
	@$(OK) installing manifest-tool $(MANIFEST_TOOL_VERSION)
	

build.check: go.lint
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 292):
	@:
	

build.done: img.cache img.done
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 312):
	@:
	

generate:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 418):
	@$(MAKE) generate.init
	@$(MAKE) generate.run
	@$(MAKE) generate.done
	

# Not a target:
do.build.image.provider-jet-palette-controller:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

/Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/gofmt1.11:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/golang.mk', line 349):
	@$(INFO) installing gofmt$(GOFMT_VERSION)
	@mkdir -p $(TOOLS_HOST_DIR)/tmp-fmt || $(FAIL)
	@curl -sL https://dl.google.com/go/go$(GOFMT_VERSION).$(SAFEHOSTPLATFORM).tar.gz | tar -xz -C $(TOOLS_HOST_DIR)/tmp-fmt || $(FAIL)
	@mv $(TOOLS_HOST_DIR)/tmp-fmt/go/bin/gofmt $(GOFMT) || $(FAIL)
	@rm -fr $(TOOLS_HOST_DIR)/tmp-fmt
	@$(OK) installing gofmt$(GOFMT_VERSION)
	

go.build:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/golang.mk', line 152):
	@$(INFO) go build $(PLATFORM)
	$(foreach p,$(GO_STATIC_PACKAGES),@CGO_ENABLED=0 $(GO) build -v -i -o $(GO_OUT_DIR)/$(lastword $(subst /, ,$(p)))$(GO_OUT_EXT) $(GO_STATIC_FLAGS) $(p) || $(FAIL) ${\n})
	$(foreach p,$(GO_TEST_PACKAGES) $(GO_LONGHAUL_TEST_PACKAGES),@CGO_ENABLED=0 $(GO) test -i -c -o $(GO_TEST_OUTPUT)/$(lastword $(subst /, ,$(p)))$(GO_OUT_EXT) $(GO_STATIC_FLAGS) $(p) || $(FAIL) ${\n})
	@$(OK) go build $(PLATFORM)
	

check-diff: generate
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 430):
	@$(INFO) checking that branch is clean
	@if git status --porcelain | grep . ; then $(FAIL); else $(OK) branch is clean; fi
	

prune: img.prune
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

/Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/go-junit-report:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/golang.mk', line 364):
	@$(INFO) installing go-junit-report
	@mkdir -p $(TOOLS_HOST_DIR)/tmp-junit || $(FAIL)
	@GO111MODULE=off GOPATH=$(TOOLS_HOST_DIR)/tmp-junit GOBIN=$(TOOLS_HOST_DIR) $(GOHOST) get github.com/jstemmer/go-junit-report || rm -fr $(TOOLS_HOST_DIR)/tmp-junit || $(FAIL)
	@rm -fr $(TOOLS_HOST_DIR)/tmp-junit
	@$(OK) installing go-junit-report
	

promote.init:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
 
#  commands to execute (from `build/makelib/common.mk', line 399):
	@:
	

build.code:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 299):
	@:
	

lint.run: go.lint
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 353):
	@:
	

/Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/terraform-1.1.6:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 79):
	@$(INFO) installing terraform $(HOSTOS)-$(HOSTARCH)
	@mkdir -p $(TOOLS_HOST_DIR)/tmp-terraform
	@curl -fsSL https://releases.hashicorp.com/terraform/$(TERRAFORM_VERSION)/terraform_$(TERRAFORM_VERSION)_$(SAFEHOST_PLATFORM).zip -o $(TOOLS_HOST_DIR)/tmp-terraform/terraform.zip
	@unzip $(TOOLS_HOST_DIR)/tmp-terraform/terraform.zip -d $(TOOLS_HOST_DIR)/tmp-terraform
	@mv $(TOOLS_HOST_DIR)/tmp-terraform/terraform $(TERRAFORM)
	@rm -fr $(TOOLS_HOST_DIR)/tmp-terraform
	@$(OK) installing terraform $(HOSTOS)-$(HOSTARCH)
	

vendor.update: go.vendor.update
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

build.artifacts:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 305):
	@:
	

img.release.build.crossplane.provider-jet-palette-controller.arm64:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/image.mk', line 215):
	@echo `date +%H:%M:%S` [34m[ .. ][0m docker build crossplane/provider-jet-palette-controller-arm64:v0.0.0-1.g69503ad.dirty
	@docker tag build-e2886f39/provider-jet-palette-controller-arm64 crossplane/provider-jet-palette-controller-arm64:v0.0.0-1.g69503ad.dirty || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
	@# Save image as _output/images/linux_<arch>/<image>.tar.gz (no builds for darwin or windows)
	@mkdir -p /Users/justinbarksdale/git/provider-jet-palette/_output/images/linux_arm64 || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
	@docker save build-e2886f39/provider-jet-palette-controller-arm64 | gzip -c > /Users/justinbarksdale/git/provider-jet-palette/_output/images/linux_arm64/provider-jet-palette-controller.tar.gz || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
	@echo `date +%H:%M:%S` [32m[ OK ][0m docker build crossplane/provider-jet-palette-controller-arm64:v0.0.0-1.g69503ad.dirty
	

img.help:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/image.mk', line 280):
	@echo "$$IMAGE_HELPTEXT"
	

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
do.build.artifacts.linux_arm64:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

/Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/olm-bundle-v0.4.0:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/k8s_tools.mk', line 107):
	@$(INFO) installing olm-bundle $(OLMBUNDLE_VERSION)
	@curl -fsSLo $(OLMBUNDLE) https://github.com/upbound/olm-bundle/releases/download/$(OLMBUNDLE_VERSION)/olm-bundle_$(SAFEHOSTPLATFORM) || $(FAIL)
	@chmod +x $(OLMBUNDLE)
	@$(OK) installing olm-bundle $(OLMBUNDLE_VERSION)
	

publish: version.isdirty
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 395):
	@$(MAKE) publish.init
	@$(MAKE) publish.artifacts
	

# Not a target:
img.release.manifest.publish.provider-jet-palette:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

img.release.publish: img.release.publish.crossplane.provider-jet-palette.arm64 img.release.publish.crossplane.provider-jet-palette-controller.arm64
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

img.clean:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/image.mk', line 132):
	@$(INFO) cleaning images for $(BUILD_REGISTRY)
	@$(MAKE) do.img.clean CLEAN_IMAGES="$(shell docker images | grep -E '^$(BUILD_REGISTRY)/' | awk '{print $$1":"$$2}')"
	@$(OK) cleaning images for $(BUILD_REGISTRY)
	

release.tag:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 229):
	$(error invalid version $(VERSION). must be a semantic version with v[Major].[Minor].[Patch] only)
	@$(INFO) tagging commit hash $(COMMIT_HASH) with v$(VERSION_MAJOR).$(VERSION_MINOR).$(VERSION_PATCH)
	git tag -f -m "release $(VERSION)" v$(VERSION_MAJOR).$(VERSION_MINOR).$(VERSION_PATCH) $(COMMIT_HASH)
	git push $(REMOTE_NAME) v$(VERSION_MAJOR).$(VERSION_MINOR).$(VERSION_PATCH)
	@set -e; if ! git ls-remote --heads $(REMOTE_NAME) | grep -q refs/heads/release-$(VERSION_MAJOR).$(VERSION_MINOR); then \
	echo === creating new release branch release-$(VERSION_MAJOR).$(VERSION_MINOR) ;\
	git branch -f release-$(VERSION_MAJOR).$(VERSION_MINOR) $(COMMIT_HASH) ;\
	git push $(REMOTE_NAME) release-$(VERSION_MAJOR).$(VERSION_MINOR) ;\
	fi
	@$(OK) tagging
	

do.img.clean:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/image.mk', line 116):
	@for i in $(CLEAN_IMAGES); do \
	if [ -n "$$(docker images -q $$i)" ]; then \
	for c in $$(docker ps -a -q --no-trunc --filter=ancestor=$$i); do \
	if [ "$$c" != "$(SELF_CID)" ]; then \
	echo stopping and removing container $${c} referencing image $$i; \
	docker stop $${c}; \
	docker rm $${c}; \
	fi; \
	done; \
	echo cleaning image $$i; \
	docker rmi $$i > /dev/null 2>&1 || true; \
	fi; \
	done
	

generate.done:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 415):
	@:
	

run: go.build
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 126):
	@$(INFO) Running Crossplane locally out-of-cluster . . .
	@# To see other arguments that can be provided, run the command with --help instead
	$(GO_OUT_DIR)/provider --debug
	

clean: img.clean img.release.clean go.clean
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 345):
	@rm -fr $(OUTPUT_DIR) $(WORK_DIR)
	

# Not a target:
build/makelib/common.mk:
#  A default, MAKEFILES, or -include/sinclude makefile.
#  Implicit rule search has been done.
#  Last modified 2022-04-25 19:38:25
#  File has been updated.
#  Successfully updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/0=0%

go.fmt: /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/gofmt1.11
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/golang.mk', line 203):
	@$(INFO) go fmt
	@gofmt_out=$$($(GOFMT) -s -d -e $(GO_SUBDIRS) $(GO_INTEGRATION_TESTS_SUBDIRS) 2>&1) && [ -z "$${gofmt_out}" ] || (echo "$${gofmt_out}" 1>&2; $(FAIL))
 
	@$(OK) go fmt
	

img.release.promote.crossplane.provider-jet-palette.arm64:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/image.mk', line 215):
	@echo `date +%H:%M:%S` [34m[ .. ][0m docker promote crossplane/provider-jet-palette-arm64:v0.0.0-1.g69503ad.dirty to crossplane/provider-jet-palette-arm64:master
	@docker pull crossplane/provider-jet-palette-arm64:v0.0.0-1.g69503ad.dirty || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
	@[ "master" = "master" ] || docker tag crossplane/provider-jet-palette-arm64:v0.0.0-1.g69503ad.dirty crossplane/provider-jet-palette-arm64:v0.0.0-1.g69503ad.dirty-master || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
	@docker tag crossplane/provider-jet-palette-arm64:v0.0.0-1.g69503ad.dirty crossplane/provider-jet-palette-arm64:master || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
	@[ "master" = "master" ] || docker push crossplane/provider-jet-palette-arm64:v0.0.0-1.g69503ad.dirty-master
	@docker push crossplane/provider-jet-palette-arm64:master || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
	@echo `date +%H:%M:%S` [32m[ OK ][0m docker promote crossplane/provider-jet-palette-arm64:v0.0.0-1.g69503ad.dirty to crossplane/provider-jet-palette-arm64:master || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
	

e2e.init:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 371):
	@:
	

img.release.publish.crossplane.provider-jet-palette-controller.arm64:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/image.mk', line 215):
	@echo `date +%H:%M:%S` [34m[ .. ][0m docker push crossplane/provider-jet-palette-controller-arm64:v0.0.0-1.g69503ad.dirty
	@docker push crossplane/provider-jet-palette-controller-arm64:v0.0.0-1.g69503ad.dirty || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
	@echo `date +%H:%M:%S` [32m[ OK ][0m docker push crossplane/provider-jet-palette-controller-arm64:v0.0.0-1.g69503ad.dirty
	

/Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/gocover-cobertura:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/golang.mk', line 371):
	@$(INFO) installing gocover-cobertura
	@mkdir -p $(TOOLS_HOST_DIR)/tmp-gocover-cobertura || $(FAIL)
	@GO111MODULE=off GOPATH=$(TOOLS_HOST_DIR)/tmp-gocover-cobertura GOBIN=$(TOOLS_HOST_DIR) $(GOHOST) get github.com/t-yuki/gocover-cobertura || rm -fr $(TOOLS_HOST_DIR)/tmp-covcover-cobertura || $(FAIL)
	@rm -fr $(TOOLS_HOST_DIR)/tmp-gocover-cobertura
	@$(OK) installing gocover-cobertura
	

build.vars: common.buildvars k8s_tools.buildvars
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

go.init: go.vendor.lite
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/18=0%
#  commands to execute (from `build/makelib/golang.mk', line 147):
	@if [ "$(GO111MODULE)" != "on" ] && [ "$(realpath ../../../..)" !=  "$(realpath $(GOPATH))" ]; then \
	$(WARN) the source directory is not relative to the GOPATH at $(GOPATH) or you are you using symlinks. The build might run into issue. Please move the source directory to be at $(GOPATH)/src/$(GO_PROJECT) ;\
	fi
	

do.build.artifacts: do.build.artifacts.linux_arm64
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

go.help:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/golang.mk', line 323):
	@echo "$$GO_HELPTEXT"
	

crds.clean:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

output.clean:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/output.mk', line 41):
	@rm -fr $(OUTPUT_DIR)
	@$(INFO) skipped publishing outputs to an s3 bucket since 'S3_BUCKET' is not set
	

img.release.clean.crossplane.provider-jet-palette.arm64:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/image.mk', line 215):
	@[ -z "$$(docker images -q crossplane/provider-jet-palette-arm64:v0.0.0-1.g69503ad.dirty)" ] || docker rmi crossplane/provider-jet-palette-arm64:v0.0.0-1.g69503ad.dirty
	@[ -z "$$(docker images -q crossplane/provider-jet-palette-arm64:v0.0.0-1.g69503ad.dirty-master)" ] || docker rmi crossplane/provider-jet-palette-arm64:v0.0.0-1.g69503ad.dirty-master
	@[ -z "$$(docker images -q crossplane/provider-jet-palette-arm64:master)" ] || docker rmi crossplane/provider-jet-palette-arm64:master
	

/Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/istioctl-1.8.1:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/k8s_tools.mk', line 74):
	@$(INFO) installing istio $(ISTIO_VERSION)
	@mkdir -p $(TOOLS_HOST_DIR)/tmp-istio || $(FAIL)
	@curl --progress-bar -fsSL https://github.com/istio/istio/releases/download/$(ISTIO_VERSION)/istio-$(ISTIO_VERSION)-$(ISTIO_DOWNLOAD_TUPLE).tar.gz | tar -xz -C $(TOOLS_HOST_DIR)/tmp-istio || $(FAIL)
	@mv $(TOOLS_HOST_DIR)/tmp-istio/istio-$(ISTIO_VERSION)/bin/istioctl $(ISTIO) || $(FAIL)
	@rm -fr $(TOOLS_HOST_DIR)/tmp-istio || $(FAIL)
	@$(OK) $(ISTIO) installing istio $(ISTIO_VERSION)
	

e2e.run:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 372):
	@:
	

k8s_tools.buildvars:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/k8s_tools.mk', line 61):
	@echo KIND=$(KIND)
	@echo KUBECTL=$(KUBECTL)
	@echo KUSTOMIZE=$(KUSTOMIZE)
	@echo HELM=$(HELM)
	@echo HELM3=$(HELM3)
	

fmt: go.imports
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

img.release.build: img.release.build.crossplane.provider-jet-palette.arm64 img.release.build.crossplane.provider-jet-palette-controller.arm64
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

go.vendor:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/golang.mk', line 227):
	@$(INFO) go mod vendor
	@$(GOHOST) mod vendor || $(FAIL)
	@$(OK) go mod vendor
	

lint:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 356):
	@$(MAKE) lint.init
	@$(MAKE) lint.run
	@$(MAKE) lint.done
	

# Not a target:
build/makelib/k8s_tools.mk:
#  A default, MAKEFILES, or -include/sinclude makefile.
#  Implicit rule search has been done.
#  Last modified 2022-04-25 19:38:25
#  File has been updated.
#  Successfully updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/0=0%

# Not a target:
do.build.platform.linux_arm64:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

 
publish.artifacts: img.release.manifest.publish.provider-jet-palette img.release.manifest.publish.provider-jet-palette-controller
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 391):
	@:
	

# Not a target:
go.imports:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

reviewable:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 424):
	@$(MAKE) generate
	@$(MAKE) lint
	@$(MAKE) test
	

crossplane.help:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 147):
	@echo "$$CROSSPLANE_MAKE_HELP"
	

img.done:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/image.mk', line 137):
	@rm -fr $(IMAGE_TEMP_DIR)
	

do.build.images: do.build.image.provider-jet-palette do.build.image.provider-jet-palette-controller
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/image.mk', line 235):
	

promote:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 406):
	@$(MAKE) promote.init
	@$(MAKE) promote.artifacts
	

# Not a target:
img.release.manifest.promote.provider-jet-palette:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

help-special: img.help crossplane.help go.help
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 473):
	@:
	

go.distclean:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/golang.mk', line 267):
	@rm -rf $(GO_VENDOR_DIR) $(GO_PKG_DIR)
	

# Not a target:
img.release.manifest.publish.provider-jet-palette-controller:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

vendor: go.vendor
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

build.check.platform:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 296):
	@:
	

test.init: go.init
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 361):
	@:
	

go.vendor.check:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/golang.mk', line 217):
	@$(INFO) verify dependencies have expected content
	@$(GOHOST) mod verify || $(FAIL)
	@$(OK) go modules dependencies verified
	

go.lint: /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/golangci-lint-v1.31.0
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/golang.mk', line 192):
	@$(INFO) golangci-lint
	@mkdir -p $(GO_LINT_OUTPUT)
	@$(GOLANGCILINT) run $(GO_LINT_ARGS) || $(FAIL)
	@$(OK) golangci-lint
	

lint.done:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 354):
	@:
	

go.install:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/golang.mk', line 158):
	@$(INFO) go install $(PLATFORM)
	$(foreach p,$(GO_STATIC_PACKAGES),@CGO_ENABLED=0 $(GO) install -v $(GO_STATIC_FLAGS) $(p) || $(FAIL) ${\n})
	@$(OK) go install $(PLATFORM)
	

go.test.codecov:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/golang.mk', line 179):
	@$(INFO) go test codecov
	@cd $(GO_TEST_OUTPUT) && bash <(curl -s https://codecov.io/bash) || $(FAIL)
	@$(OK) go test codecov
	

do.build.platform: do.build.platform.linux_arm64
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

img.release.promote.crossplane.provider-jet-palette-controller.arm64:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/image.mk', line 215):
	@echo `date +%H:%M:%S` [34m[ .. ][0m docker promote crossplane/provider-jet-palette-controller-arm64:v0.0.0-1.g69503ad.dirty to crossplane/provider-jet-palette-controller-arm64:master
	@docker pull crossplane/provider-jet-palette-controller-arm64:v0.0.0-1.g69503ad.dirty || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
	@[ "master" = "master" ] || docker tag crossplane/provider-jet-palette-controller-arm64:v0.0.0-1.g69503ad.dirty crossplane/provider-jet-palette-controller-arm64:v0.0.0-1.g69503ad.dirty-master || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
	@docker tag crossplane/provider-jet-palette-controller-arm64:v0.0.0-1.g69503ad.dirty crossplane/provider-jet-palette-controller-arm64:master || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
	@[ "master" = "master" ] || docker push crossplane/provider-jet-palette-controller-arm64:v0.0.0-1.g69503ad.dirty-master
	@docker push crossplane/provider-jet-palette-controller-arm64:master || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
	@echo `date +%H:%M:%S` [32m[ OK ][0m docker promote crossplane/provider-jet-palette-controller-arm64:v0.0.0-1.g69503ad.dirty to crossplane/provider-jet-palette-controller-arm64:master || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
	

# files hash-table stats:
# Load=142/1024=14%, Rehash=0, Collisions=31/336=9%
# VPATH Search Paths

# No `vpath' search paths.

# No general (`VPATH' variable) search path.

# # of strings in strcache: 6
# # of strcache buffers: 1
# strcache size: total = 4096 / max = 4096 / min = 4096 / avg = 4096
# strcache free: total = 3965 / max = 3965 / min = 3965 / avg = 3965

# Finished Make data base on Fri Jun 10 08:39:42 2022

 
make[1]: *** [build.all] Error 1


# Make data base, printed on Fri Jun 10 08:39:42 2022

# Variables

# makefile (from `build/makelib/golang.mk', line 28)
GO_VENDOR_DIR = vendor
# automatic
<D = $(patsubst %/,%,$(dir $<))
# automatic
 
?F = $(notdir $?)
# makefile (from `build/makelib/golang.mk', line 107)
GO_LINT_OUTPUT := /Users/justinbarksdale/git/provider-jet-palette/_output/lint/darwin_arm64
# makefile (from `build/makelib/golang.mk', line 39)
GO_CGO_ENABLED = 0
# makefile (from `build/makelib/image.mk', line 87)
CACHEBUST = 0
# makefile (from `build/makelib/k8s_tools.mk', line 41)
OLMBUNDLE := /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/olm-bundle-v0.4.0
# makefile (from `build/makelib/image.mk', line 183)
define repo.targets
img.release.build.$(1).$(2).$(3):
	@$(INFO) docker build $(1)/$(2)-$(3):$(VERSION)
	@docker tag $(BUILD_REGISTRY)/$(2)-$(3) $(1)/$(2)-$(3):$(VERSION) || $(FAIL)
	@# Save image as _output/images/linux_<arch>/<image>.tar.gz (no builds for darwin or windows)
	@mkdir -p $(OUTPUT_DIR)/images/linux_$(3) || $(FAIL)
	@docker save $(BUILD_REGISTRY)/$(2)-$(3) | gzip -c > $(OUTPUT_DIR)/images/linux_$(3)/$(2).tar.gz || $(FAIL)
	@$(OK) docker build $(1)/$(2)-$(3):$(VERSION)
img.release.build: img.release.build.$(1).$(2).$(3)

img.release.publish.$(1).$(2).$(3):
	@$(INFO) docker push $(1)/$(2)-$(3):$(VERSION)
	@docker push $(1)/$(2)-$(3):$(VERSION) || $(FAIL)
	@$(OK) docker push $(1)/$(2)-$(3):$(VERSION)
img.release.publish: img.release.publish.$(1).$(2).$(3)

img.release.promote.$(1).$(2).$(3):
	@$(INFO) docker promote $(1)/$(2)-$(3):$(VERSION) to $(1)/$(2)-$(3):$(CHANNEL)
	@docker pull $(1)/$(2)-$(3):$(VERSION) || $(FAIL)
	@[ "$(CHANNEL)" = "master" ] || docker tag $(1)/$(2)-$(3):$(VERSION) $(1)/$(2)-$(3):$(VERSION)-$(CHANNEL) || $(FAIL)
	@docker tag $(1)/$(2)-$(3):$(VERSION) $(1)/$(2)-$(3):$(CHANNEL) || $(FAIL)
	@[ "$(CHANNEL)" = "master" ] || docker push $(1)/$(2)-$(3):$(VERSION)-$(CHANNEL)
	@docker push $(1)/$(2)-$(3):$(CHANNEL) || $(FAIL)
	@$(OK) docker promote $(1)/$(2)-$(3):$(VERSION) to $(1)/$(2)-$(3):$(CHANNEL) || $(FAIL)
img.release.promote: img.release.promote.$(1).$(2).$(3)

img.release.clean.$(1).$(2).$(3):
	@[ -z "$$$$(docker images -q $(1)/$(2)-$(3):$(VERSION))" ] || docker rmi $(1)/$(2)-$(3):$(VERSION)
	@[ -z "$$$$(docker images -q $(1)/$(2)-$(3):$(VERSION)-$(CHANNEL))" ] || docker rmi $(1)/$(2)-$(3):$(VERSION)-$(CHANNEL)
	@[ -z "$$$$(docker images -q $(1)/$(2)-$(3):$(CHANNEL))" ] || docker rmi $(1)/$(2)-$(3):$(CHANNEL)
img.release.clean: img.release.clean.$(1).$(2).$(3)
endef
# makefile (from `build/makelib/k8s_tools.mk', line 24)
ISTIO_DOWNLOAD_TUPLE := osx
# environment
VSCODE_LOG_NATIVE = false
# makefile (from `build/makelib/common.mk', line 90)
REMOTE_NAME = origin
# makefile (from `build/makelib/image.mk', line 75)
PRUNE_DRYRUN = 0
# automatic
?D = $(patsubst %/,%,$(dir $?))
# makefile (from `Makefile', line 38)
GO_TEST_PARALLEL := 5
# makefile (from `build/makelib/golang.mk', line 38)
GO_COVER_MODE = count
# automatic
@D = $(patsubst %/,%,$(dir $@))
# automatic
@F = $(notdir $@)
# makefile (from `Makefile', line 12)
TERRAFORM_PROVIDER_DOWNLOAD_URL_PREFIX := https://github.com/spectrocloud/terraform-provider-spectrocloud/releases/download/v0.7.7
# makefile
CURDIR := /Users/justinbarksdale/git/provider-jet-palette
# makefile (from `build/makelib/common.mk', line 56)
OK = echo ${TIME} ${GREEN}[ OK ]${CNone}
# makefile (from `build/makelib/common.mk', line 19)
SHELL := /bin/bash
# makefile (from `build/makelib/image.mk', line 94)
BUILD_ARGS = -q
# makefile (from `build/makelib/golang.mk', line 84)
GO := go
# makefile (from `build/makelib/common.mk', line 63)
V = 0
# environment
VSCODE_NLS_CONFIG = {"locale":"en-us","availableLanguages":{},"_languagePackSupport":true}
# makefile (from `build/makelib/image.mk', line 52)
BUILD_REGISTRY := build-e2886f39
# environment
_ = /Library/Developer/CommandLineTools/usr/bin/make
# makefile (from `build/makelib/common.mk', line 35)
YELLOW_BOLD := [33;1m
# makefile (from `build/makelib/common.mk', line 36)
BLUE := [34m
# makefile (from `build/makelib/golang.mk', line 126)
GO_PKG_STATIC_FLAGS := -pkgdir /Users/justinbarksdale/git/provider-jet-palette/.work/pkg/darwin_arm64_static
# makefile (from `build/makelib/common.mk', line 196)
TOOLS_HOST_DIR := /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64
# makefile (from `build/makelib/golang.mk', line 86)
GO_VERSION := 1.17
# makefile (from `Makefile', line 55)
IMAGES = provider-jet-palette provider-jet-palette-controller
# makefile (from `Makefile', line 40)
GO_STATIC_PACKAGES = $(GO_PROJECT)/cmd/provider
# makefile (from `build/makelib/image.mk', line 1)
MAKEFILE_LIST :=  Makefile build/makelib/common.mk build/makelib/output.mk build/makelib/golang.mk build/makelib/k8s_tools.mk build/makelib/image.mk
# makefile (from `build/makelib/common.mk', line 43)
WHITE_BOLD := [37;1m
# makefile (from `Makefile', line 43)
GO111MODULE = on
# makefile (from `build/makelib/image.mk', line 265)
define IMAGE_HELPTEXT
DEPRECATED: this module has been replaced by imagelight.mk and may be removed in the future. 

Image Targets:
    prune        Prune orphaned and cached images.

Image Options:
    PRUNE_HOURS  The number of hours from when an image is last used for it to be
                 considered a target for pruning. Default is 48 hrs.
    PRUNE_KEEP   The minimum number of cached images to keep. Default is 24 images.

endef
# makefile (from `build/makelib/common.mk', line 71)
DEBUG = 0
# makefile (from `build/makelib/common.mk', line 185)
WORK_DIR := /Users/justinbarksdale/git/provider-jet-palette/.work
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
# environment
AUTOJUMP_SOURCED = 1
# environment
VERSION = v0.0.0-1.g69503ad.dirty
# environment
VSCODE_VERBOSE_LOGGING = true
# makefile (from `build/makelib/output.mk', line 31)
S3_SYNC_DEL := aws s3 sync --only-show-errors --delete
# environment
__CFBundleIdentifier = com.microsoft.VSCode
# environment
INFOPATH = /opt/homebrew/share/info:
# makefile (from `build/makelib/common.mk', line 221)
VERSION_REGEX := ^v\([0-9]*\)[.]\([0-9]*\)[.]\([0-9]*\)$$
# makefile (from `build/makelib/common.mk', line 254)
COMMA := ,
# environment
VSCODE_IPC_HOOK_EXTHOST = /var/folders/c3/40rs861j0d93j1mp5t8ms17r0000gn/T/vscode-ipc-511c51b0-5321-487a-9bdc-ed6820668847.sock
# makefile (from `build/makelib/golang.mk', line 102)
GO_BIN_DIR := /Users/justinbarksdale/git/provider-jet-palette/_output/bin
# environment
VSCODE_CWD = /
# makefile (from `build/makelib/common.mk', line 49)
TIME_LONG = `date +%Y-%m-%d' '%H:%M:%S`
# environment
GOPROXY = https://proxy.golang.org,direct
# makefile (from `Makefile', line 76)
TERRAFORM_PROVIDER_SCHEMA := config/schema.json
# makefile (from `build/makelib/image.mk', line 41)
OSBASEIMAGE = arm64v8/$(OSBASE)
# makefile (from `build/makelib/golang.mk', line 65)
GO_INTEGRATION_TEST_PACKAGES := 
# makefile (from `build/makelib/image.mk', line 37)
OSBASE = alpine:3.13
# environment
PATH = /Users/justinbarksdale/.krew/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion Tech Preview.app/Contents/Public:/Users/justinbarksdale/go/bin
# makefile (from `build/makelib/common.mk', line 149)
BUILD_PLATFORMS = linux_$(TARGETARCH)
# makefile (from `build/makelib/golang.mk', line 90)
GOFMT_VERSION := 1.11
# makefile (from `build/makelib/golang.mk', line 100)
GOLANGCILINT := /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/golangci-lint-v1.31.0
# makefile (from `build/makelib/k8s_tools.mk', line 46)
HELM3 := /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/helm-v3.7.1
# makefile (from `build/makelib/common.mk', line 31)
RED_BOLD := [31;1m
 
# makefile (from `build/makelib/golang.mk', line 79)
DEP := /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/dep-v0.5.1
# environment
LSCOLORS = Gxfxcxdxbxegedabagacad
# makefile (from `build/makelib/golang.mk', line 32)
GO_BUILDFLAGS = 
# makefile (from `build/makelib/common.mk', line 29)
BLACK_BOLD := [30;1m
# makefile (from `build/makelib/golang.mk', line 99)
GOLANGCILINT_VERSION = 1.31.0
# makefile (from `Makefile', line 5)
PROJECT_REPO := github.com/crossplane-contrib/provider-jet-palette
# makefile (from `build/makelib/common.mk', line 135)
SAFEHOSTPLATFORM := darwin-amd64
# makefile (from `build/makelib/k8s_tools.mk', line 21)
ISTIOOS := darwin
# makefile (from `build/makelib/common.mk', line 41)
CYAN_BOLD := [36;1m
# makefile (from `build/makelib/golang.mk', line 78)
DEP_VERSION = v0.5.1
# makefile (from `build/makelib/golang.mk', line 29)
GO_PKG_DIR = $(WORK_DIR)/pkg
# makefile (from `build/makelib/golang.mk', line 139)
GOPATH = $(abspath $(GO_PKG_DIR))
# makefile (from `build/makelib/k8s_tools.mk', line 54)
HELM := /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/helm-v2.17.0
# makefile (from `build/makelib/image.mk', line 55)
MANIFEST_TOOL_VERSION = v0.7.0
# environment
VSCODE_LOG_STACK = false
# environment
ELECTRON_RUN_AS_NODE = 1
# makefile (from `build/makelib/image.mk', line 23)
IMAGE_DIR := /Users/justinbarksdale/git/provider-jet-palette/cluster/images
# makefile (from `build/makelib/golang.mk', line 52)
GO_LDFLAGS = -X $(GO_PROJECT)/internal/version.Version=$(VERSION) -s -w
# makefile (from `build/makelib/image.mk', line 83)
IMAGE_ARCHS := arm64
# default
.FEATURES := target-specific order-only second-expansion else-if archives jobserver check-symlink
# makefile (from `build/makelib/golang.mk', line 81)
GOCOVER_COBERTURA := /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/gocover-cobertura
# makefile (from `build/makelib/k8s_tools.mk', line 53)
HELM_VERSION = v2.17.0
# makefile (from `build/makelib/golang.mk', line 61)
GOHOSTOS := darwin
# makefile (from `build/makelib/golang.mk', line 106)
GO_LINT_DIR := /Users/justinbarksdale/git/provider-jet-palette/_output/lint
# makefile (from `build/makelib/image.mk', line 79)
CACHE_PRUNE_DATE := 2022-06-08.123942
# environment
SSH_AUTH_SOCK = /private/tmp/com.apple.launchd.DAYjhAYmzc/Listeners
# automatic
%F = $(notdir $%)
# makefile (from `build/makelib/golang.mk', line 19)
GO_PROJECT = $(PROJECT_REPO)
# makefile (from `build/makelib/image.mk', line 78)
CACHE_DATE_FORMAT := "%Y-%m-%d.%H%M%S"
# makefile (from `build/makelib/common.mk', line 51)
TIME = $(TIME_SHORT)
# makefile (from `build/makelib/common.mk', line 156)
OS := darwin
# makefile (from `build/makelib/k8s_tools.mk', line 33)
KUBECTL := /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/kubectl-v1.22.2
# makefile (from `build/makelib/common.mk', line 77)
CHANNEL = master
# makefile (from `build/makelib/common.mk', line 87)
BRANCH_NAME := main
# command line
PLATFORMS = linux_arm64
# makefile (from `build/makelib/golang.mk', line 34)
GO_TAGS = 
# makefile (from `build/makelib/common.mk', line 222)
VERSION_VALID := 0
# environment
VSCODE_PIPE_LOGGING = true
# makefile (from `build/makelib/image.mk', line 66)
CACHE_REGISTRY := cache
# environment
PWD = /Users/justinbarksdale/git/provider-jet-palette
# makefile (from `build/makelib/k8s_tools.mk', line 32)
KUBECTL_VERSION = v1.22.2
# environment
HOMEBREW_CELLAR = /opt/homebrew/Cellar
# makefile (from `build/makelib/common.mk', line 195)
TOOLS_DIR := /Users/justinbarksdale/git/provider-jet-palette/.cache/tools
# makefile (from `build/makelib/golang.mk', line 131)
GO_GENERATE_FLAGS = $(GO_BUILDFLAGS) -tags 'generate $(GO_TAGS)'
# makefile (from `build/makelib/common.mk', line 37)
BLUE_BOLD := [34;1m
# makefile (from `build/makelib/common.mk', line 111)
SAFEHOSTARCH := amd64
# environment
ORIGINAL_XDG_CURRENT_DESKTOP = undefined
# makefile (from `build/makelib/common.mk', line 32)
GREEN := [32m
# makefile (from `build/makelib/common.mk', line 136)
SAFEHOST_PLATFORM := darwin_amd64
# environment
MANPATH = /opt/homebrew/share/man::
# environment
GOMODCACHE = /Users/justinbarksdale/go/pkg/mod
# environment
HOME = /Users/justinbarksdale
# makefile (from `build/makelib/image.mk', line 80)
CACHE_TAG := 2022-06-10.123942
# makefile (from `build/makelib/common.mk', line 192)
CACHE_DIR := /Users/justinbarksdale/git/provider-jet-palette/.cache
# default
MAKEFILEPATH = $(shell /usr/bin/xcode-select -print-path 2>/dev/null || echo /Developer)/Makefiles
# environment
VSCODE_CODE_CACHE_PATH = /Users/justinbarksdale/Library/Application Support/Code/CachedData/4af164ea3a06f701fe3e89a2bcbb421d2026b68f
# makefile (from `build/makelib/common.mk', line 54)
WARN = echo ${TIME} ${YELLOW}[WARN]${CNone}
# environment
LOGNAME = justinbarksdale
# makefile (from `build/makelib/common.mk', line 39)
MAGENTA_BOLD := [35;1m
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = 1
# makefile (from `build/makelib/golang.mk', line 94)
GOFMT := /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/gofmt1.11
# automatic
+F = $(notdir $+)
# makefile (from `build/makelib/image.mk', line 27)
IMAGE_OUTPUT_DIR := /Users/justinbarksdale/git/provider-jet-palette/_output/images/darwin_arm64
# makefile (from `Makefile', line 75)
TERRAFORM_WORKDIR := /Users/justinbarksdale/git/provider-jet-palette/.work/terraform
# environment
ZSH = /Users/justinbarksdale/.oh-my-zsh
# makefile (from `build/makelib/image.mk', line 31)
IMAGE_TEMP_DIR := /var/folders/c3/40rs861j0d93j1mp5t8ms17r0000gn/T/tmp.6gv7ATvh
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# makefile (from `build/makelib/output.mk', line 29)
S3_CP := aws s3 cp --only-show-errors
# automatic
^D = $(patsubst %/,%,$(dir $^))
# makefile (from `build/makelib/common.mk', line 44)
CNone := [0m
# makefile (from `build/makelib/common.mk', line 202)
HOSTNAME := jb-2.local
# makefile (from `build/makelib/golang.mk', line 62)
GOHOSTARCH := arm64
# makefile (from `build/makelib/common.mk', line 178)
OUTPUT_DIR := /Users/justinbarksdale/git/provider-jet-palette/_output
# environment
XPC_FLAGS = 0x0
# default
MAKE = $(MAKE_COMMAND)
# default
MAKECMDGOALS := build.all
# makefile (from `build/makelib/common.mk', line 50)
TIME_SHORT = `date +%H:%M:%S`
# makefile (from `Makefile', line 54)
DOCKER_REGISTRY = crossplane
# environment
PULL = 1
# makefile (from `build/makelib/common.mk', line 42)
WHITE := [37m
# makefile (from `build/makelib/image.mk', line 69)
PRUNE_HOURS = 48
# makefile (from `build/makelib/golang.mk', line 129)
GO_COMMON_FLAGS = $(GO_BUILDFLAGS) -tags '$(GO_TAGS)'
# environment
MAKEOVERRIDES = ${-*-command-variables-*-}
# default
MAKE_VERSION := 3.81
# environment
USER = justinbarksdale
# makefile (from `build/makelib/common.mk', line 160)
NPROCS := 10
# makefile (from `build/makelib/common.mk', line 100)
HOSTOS := darwin
# makefile (from `build/makelib/golang.mk', line 36)
GO_TEST_SUITE = 
# makefile
.DEFAULT_GOAL := all
# makefile (from `build/makelib/common.mk', line 33)
GREEN_BOLD := [32;1m
# makefile (from `build/makelib/image.mk', line 106)
TINI_VERSION = v0.16.1
# makefile (from `build/makelib/golang.mk', line 130)
GO_STATIC_FLAGS = $(GO_COMMON_FLAGS) $(GO_PKG_STATIC_FLAGS) -installsuffix static  -ldflags '$(GO_LDFLAGS)'
# makefile (from `build/makelib/common.mk', line 223)
VERSION_MAJOR := v0.0.0-1.g69503ad.dirty
# makefile (from `build/makelib/golang.mk', line 37)
GO_NOCOV = 
# environment
LESS = -R
# automatic
%D = $(patsubst %/,%,$(dir $%))
# makefile (from `build/makelib/golang.mk', line 103)
GO_OUT_DIR := /Users/justinbarksdale/git/provider-jet-palette/_output/bin/darwin_arm64
# makefile (from `build/makelib/golang.mk', line 307)
define GO_HELPTEXT
Go Targets:
    generate        Runs go code generation followed by goimports on generated files.
    fmt             Checks go source code for formatting issues.
    fmt.simplify    Format, simplify, update source files.
    imports         Checks go source code import lines for issues.
    imports.fix     Updates go source files to fix issues with import lines.
 
    vendor          Updates vendor packages.
    vendor.check    Fail the build if vendor packages have changed.
    vendor.update   Update vendor dependencies.
    vet             Checks go source code and reports suspicious constructs.
    test.unit.nocov Runs unit tests without coverage (faster for iterative development)
endef
# makefile (from `build/makelib/common.mk', line 55)
ERR = echo ${TIME} ${RED}[FAIL]${CNone}
# default
MAKE_COMMAND := /Library/Developer/CommandLineTools/usr/bin/make
# makefile (from `build/makelib/image.mk', line 102)
BUILD_BASE_ARGS = --pull $(BUILD_ARGS)
# makefile (from `build/makelib/common.mk', line 252)
SED_CMD = sed -i -e
# makefile (from `build/makelib/k8s_tools.mk', line 37)
KUSTOMIZE := /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/kustomize-v3.3.0
# default
.VARIABLES := 
# environment
TMPDIR = /var/folders/c3/40rs861j0d93j1mp5t8ms17r0000gn/T/
# automatic
*F = $(notdir $*)
# makefile (from `build/makelib/golang.mk', line 56)
GOOS := darwin
# environment
VSCODE_IPC_HOOK = /Users/justinbarksdale/Library/Application Support/Code/1.68.0-main.sock
# makefile (from `Makefile', line 42)
GO_SUBDIRS = cmd internal apis
# makefile (from `build/makelib/common.mk', line 30)
RED := [31m
# makefile (from `build/makelib/common.mk', line 438)
define HELPTEXT
Usage: make [make-options] <target> [options]

Common Targets:
    build        Build source code and other artifacts for host platform.
    build.all    Build source code and other artifacts for all platforms.
    clean        Remove all files created during the build.
    distclean    Remove all files created during the build including cached tools.
    lint         Run lint and code analysis tools.
    help         Show this help info.
    test         Runs unit tests.
    e2e          Runs end-to-end integration tests.
    generate     Run code generation.
    reviewable   Validate that a PR is ready for review.
    check-diff   Ensure the reviewable target doesn't create a git diff.

Common Options:
    DEBUG        Whether to generate debug symbols. Default is 0.
    PLATFORM     The platform to build.
    SUITE        The test suite to run.
    TESTFILTER   Tests to run in a suite.
    V            Set to 1 enable verbose build. Default is 0.

Release Targets:
    publish      Build and publish final releasable artifacts
    promote      Promote a release to a release channel
    tag          Tag a release

Release Options:
    VERSION      The version information for binaries and releases.
    CHANNEL      Sets the release channel. Can be set to master, main, alpha, beta, or stable.

endef
# makefile (from `build/makelib/common.mk', line 57)
FAIL = (echo ${TIME} ${RED}[FAIL]${CNone} && false)
# makefile (from `build/makelib/common.mk', line 157)
ARCH := arm64
# makefile
MAKEFLAGS =  --no-print-directory -Rrqp -- $(MAKEOVERRIDES)
# makefile (from `build/makelib/golang.mk', line 80)
GOJUNIT := /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/go-junit-report
# environment
MFLAGS = - --no-print-directory -Rrqp
# automatic
*D = $(patsubst %/,%,$(dir $*))
# makefile (from `build/makelib/k8s_tools.mk', line 36)
KUSTOMIZE_VERSION = v3.3.0
# makefile (from `build/makelib/common.mk', line 28)
BLACK := [30m
# makefile (from `build/makelib/output.mk', line 30)
S3_SYNC := aws s3 sync --only-show-errors
# environment
XPC_SERVICE_NAME = application.com.microsoft.VSCode.28402901.28402907
# makefile (from `build/makelib/golang.mk', line 105)
GO_TEST_OUTPUT := /Users/justinbarksdale/git/provider-jet-palette/_output/tests/darwin_arm64
# makefile (from `Makefile', line 10)
TERRAFORM_PROVIDER_VERSION := 0.7.7
# environment
HOMEBREW_PREFIX = /opt/homebrew
# automatic
+D = $(patsubst %/,%,$(dir $+))
# makefile (from `build/makelib/common.mk', line 34)
YELLOW := [33m
# makefile (from `build/makelib/golang.mk', line 85)
GOHOST := GOOS=darwin GOARCH=arm64 go
# makefile (from `build/makelib/common.mk', line 40)
CYAN := [36m
# automatic
-*-command-variables-*- := PLATFORMS=linux_arm64
# environment
HOMEBREW_REPOSITORY = /opt/homebrew
# makefile (from `Makefile', line 11)
TERRAFORM_PROVIDER_DOWNLOAD_NAME := terraform-provider-spectrocloud
# makefile (from `build/makelib/image.mk', line 82)
REGISTRIES = $(DOCKER_REGISTRY)
# makefile (from `build/makelib/k8s_tools.mk', line 29)
KIND := /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/kind-v0.11.1
# environment
__CF_USER_TEXT_ENCODING = 0x1F5:0x0:0x0
# makefile (from `build/makelib/common.mk', line 106)
HOSTARCH := arm64
# makefile (from `build/makelib/golang.mk', line 104)
GO_TEST_DIR := /Users/justinbarksdale/git/provider-jet-palette/_output/tests
# environment
COMMAND_MODE = unix2003
# makefile (from `build/makelib/common.mk', line 141)
PLATFORM := darwin_arm64
# default
MAKEFILES := 
# makefile (from `build/makelib/common.mk', line 134)
HOST_PLATFORM := darwin_arm64
# makefile (from `build/makelib/common.mk', line 256)
SPACE := $(subst ,, )
# automatic
<F = $(notdir $<)
# makefile (from `Makefile', line 74)
TERRAFORM := /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/terraform-1.1.6
# makefile (from `build/makelib/k8s_tools.mk', line 28)
KIND_VERSION = v0.11.1
# makefile (from `Makefile', line 4)
PROJECT_NAME := provider-jet-palette
# makefile (from `build/makelib/common.mk', line 225)
VERSION_PATCH := v0.0.0-1.g69503ad.dirty
# makefile (from `Makefile', line 135)
define CROSSPLANE_MAKE_HELP
Crossplane Targets:
    cobertura             Generate a coverage report for cobertura applying exclusions on generated files.
    submodules            Update the submodules, such as the common build scripts.
    run                   Run crossplane locally, out-of-cluster. Useful for development.

endef
# makefile (from `build/makelib/common.mk', line 112)
TARGETARCH := arm64
# environment
PAGER = less
# environment
LC_ALL = C
# makefile (from `build/makelib/common.mk', line 137)
TARGET_PLATFORM := darwin_arm64
# makefile (from `Makefile', line 7)
TERRAFORM_VERSION := 1.1.6
# `override' directive (from `build/makelib/common.mk', line 83)
COMMIT_HASH := 69503ad5769b49e91e73cb74c8a9f73465a1c67f
# makefile (from `build/makelib/golang.mk', line 64)
GO_PACKAGES := github.com/crossplane-contrib/provider-jet-palette/cmd/... github.com/crossplane-contrib/provider-jet-palette/internal/... github.com/crossplane-contrib/provider-jet-palette/apis/...
# makefile (from `build/makelib/golang.mk', line 57)
GOARCH := arm64
# makefile (from `build/makelib/k8s_tools.mk', line 40)
OLMBUNDLE_VERSION = v0.4.0
# automatic
^F = $(notdir $^)
# default
SUFFIXES := 
# makefile (from `build/makelib/golang.mk', line 82)
GOIMPORTS := /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/goimports
# makefile (from `Makefile', line 13)
TERRAFORM_NATIVE_PROVIDER_BINARY := terraform-provider-spectrocloud_v0.7.7
# makefile (from `build/makelib/k8s_tools.mk', line 44)
USE_HELM3 = false
# makefile (from `build/makelib/image.mk', line 56)
MANIFEST_TOOL := /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/manifest-tool-v0.7.0
# makefile (from `build/makelib/golang.mk', line 125)
GO_PKG_BASE_DIR := /Users/justinbarksdale/git/provider-jet-palette/.work/pkg/darwin_arm64
# makefile (from `build/makelib/common.mk', line 173)
ROOT_DIR := /Users/justinbarksdale/git/provider-jet-palette
# makefile (from `build/makelib/golang.mk', line 68)
GO_TEST_FLAGS =  -p $(GO_TEST_PARALLEL)
# makefile (from `build/makelib/common.mk', line 169)
COMMON_SELF_DIR := build/makelib/
# makefile (from `build/makelib/common.mk', line 38)
MAGENTA := [35m
# makefile (from `build/makelib/golang.mk', line 25)
GO_INTEGRATION_TESTS_SUBDIRS = 
# environment
MAKELEVEL := 1
# makefile (from `build/makelib/k8s_tools.mk', line 20)
ISTIO := /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/istioctl-1.8.1
# environment
SHLVL = 2
# environment
AUTOJUMP_ERROR_PATH = /Users/justinbarksdale/Library/autojump/errors.log
# makefile (from `build/makelib/common.mk', line 53)
INFO = echo ${TIME} ${BLUE}[ .. ]${CNone}
 
# makefile (from `build/makelib/image.mk', line 72)
PRUNE_KEEP = 24
# makefile (from `build/makelib/k8s_tools.mk', line 45)
HELM3_VERSION = v3.7.1
# makefile (from `build/makelib/common.mk', line 259)
define \n


endef
# environment
LANG = C
# makefile (from `Makefile', line 9)
TERRAFORM_PROVIDER_SOURCE := spectrocloud/spectrocloud
# makefile (from `build/makelib/k8s_tools.mk', line 19)
ISTIO_VERSION = 1.8.1
# environment
VSCODE_PID = 58784
# makefile (from `build/makelib/common.mk', line 224)
VERSION_MINOR := v0.0.0-1.g69503ad.dirty
# makefile (from `build/makelib/image.mk', line 84)
IMAGE_PLATFORMS := linux/arm64
# variable set hash-table stats:
# Load=246/1024=24%, Rehash=0, Collisions=128/869=15%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 16777233, inode 28689582): 19 files, no impossibilities.

# 19 files, no impossibilities in 1 directories.

# Implicit Rules

do.build.platform.%:
#  commands to execute (from `build/makelib/common.mk', line 316):
	@$(MAKE) build.check.platform PLATFORM=$*
	@$(MAKE) build.code.platform PLATFORM=$*
	

do.build.artifacts.%:
#  commands to execute (from `build/makelib/common.mk', line 322):
	@$(MAKE) build.artifacts.platform PLATFORM=$*
	

img.release.manifest.publish.%: img.release.publish /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/manifest-tool-v0.7.0
#  commands to execute (from `build/makelib/image.mk', line 218):
	@$(MANIFEST_TOOL) push from-args --platforms $(IMAGE_PLATFORMS) --template $(DOCKER_REGISTRY)/$*-ARCH:$(VERSION) --target $(DOCKER_REGISTRY)/$*:$(VERSION) || $(FAIL)
	

img.release.manifest.promote.%: img.release.promote /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/manifest-tool-v0.7.0
#  commands to execute (from `build/makelib/image.mk', line 221):
	@[ "$(CHANNEL)" = "master" ] || $(MANIFEST_TOOL) push from-args --platforms $(IMAGE_PLATFORMS) --template $(DOCKER_REGISTRY)/$*-ARCH:$(VERSION) --target $(DOCKER_REGISTRY)/$*:$(VERSION)-$(CHANNEL) || $(FAIL)
	@$(MANIFEST_TOOL) push from-args --platforms $(IMAGE_PLATFORMS) --template $(DOCKER_REGISTRY)/$*-ARCH:$(VERSION) --target $(DOCKER_REGISTRY)/$*:$(CHANNEL) || $(FAIL)
	

do.build.image.%:
#  commands to execute (from `build/makelib/image.mk', line 234):
	@$(MAKE) -C $(IMAGE_DIR)/$* PLATFORM=$(PLATFORM)
	

# 5 implicit rules, 0 (0.0%) terminal.

# Files

/Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/golangci-lint-v1.31.0:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/golang.mk', line 341):
	@$(INFO) installing golangci-lint-v$(GOLANGCILINT_VERSION) $(SAFEHOSTPLATFORM)
	@mkdir -p $(TOOLS_HOST_DIR)/tmp-golangci-lint || $(FAIL)
	@curl -fsSL https://github.com/golangci/golangci-lint/releases/download/v$(GOLANGCILINT_VERSION)/golangci-lint-$(GOLANGCILINT_VERSION)-$(SAFEHOSTPLATFORM).tar.gz | tar -xz --strip-components=1 -C $(TOOLS_HOST_DIR)/tmp-golangci-lint || $(FAIL)
	@mv $(TOOLS_HOST_DIR)/tmp-golangci-lint/golangci-lint $(GOLANGCILINT) || $(FAIL)
	@rm -fr $(TOOLS_HOST_DIR)/tmp-golangci-lint
	@$(OK) installing golangci-lint-v$(GOLANGCILINT_VERSION) $(SAFEHOSTPLATFORM)
	

build.init: go.init output.init
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 288):
	@:
	

/Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/dep-v0.5.1:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/golang.mk', line 333):
	@$(INFO) installing dep-$(DEP_VERSION) $(SAFEHOSTPLATFORM)
	@mkdir -p $(TOOLS_HOST_DIR)/tmp-dep || $(FAIL)
	@curl -fsSL -o $(DEP) https://github.com/golang/dep/releases/download/$(DEP_VERSION)/dep-$(SAFEHOSTPLATFORM) || $(FAIL)
	@chmod +x $(DEP) || $(FAIL)
	@rm -fr $(TOOLS_HOST_DIR)/tmp-dep
	@$(OK) installing dep-$(DEP_VERSION) $(SAFEHOSTPLATFORM)
	

/Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/kind-v0.11.1:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/k8s_tools.mk', line 83):
	@$(INFO) installing kind $(KIND_VERSION)
	@mkdir -p $(TOOLS_HOST_DIR) || $(FAIL)
	@curl -fsSLo $(KIND) https://github.com/kubernetes-sigs/kind/releases/download/$(KIND_VERSION)/kind-$(SAFEHOSTPLATFORM) || $(FAIL)
	@chmod +x $(KIND)
	@$(OK) installing kind $(KIND_VERSION)
	

build.code.platform: go.build
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 302):
	@:
	

build.artifacts.platform: do.build.images
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 308):
	@:
	

go.clean:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/golang.mk', line 260):
	@# `go modules` creates read-only folders under WORK_DIR
	@# make all folders within WORK_DIR writable, so they can be deleted
	@if [ -d $(WORK_DIR) ]; then chmod -R +w $(WORK_DIR); fi 
	@rm -fr $(GO_BIN_DIR) $(GO_TEST_DIR)
	

e2e:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 376):
	@$(MAKE) e2e.init
	@$(MAKE) e2e.run
	@$(MAKE) e2e.done
	

# Not a target:
build/makelib/output.mk:
#  A default, MAKEFILES, or -include/sinclude makefile.
#  Implicit rule search has been done.
#  Last modified 2022-04-25 19:38:25
#  File has been updated.
#  Successfully updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/0=0%

test.run: go.test.unit
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 362):
	@:
	

cobertura:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 113):
	@cat $(GO_TEST_OUTPUT)/coverage.txt | \
	grep -v zz_ | \
	$(GOCOVER_COBERTURA) > $(GO_TEST_OUTPUT)/cobertura-coverage.xml
	

go.vendor.lite:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/golang.mk', line 217):
	@$(INFO) verify dependencies have expected content
	@$(GOHOST) mod verify || $(FAIL)
	@$(OK) go modules dependencies verified
	

debug.nuke:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/image.mk', line 170):
	@for c in $$(docker ps -a -q --no-trunc); do \
	if [ "$$c" != "$(SELF_CID)" ]; then \
	echo stopping and removing container $${c}; \
	docker stop $${c}; \
	docker rm $${c}; \
	fi; \
	done
	@for i in $$(docker images -q); do \
	echo removing image $$i; \
	docker rmi -f $$i > /dev/null 2>&1; \
	done
	

img.release.clean.crossplane.provider-jet-palette-controller.arm64:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/image.mk', line 215):
	@[ -z "$$(docker images -q crossplane/provider-jet-palette-controller-arm64:v0.0.0-1.g69503ad.dirty)" ] || docker rmi crossplane/provider-jet-palette-controller-arm64:v0.0.0-1.g69503ad.dirty
 
	@[ -z "$$(docker images -q crossplane/provider-jet-palette-controller-arm64:v0.0.0-1.g69503ad.dirty-master)" ] || docker rmi crossplane/provider-jet-palette-controller-arm64:v0.0.0-1.g69503ad.dirty-master
	@[ -z "$$(docker images -q crossplane/provider-jet-palette-controller-arm64:master)" ] || docker rmi crossplane/provider-jet-palette-controller-arm64:master
	

vendor.check: go.vendor.check
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

/Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/kustomize-v3.3.0:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/k8s_tools.mk', line 98):
	@$(INFO) installing kustomize $(KUSTOMIZE_VERSION)
	@mkdir -p $(TOOLS_HOST_DIR)/tmp-kustomize
	@curl -fsSL https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize/$(KUSTOMIZE_VERSION)/kustomize_$(KUSTOMIZE_VERSION)_$(SAFEHOST_PLATFORM).tar.gz | tar -xz -C $(TOOLS_HOST_DIR)/tmp-kustomize
	@mv $(TOOLS_HOST_DIR)/tmp-kustomize/kustomize $(KUSTOMIZE)
	@rm -fr $(TOOLS_HOST_DIR)/tmp-kustomize
	@$(OK) installing kustomize $(KUSTOMIZE_VERSION)
	

all: build
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

go.test.unit: /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/go-junit-report /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/gocover-cobertura
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/golang.mk', line 163):
	@$(INFO) go test unit-tests
	@mkdir -p $(GO_TEST_OUTPUT)
	@CGO_ENABLED=$(GO_CGO_ENABLED) $(GOHOST) test -i -cover $(GO_STATIC_FLAGS) $(GO_PACKAGES) || $(FAIL)
	@CGO_ENABLED=$(GO_CGO_ENABLED) $(GOHOST) test -v -covermode=$(GO_COVER_MODE) -coverprofile=$(GO_TEST_OUTPUT)/coverage.txt $(GO_TEST_FLAGS) $(GO_STATIC_FLAGS) $(GO_PACKAGES) 2>&1 | tee $(GO_TEST_OUTPUT)/unit-tests.log || $(FAIL)
	@cat $(GO_TEST_OUTPUT)/unit-tests.log | $(GOJUNIT) -set-exit-code > $(GO_TEST_OUTPUT)/unit-tests.xml || $(FAIL)
	@$(GOCOVER_COBERTURA) < $(GO_TEST_OUTPUT)/coverage.txt > $(GO_TEST_OUTPUT)/coverage.xml
	@$(OK) go test unit-tests
	

do.build.artifacts.%:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

/Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/helm-v2.17.0:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/k8s_tools.mk', line 115):
	@$(INFO) installing helm $(HELM_VERSION)
	@mkdir -p $(TOOLS_HOST_DIR)/tmp-helm
	@curl -fsSL https://get.helm.sh/helm-$(HELM_VERSION)-$(SAFEHOSTPLATFORM).tar.gz | tar -xz -C $(TOOLS_HOST_DIR)/tmp-helm
	@mv $(TOOLS_HOST_DIR)/tmp-helm/$(SAFEHOSTPLATFORM)/helm $(HELM)
	@rm -fr $(TOOLS_HOST_DIR)/tmp-helm
	@$(OK) installing helm $(HELM_VERSION)
	

.PHONY: all build.init build.check build.check.platform build.code build.code.platform build.artifacts build.artifacts.platform build.done do.build.platform.% do.build.platform do.build.artifacts.% do.build.artifacts build.all build clean distclean lint test test.init test.run test.done e2e.init e2e.run e2e.done publish.init publish.artifacts publish promote.init promote.artifacts promote tag generate reviewable check-diff help help-special go.init go.build go.install go.test.unit go.test.integration go.test.codecov go.lint go.vet go.fmt go.generate go.validate go.vendor.lite go.vendor go.vendor.check go.vendor.update go.clean go.distclean fmt vendor vet go.help prune img.help config/schema.json cobertura submodules fallthrough run crds.clean crossplane.help help-special
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

img.cache:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/image.mk', line 140):
	@for i in $(CACHE_IMAGES); do \
	IMGID=$$(docker images -q $$i); \
	if [ -n "$$IMGID" ]; then \
	echo === caching image $$i; \
	CACHE_IMAGE=$(CACHE_REGISTRY)/$${i#*/}; \
	docker tag $$i $${CACHE_IMAGE}:$(CACHE_TAG); \
	for r in $$(docker images --format "{{.ID}}#{{.Repository}}:{{.Tag}}" | grep $$IMGID | grep $(CACHE_REGISTRY)/ | grep -v $${CACHE_IMAGE}:$(CACHE_TAG)); do \
	docker rmi $${r#*#} > /dev/null 2>&1 || true; \
	done; \
	fi; \
	done
	

promote.artifacts: img.release.manifest.promote.provider-jet-palette img.release.manifest.promote.provider-jet-palette-controller
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 402):
	@:
	

# Not a target:
build/makelib/golang.mk:
#  A default, MAKEFILES, or -include/sinclude makefile.
#  Implicit rule search has been done.
#  Last modified 2022-04-25 19:38:25
#  File has been updated.
#  Successfully updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/0=0%

generate.init: config/schema.json go.init
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 413):
	@:
	

/Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/helm-v3.7.1:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/k8s_tools.mk', line 125):
	@$(INFO) installing helm3 $(HELM_VERSION)
	@mkdir -p $(TOOLS_HOST_DIR)/tmp-helm3
	@curl -fsSL https://get.helm.sh/helm-$(HELM3_VERSION)-$(SAFEHOSTPLATFORM).tar.gz | tar -xz -C $(TOOLS_HOST_DIR)/tmp-helm3
	@mv $(TOOLS_HOST_DIR)/tmp-helm3/$(SAFEHOSTPLATFORM)/helm $(HELM3)
	@rm -fr $(TOOLS_HOST_DIR)/tmp-helm3
	@$(OK) installing helm3 $(HELM_VERSION)
	

go.validate: go.vet go.fmt
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

submodules:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 119):
	@git submodule sync
	@git submodule update --init --recursive
	

distclean: clean go.distclean
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 349):
	@rm -fr $(CACHE_DIR)
	

img.prune:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/image.mk', line 154):
	@$(INFO) pruning images older than $(PRUNE_HOURS) keeping a minimum of $(PRUNE_KEEP) images
	@EXPIRED=$$(docker images --format "{{.Tag}}#{{.Repository}}:{{.Tag}}" \
	| grep -E '$(CACHE_REGISTRY)/' \
	| sort -r \
	| awk -v i=0 -v cd="$(CACHE_PRUNE_DATE)" -F  "#" '{if ($$1 <= cd && i >= $(PRUNE_KEEP)) print $$2; i++ }') &&\
	for i in $$EXPIRED; do \
	echo removing expired cache image $$i; \
	[ $(PRUNE_DRYRUN) = 1 ] || docker rmi $$i > /dev/null 2>&1 || true; \
	done
	@for i in $$(docker images -q -f dangling=true); do \
	echo removing dangling image $$i; \
	docker rmi $$i > /dev/null 2>&1 || true; \
	done
	@$(OK) pruning
	

# Not a target:
do.build.image.provider-jet-palette:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
img.release.manifest.promote.provider-jet-palette-controller:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

e2e.done:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
 
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 373):
	@:
	

go.fmt.simplify: /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/gofmt1.11
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/golang.mk', line 208):
	@$(INFO) gofmt simplify
	@$(GOFMT) -l -s -w $(GO_SUBDIRS) $(GO_INTEGRATION_TESTS_SUBDIRS) || $(FAIL)
	@$(OK) gofmt simplify
	

img.release.promote: img.release.promote.crossplane.provider-jet-palette.arm64 img.release.promote.crossplane.provider-jet-palette-controller.arm64
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

fallthrough: submodules
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 69):
	@echo Initial setup complete. Running make again . . .
	@make
	

go.vet:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/golang.mk', line 198):
	@$(INFO) go vet $(PLATFORM)
	@CGO_ENABLED=0 $(GOHOST) vet $(GO_COMMON_FLAGS) $(GO_PACKAGES) $(GO_INTEGRATION_TEST_PACKAGES) || $(FAIL)
	@$(OK) go vet $(PLATFORM)
	

.SUFFIXES:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

/Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/goimports:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/golang.mk', line 357):
	@$(INFO) installing goimports
	@mkdir -p $(TOOLS_HOST_DIR)/tmp-goimports || $(FAIL)
	@GO111MODULE=off GOPATH=$(TOOLS_HOST_DIR)/tmp-goimports GOBIN=$(TOOLS_HOST_DIR) $(GOHOST) get golang.org/x/tools/cmd/goimports || rm -fr $(TOOLS_HOST_DIR)/tmp-goimports || $(FAIL)
	@rm -fr $(TOOLS_HOST_DIR)/tmp-goimports
	@$(OK) installing goimports
	

go.generate:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/golang.mk', line 270):
	@$(INFO) go generate $(PLATFORM)
	@CGO_ENABLED=0 $(GOHOST) generate $(GO_GENERATE_FLAGS) $(GO_PACKAGES) $(GO_INTEGRATION_TEST_PACKAGES) || $(FAIL)
	@$(OK) go generate $(PLATFORM)
	@$(INFO) go mod tidy
	@$(GOHOST) mod tidy || $(FAIL)
	@$(OK) go mod tidy
	

generate.run: go.generate
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 414):
	@:
	

# Not a target:
Makefile:
#  Implicit rule search has been done.
#  Last modified 2022-06-08 06:53:48
#  File has been updated.
#  Successfully updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/0=0%

publish.init: img.release.build
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 388):
	@:
	

build.clean: output.clean
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

common.buildvars:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 268):
	@echo PROJECT_NAME=$(PROJECT_NAME)
	@echo PROJECT_REPO=$(PROJECT_REPO)
	@echo BUILD_HOST=$(HOSTNAME)
	@echo BUILD_REGISTRY=$(BUILD_REGISTRY)
	@echo DOCKER_REGISTRY=$(DOCKER_REGISTRY)
	@echo OUTPUT_DIR=$(OUTPUT_DIR)
	@echo WORK_DIR=$(WORK_DIR)
	@echo CACHE_DIR=$(CACHE_DIR)
	@echo HOSTOS=$(HOSTOS)
	@echo HOSTARCH=$(HOSTARCH)
	@echo SAFEHOSTARCH=$(SAFEHOSTARCH)
	@echo TARGETARCH=$(TARGETARCH)
	

img.release.build.crossplane.provider-jet-palette.arm64:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/image.mk', line 215):
	@echo `date +%H:%M:%S` [34m[ .. ][0m docker build crossplane/provider-jet-palette-arm64:v0.0.0-1.g69503ad.dirty
	@docker tag build-e2886f39/provider-jet-palette-arm64 crossplane/provider-jet-palette-arm64:v0.0.0-1.g69503ad.dirty || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
	@# Save image as _output/images/linux_<arch>/<image>.tar.gz (no builds for darwin or windows)
	@mkdir -p /Users/justinbarksdale/git/provider-jet-palette/_output/images/linux_arm64 || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
	@docker save build-e2886f39/provider-jet-palette-arm64 | gzip -c > /Users/justinbarksdale/git/provider-jet-palette/_output/images/linux_arm64/provider-jet-palette.tar.gz || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
	@echo `date +%H:%M:%S` [32m[ OK ][0m docker build crossplane/provider-jet-palette-arm64:v0.0.0-1.g69503ad.dirty
	

go.test.integration: /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/go-junit-report
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/golang.mk', line 184):
	@$(INFO) go test integration-tests
	@mkdir -p $(GO_TEST_OUTPUT) || $(FAIL)
	@CGO_ENABLED=0 $(GOHOST) test -i $(GO_STATIC_FLAGS) $(GO_INTEGRATION_TEST_PACKAGES) || $(FAIL)
	@CGO_ENABLED=0 $(GOHOST) test $(GO_TEST_FLAGS) $(GO_STATIC_FLAGS) $(GO_INTEGRATION_TEST_PACKAGES) $(TEST_FILTER_PARAM) 2>&1 | tee $(GO_TEST_OUTPUT)/integration-tests.log || $(FAIL)
	@cat $(GO_TEST_OUTPUT)/integration-tests.log | $(GOJUNIT) -set-exit-code > $(GO_TEST_OUTPUT)/integration-tests.xml || $(FAIL)
	@$(OK) go test integration-tests
	

test:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 366):
	@$(MAKE) test.init
	@$(MAKE) test.run
	@$(MAKE) test.done
	

img.release.clean: img.release.clean.crossplane.provider-jet-palette.arm64 img.release.clean.crossplane.provider-jet-palette-controller.arm64
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

imports: go.imports
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

build:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 338):
	@$(MAKE) build.all PLATFORMS="$(BUILD_PLATFORMS)"
	

fmt.simplify: go.fmt.simplify
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

do.build.platform.%:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

# Not a target:
go.imports.fix:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
build/makelib/image.mk:
#  A default, MAKEFILES, or -include/sinclude makefile.
#  Implicit rule search has been done.
#  Last modified 2022-04-25 19:38:25
#  File has been updated.
#  Successfully updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/0=0%

vet: go.vet
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

/Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/kubectl-v1.22.2:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/k8s_tools.mk', line 91):
	@$(INFO) installing kubectl $(KUBECTL_VERSION)
 
	@curl -fsSLo $(KUBECTL) https://storage.googleapis.com/kubernetes-release/release/$(KUBECTL_VERSION)/bin/$(HOSTOS)/$(SAFEHOSTARCH)/kubectl || $(FAIL)
	@chmod +x $(KUBECTL)
	@$(OK) installing kubectl $(KUBECTL_VERSION)
	

version.isdirty:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 243):
	@if [[ $(VERSION) = *.dirty ]]; then \
	$(ERR) version '$(VERSION)' is dirty aborting publish. The following files changed: ;\
	git status --short;\
	exit 1; \
	fi
	

go.cachedir:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 108):
	@go env GOCACHE
	

config/schema.json: /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/terraform-1.1.6
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 88):
	@$(INFO) generating provider schema for $(TERRAFORM_PROVIDER_SOURCE) $(TERRAFORM_PROVIDER_VERSION)
	@mkdir -p $(TERRAFORM_WORKDIR)
	@echo '{"terraform":[{"required_providers":[{"provider":{"source":"'"$(TERRAFORM_PROVIDER_SOURCE)"'","version":"'"$(TERRAFORM_PROVIDER_VERSION)"'"}}],"required_version":"'"$(TERRAFORM_VERSION)"'"}]}' > $(TERRAFORM_WORKDIR)/main.tf.json
	@$(TERRAFORM) -chdir=$(TERRAFORM_WORKDIR) init > $(TERRAFORM_WORKDIR)/terraform-logs.txt 2>&1
	@$(TERRAFORM) -chdir=$(TERRAFORM_WORKDIR) providers schema -json=true > $(TERRAFORM_PROVIDER_SCHEMA) 2>> $(TERRAFORM_WORKDIR)/terraform-logs.txt
	@$(OK) generating provider schema for $(TERRAFORM_PROVIDER_SOURCE) $(TERRAFORM_PROVIDER_VERSION)
	

img.release.publish.crossplane.provider-jet-palette.arm64:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/image.mk', line 215):
	@echo `date +%H:%M:%S` [34m[ .. ][0m docker push crossplane/provider-jet-palette-arm64:v0.0.0-1.g69503ad.dirty
	@docker push crossplane/provider-jet-palette-arm64:v0.0.0-1.g69503ad.dirty || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
	@echo `date +%H:%M:%S` [32m[ OK ][0m docker push crossplane/provider-jet-palette-arm64:v0.0.0-1.g69503ad.dirty
	

build.all:
#  Phony target (prerequisite of .PHONY).
#  Command-line target.
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: `'
#  File does not exist.
#  File has been updated.
#  Failed to be updated.
# automatic
# @ := build.all
# automatic
# % := 
# automatic
# * := 
# automatic
# + := 
# automatic
# | := 
# automatic
# < := 
# automatic
# ^ := 
# automatic
# ? := 
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=9/28=32%
#  commands to execute (from `build/makelib/common.mk', line 327):
	@$(MAKE) build.init
	@$(MAKE) build.check
	@$(MAKE) build.code
	@$(MAKE) do.build.platform
	@$(MAKE) build.artifacts
	@$(MAKE) do.build.artifacts
	@$(MAKE) build.done
	

go.vendor.update:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/golang.mk', line 222):
	@$(INFO) update go modules
	@$(GOHOST) get -u ./... || $(FAIL)
	@$(OK) update go modules
	

tag: release.tag
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

help:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 476):
	@echo "$$HELPTEXT"
	@$(MAKE) help-special
	

test.done:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 363):
	@:
	

imports.fix: go.imports.fix
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

lint.init: go.init
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 352):
	@:
	

output.init:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/output.mk', line 37):
	@mkdir -p $(OUTPUT_DIR)
	@echo "$(VERSION)" > $(OUTPUT_DIR)/version
	

/Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/manifest-tool-v0.7.0:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/image.mk', line 290):
	@$(INFO) installing manifest-tool $(MANIFEST_TOOL_VERSION)
	@mkdir -p $(TOOLS_HOST_DIR) || $(FAIL)
	@curl -fsSL https://github.com/estesp/manifest-tool/releases/download/$(MANIFEST_TOOL_VERSION)/manifest-tool-$(HOSTOS)-$(SAFEHOSTARCH) > $@ || $(FAIL)
	@chmod +x $@ || $(FAIL)
	@$(OK) installing manifest-tool $(MANIFEST_TOOL_VERSION)
	

build.check: go.lint
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 292):
	@:
	

build.done: img.cache img.done
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 312):
	@:
	

generate:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 418):
	@$(MAKE) generate.init
	@$(MAKE) generate.run
	@$(MAKE) generate.done
	

# Not a target:
do.build.image.provider-jet-palette-controller:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

/Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/gofmt1.11:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/golang.mk', line 349):
	@$(INFO) installing gofmt$(GOFMT_VERSION)
	@mkdir -p $(TOOLS_HOST_DIR)/tmp-fmt || $(FAIL)
	@curl -sL https://dl.google.com/go/go$(GOFMT_VERSION).$(SAFEHOSTPLATFORM).tar.gz | tar -xz -C $(TOOLS_HOST_DIR)/tmp-fmt || $(FAIL)
	@mv $(TOOLS_HOST_DIR)/tmp-fmt/go/bin/gofmt $(GOFMT) || $(FAIL)
	@rm -fr $(TOOLS_HOST_DIR)/tmp-fmt
	@$(OK) installing gofmt$(GOFMT_VERSION)
	

go.build:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/golang.mk', line 152):
	@$(INFO) go build $(PLATFORM)
	$(foreach p,$(GO_STATIC_PACKAGES),@CGO_ENABLED=0 $(GO) build -v -i -o $(GO_OUT_DIR)/$(lastword $(subst /, ,$(p)))$(GO_OUT_EXT) $(GO_STATIC_FLAGS) $(p) || $(FAIL) ${\n})
	$(foreach p,$(GO_TEST_PACKAGES) $(GO_LONGHAUL_TEST_PACKAGES),@CGO_ENABLED=0 $(GO) test -i -c -o $(GO_TEST_OUTPUT)/$(lastword $(subst /, ,$(p)))$(GO_OUT_EXT) $(GO_STATIC_FLAGS) $(p) || $(FAIL) ${\n})
	@$(OK) go build $(PLATFORM)
	

check-diff: generate
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 430):
	@$(INFO) checking that branch is clean
	@if git status --porcelain | grep . ; then $(FAIL); else $(OK) branch is clean; fi
	

prune: img.prune
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

/Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/go-junit-report:
#  Implicit rule search has not been done.
#  Modification time never checked.
 
#  File has not been updated.
#  commands to execute (from `build/makelib/golang.mk', line 364):
	@$(INFO) installing go-junit-report
	@mkdir -p $(TOOLS_HOST_DIR)/tmp-junit || $(FAIL)
	@GO111MODULE=off GOPATH=$(TOOLS_HOST_DIR)/tmp-junit GOBIN=$(TOOLS_HOST_DIR) $(GOHOST) get github.com/jstemmer/go-junit-report || rm -fr $(TOOLS_HOST_DIR)/tmp-junit || $(FAIL)
	@rm -fr $(TOOLS_HOST_DIR)/tmp-junit
	@$(OK) installing go-junit-report
	

promote.init:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 399):
	@:
	

build.code:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 299):
	@:
	

lint.run: go.lint
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 353):
	@:
	

/Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/terraform-1.1.6:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 79):
	@$(INFO) installing terraform $(HOSTOS)-$(HOSTARCH)
	@mkdir -p $(TOOLS_HOST_DIR)/tmp-terraform
	@curl -fsSL https://releases.hashicorp.com/terraform/$(TERRAFORM_VERSION)/terraform_$(TERRAFORM_VERSION)_$(SAFEHOST_PLATFORM).zip -o $(TOOLS_HOST_DIR)/tmp-terraform/terraform.zip
	@unzip $(TOOLS_HOST_DIR)/tmp-terraform/terraform.zip -d $(TOOLS_HOST_DIR)/tmp-terraform
	@mv $(TOOLS_HOST_DIR)/tmp-terraform/terraform $(TERRAFORM)
	@rm -fr $(TOOLS_HOST_DIR)/tmp-terraform
	@$(OK) installing terraform $(HOSTOS)-$(HOSTARCH)
	

vendor.update: go.vendor.update
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

build.artifacts:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 305):
	@:
	

img.release.build.crossplane.provider-jet-palette-controller.arm64:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/image.mk', line 215):
	@echo `date +%H:%M:%S` [34m[ .. ][0m docker build crossplane/provider-jet-palette-controller-arm64:v0.0.0-1.g69503ad.dirty
	@docker tag build-e2886f39/provider-jet-palette-controller-arm64 crossplane/provider-jet-palette-controller-arm64:v0.0.0-1.g69503ad.dirty || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
	@# Save image as _output/images/linux_<arch>/<image>.tar.gz (no builds for darwin or windows)
	@mkdir -p /Users/justinbarksdale/git/provider-jet-palette/_output/images/linux_arm64 || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
	@docker save build-e2886f39/provider-jet-palette-controller-arm64 | gzip -c > /Users/justinbarksdale/git/provider-jet-palette/_output/images/linux_arm64/provider-jet-palette-controller.tar.gz || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
	@echo `date +%H:%M:%S` [32m[ OK ][0m docker build crossplane/provider-jet-palette-controller-arm64:v0.0.0-1.g69503ad.dirty
	

img.help:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/image.mk', line 280):
	@echo "$$IMAGE_HELPTEXT"
	

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
do.build.artifacts.linux_arm64:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

/Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/olm-bundle-v0.4.0:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/k8s_tools.mk', line 107):
	@$(INFO) installing olm-bundle $(OLMBUNDLE_VERSION)
	@curl -fsSLo $(OLMBUNDLE) https://github.com/upbound/olm-bundle/releases/download/$(OLMBUNDLE_VERSION)/olm-bundle_$(SAFEHOSTPLATFORM) || $(FAIL)
	@chmod +x $(OLMBUNDLE)
	@$(OK) installing olm-bundle $(OLMBUNDLE_VERSION)
	

publish: version.isdirty
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 395):
	@$(MAKE) publish.init
	@$(MAKE) publish.artifacts
	

# Not a target:
img.release.manifest.publish.provider-jet-palette:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

img.release.publish: img.release.publish.crossplane.provider-jet-palette.arm64 img.release.publish.crossplane.provider-jet-palette-controller.arm64
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

img.clean:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/image.mk', line 132):
	@$(INFO) cleaning images for $(BUILD_REGISTRY)
	@$(MAKE) do.img.clean CLEAN_IMAGES="$(shell docker images | grep -E '^$(BUILD_REGISTRY)/' | awk '{print $$1":"$$2}')"
	@$(OK) cleaning images for $(BUILD_REGISTRY)
	

release.tag:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 229):
	$(error invalid version $(VERSION). must be a semantic version with v[Major].[Minor].[Patch] only)
	@$(INFO) tagging commit hash $(COMMIT_HASH) with v$(VERSION_MAJOR).$(VERSION_MINOR).$(VERSION_PATCH)
	git tag -f -m "release $(VERSION)" v$(VERSION_MAJOR).$(VERSION_MINOR).$(VERSION_PATCH) $(COMMIT_HASH)
	git push $(REMOTE_NAME) v$(VERSION_MAJOR).$(VERSION_MINOR).$(VERSION_PATCH)
	@set -e; if ! git ls-remote --heads $(REMOTE_NAME) | grep -q refs/heads/release-$(VERSION_MAJOR).$(VERSION_MINOR); then \
	echo === creating new release branch release-$(VERSION_MAJOR).$(VERSION_MINOR) ;\
	git branch -f release-$(VERSION_MAJOR).$(VERSION_MINOR) $(COMMIT_HASH) ;\
	git push $(REMOTE_NAME) release-$(VERSION_MAJOR).$(VERSION_MINOR) ;\
	fi
	@$(OK) tagging
	

do.img.clean:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/image.mk', line 116):
	@for i in $(CLEAN_IMAGES); do \
	if [ -n "$$(docker images -q $$i)" ]; then \
	for c in $$(docker ps -a -q --no-trunc --filter=ancestor=$$i); do \
	if [ "$$c" != "$(SELF_CID)" ]; then \
	echo stopping and removing container $${c} referencing image $$i; \
	docker stop $${c}; \
	docker rm $${c}; \
	fi; \
	done; \
	echo cleaning image $$i; \
	docker rmi $$i > /dev/null 2>&1 || true; \
	fi; \
	done
	

generate.done:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 415):
	@:
	

run: go.build
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 126):
	@$(INFO) Running Crossplane locally out-of-cluster . . .
	@# To see other arguments that can be provided, run the command with --help instead
	$(GO_OUT_DIR)/provider --debug
	

clean: img.clean img.release.clean go.clean
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 345):
	@rm -fr $(OUTPUT_DIR) $(WORK_DIR)
	

# Not a target:
build/makelib/common.mk:
#  A default, MAKEFILES, or -include/sinclude makefile.
#  Implicit rule search has been done.
#  Last modified 2022-04-25 19:38:25
 
#  File has been updated.
#  Successfully updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/0=0%

go.fmt: /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/gofmt1.11
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/golang.mk', line 203):
	@$(INFO) go fmt
	@gofmt_out=$$($(GOFMT) -s -d -e $(GO_SUBDIRS) $(GO_INTEGRATION_TESTS_SUBDIRS) 2>&1) && [ -z "$${gofmt_out}" ] || (echo "$${gofmt_out}" 1>&2; $(FAIL))
	@$(OK) go fmt
	

img.release.promote.crossplane.provider-jet-palette.arm64:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/image.mk', line 215):
	@echo `date +%H:%M:%S` [34m[ .. ][0m docker promote crossplane/provider-jet-palette-arm64:v0.0.0-1.g69503ad.dirty to crossplane/provider-jet-palette-arm64:master
	@docker pull crossplane/provider-jet-palette-arm64:v0.0.0-1.g69503ad.dirty || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
	@[ "master" = "master" ] || docker tag crossplane/provider-jet-palette-arm64:v0.0.0-1.g69503ad.dirty crossplane/provider-jet-palette-arm64:v0.0.0-1.g69503ad.dirty-master || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
	@docker tag crossplane/provider-jet-palette-arm64:v0.0.0-1.g69503ad.dirty crossplane/provider-jet-palette-arm64:master || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
	@[ "master" = "master" ] || docker push crossplane/provider-jet-palette-arm64:v0.0.0-1.g69503ad.dirty-master
	@docker push crossplane/provider-jet-palette-arm64:master || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
	@echo `date +%H:%M:%S` [32m[ OK ][0m docker promote crossplane/provider-jet-palette-arm64:v0.0.0-1.g69503ad.dirty to crossplane/provider-jet-palette-arm64:master || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
	

e2e.init:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 371):
	@:
	

img.release.publish.crossplane.provider-jet-palette-controller.arm64:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/image.mk', line 215):
	@echo `date +%H:%M:%S` [34m[ .. ][0m docker push crossplane/provider-jet-palette-controller-arm64:v0.0.0-1.g69503ad.dirty
	@docker push crossplane/provider-jet-palette-controller-arm64:v0.0.0-1.g69503ad.dirty || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
	@echo `date +%H:%M:%S` [32m[ OK ][0m docker push crossplane/provider-jet-palette-controller-arm64:v0.0.0-1.g69503ad.dirty
	

/Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/gocover-cobertura:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/golang.mk', line 371):
	@$(INFO) installing gocover-cobertura
	@mkdir -p $(TOOLS_HOST_DIR)/tmp-gocover-cobertura || $(FAIL)
	@GO111MODULE=off GOPATH=$(TOOLS_HOST_DIR)/tmp-gocover-cobertura GOBIN=$(TOOLS_HOST_DIR) $(GOHOST) get github.com/t-yuki/gocover-cobertura || rm -fr $(TOOLS_HOST_DIR)/tmp-covcover-cobertura || $(FAIL)
	@rm -fr $(TOOLS_HOST_DIR)/tmp-gocover-cobertura
	@$(OK) installing gocover-cobertura
	

build.vars: common.buildvars k8s_tools.buildvars
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

go.init: go.vendor.lite
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/golang.mk', line 147):
	@if [ "$(GO111MODULE)" != "on" ] && [ "$(realpath ../../../..)" !=  "$(realpath $(GOPATH))" ]; then \
	$(WARN) the source directory is not relative to the GOPATH at $(GOPATH) or you are you using symlinks. The build might run into issue. Please move the source directory to be at $(GOPATH)/src/$(GO_PROJECT) ;\
	fi
	

do.build.artifacts: do.build.artifacts.linux_arm64
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

go.help:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/golang.mk', line 323):
	@echo "$$GO_HELPTEXT"
	

crds.clean:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

output.clean:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/output.mk', line 41):
	@rm -fr $(OUTPUT_DIR)
	@$(INFO) skipped publishing outputs to an s3 bucket since 'S3_BUCKET' is not set
	

img.release.clean.crossplane.provider-jet-palette.arm64:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/image.mk', line 215):
	@[ -z "$$(docker images -q crossplane/provider-jet-palette-arm64:v0.0.0-1.g69503ad.dirty)" ] || docker rmi crossplane/provider-jet-palette-arm64:v0.0.0-1.g69503ad.dirty
	@[ -z "$$(docker images -q crossplane/provider-jet-palette-arm64:v0.0.0-1.g69503ad.dirty-master)" ] || docker rmi crossplane/provider-jet-palette-arm64:v0.0.0-1.g69503ad.dirty-master
	@[ -z "$$(docker images -q crossplane/provider-jet-palette-arm64:master)" ] || docker rmi crossplane/provider-jet-palette-arm64:master
	

/Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/istioctl-1.8.1:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/k8s_tools.mk', line 74):
	@$(INFO) installing istio $(ISTIO_VERSION)
	@mkdir -p $(TOOLS_HOST_DIR)/tmp-istio || $(FAIL)
	@curl --progress-bar -fsSL https://github.com/istio/istio/releases/download/$(ISTIO_VERSION)/istio-$(ISTIO_VERSION)-$(ISTIO_DOWNLOAD_TUPLE).tar.gz | tar -xz -C $(TOOLS_HOST_DIR)/tmp-istio || $(FAIL)
	@mv $(TOOLS_HOST_DIR)/tmp-istio/istio-$(ISTIO_VERSION)/bin/istioctl $(ISTIO) || $(FAIL)
	@rm -fr $(TOOLS_HOST_DIR)/tmp-istio || $(FAIL)
	@$(OK) $(ISTIO) installing istio $(ISTIO_VERSION)
	

e2e.run:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 372):
	@:
	

k8s_tools.buildvars:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/k8s_tools.mk', line 61):
	@echo KIND=$(KIND)
	@echo KUBECTL=$(KUBECTL)
	@echo KUSTOMIZE=$(KUSTOMIZE)
	@echo HELM=$(HELM)
	@echo HELM3=$(HELM3)
	

fmt: go.imports
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

img.release.build: img.release.build.crossplane.provider-jet-palette.arm64 img.release.build.crossplane.provider-jet-palette-controller.arm64
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

go.vendor:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/golang.mk', line 227):
	@$(INFO) go mod vendor
	@$(GOHOST) mod vendor || $(FAIL)
	@$(OK) go mod vendor
	

lint:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 356):
	@$(MAKE) lint.init
	@$(MAKE) lint.run
	@$(MAKE) lint.done
	

# Not a target:
build/makelib/k8s_tools.mk:
#  A default, MAKEFILES, or -include/sinclude makefile.
 
#  Implicit rule search has been done.
#  Last modified 2022-04-25 19:38:25
#  File has been updated.
#  Successfully updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/0=0%

# Not a target:
do.build.platform.linux_arm64:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

publish.artifacts: img.release.manifest.publish.provider-jet-palette img.release.manifest.publish.provider-jet-palette-controller
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 391):
	@:
	

# Not a target:
go.imports:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

reviewable:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 424):
	@$(MAKE) generate
	@$(MAKE) lint
	@$(MAKE) test
	

crossplane.help:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 147):
	@echo "$$CROSSPLANE_MAKE_HELP"
	

img.done:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/image.mk', line 137):
	@rm -fr $(IMAGE_TEMP_DIR)
	

do.build.images: do.build.image.provider-jet-palette do.build.image.provider-jet-palette-controller
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/image.mk', line 235):
	

promote:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 406):
	@$(MAKE) promote.init
	@$(MAKE) promote.artifacts
	

# Not a target:
img.release.manifest.promote.provider-jet-palette:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

help-special: img.help crossplane.help go.help
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 473):
	@:
	

go.distclean:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/golang.mk', line 267):
	@rm -rf $(GO_VENDOR_DIR) $(GO_PKG_DIR)
	

# Not a target:
img.release.manifest.publish.provider-jet-palette-controller:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

vendor: go.vendor
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

build.check.platform:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 296):
	@:
	

test.init: go.init
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 361):
	@:
	

go.vendor.check:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/golang.mk', line 217):
	@$(INFO) verify dependencies have expected content
	@$(GOHOST) mod verify || $(FAIL)
	@$(OK) go modules dependencies verified
	

go.lint: /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/golangci-lint-v1.31.0
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/golang.mk', line 192):
	@$(INFO) golangci-lint
	@mkdir -p $(GO_LINT_OUTPUT)
	@$(GOLANGCILINT) run $(GO_LINT_ARGS) || $(FAIL)
	@$(OK) golangci-lint
	

lint.done:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 354):
	@:
	

go.install:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/golang.mk', line 158):
	@$(INFO) go install $(PLATFORM)
	$(foreach p,$(GO_STATIC_PACKAGES),@CGO_ENABLED=0 $(GO) install -v $(GO_STATIC_FLAGS) $(p) || $(FAIL) ${\n})
	@$(OK) go install $(PLATFORM)
	

go.test.codecov:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/golang.mk', line 179):
	@$(INFO) go test codecov
	@cd $(GO_TEST_OUTPUT) && bash <(curl -s https://codecov.io/bash) || $(FAIL)
	@$(OK) go test codecov
	

do.build.platform: do.build.platform.linux_arm64
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

img.release.promote.crossplane.provider-jet-palette-controller.arm64:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/image.mk', line 215):
	@echo `date +%H:%M:%S` [34m[ .. ][0m docker promote crossplane/provider-jet-palette-controller-arm64:v0.0.0-1.g69503ad.dirty to crossplane/provider-jet-palette-controller-arm64:master
	@docker pull crossplane/provider-jet-palette-controller-arm64:v0.0.0-1.g69503ad.dirty || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
	@[ "master" = "master" ] || docker tag crossplane/provider-jet-palette-controller-arm64:v0.0.0-1.g69503ad.dirty crossplane/provider-jet-palette-controller-arm64:v0.0.0-1.g69503ad.dirty-master || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
	@docker tag crossplane/provider-jet-palette-controller-arm64:v0.0.0-1.g69503ad.dirty crossplane/provider-jet-palette-controller-arm64:master || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
	@[ "master" = "master" ] || docker push crossplane/provider-jet-palette-controller-arm64:v0.0.0-1.g69503ad.dirty-master
	@docker push crossplane/provider-jet-palette-controller-arm64:master || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
	@echo `date +%H:%M:%S` [32m[ OK ][0m docker promote crossplane/provider-jet-palette-controller-arm64:v0.0.0-1.g69503ad.dirty to crossplane/provider-jet-palette-controller-arm64:master || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
	

# files hash-table stats:
# Load=142/1024=14%, Rehash=0, Collisions=31/337=9%
# VPATH Search Paths

# No `vpath' search paths.

# No general (`VPATH' variable) search path.

# # of strings in strcache: 6
# # of strcache buffers: 1
# strcache size: total = 4096 / max = 4096 / min = 4096 / avg = 4096
# strcache free: total = 3965 / max = 3965 / min = 3965 / avg = 3965

# Finished Make data base on Fri Jun 10 08:39:42 2022

 
make: *** [build] Error 2


# Make data base, printed on Fri Jun 10 08:39:42 2022

# Variables

# makefile (from `build/makelib/golang.mk', line 28)
 
GO_VENDOR_DIR = vendor
# automatic
<D = $(patsubst %/,%,$(dir $<))
# automatic
?F = $(notdir $?)
# makefile (from `build/makelib/golang.mk', line 107)
GO_LINT_OUTPUT := /Users/justinbarksdale/git/provider-jet-palette/_output/lint/darwin_arm64
# makefile (from `build/makelib/golang.mk', line 39)
GO_CGO_ENABLED = 0
# makefile (from `build/makelib/image.mk', line 87)
CACHEBUST = 0
# makefile (from `build/makelib/k8s_tools.mk', line 41)
OLMBUNDLE := /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/olm-bundle-v0.4.0
# makefile (from `build/makelib/image.mk', line 183)
define repo.targets
img.release.build.$(1).$(2).$(3):
	@$(INFO) docker build $(1)/$(2)-$(3):$(VERSION)
	@docker tag $(BUILD_REGISTRY)/$(2)-$(3) $(1)/$(2)-$(3):$(VERSION) || $(FAIL)
	@# Save image as _output/images/linux_<arch>/<image>.tar.gz (no builds for darwin or windows)
	@mkdir -p $(OUTPUT_DIR)/images/linux_$(3) || $(FAIL)
	@docker save $(BUILD_REGISTRY)/$(2)-$(3) | gzip -c > $(OUTPUT_DIR)/images/linux_$(3)/$(2).tar.gz || $(FAIL)
	@$(OK) docker build $(1)/$(2)-$(3):$(VERSION)
img.release.build: img.release.build.$(1).$(2).$(3)

img.release.publish.$(1).$(2).$(3):
	@$(INFO) docker push $(1)/$(2)-$(3):$(VERSION)
	@docker push $(1)/$(2)-$(3):$(VERSION) || $(FAIL)
	@$(OK) docker push $(1)/$(2)-$(3):$(VERSION)
img.release.publish: img.release.publish.$(1).$(2).$(3)

img.release.promote.$(1).$(2).$(3):
	@$(INFO) docker promote $(1)/$(2)-$(3):$(VERSION) to $(1)/$(2)-$(3):$(CHANNEL)
	@docker pull $(1)/$(2)-$(3):$(VERSION) || $(FAIL)
	@[ "$(CHANNEL)" = "master" ] || docker tag $(1)/$(2)-$(3):$(VERSION) $(1)/$(2)-$(3):$(VERSION)-$(CHANNEL) || $(FAIL)
	@docker tag $(1)/$(2)-$(3):$(VERSION) $(1)/$(2)-$(3):$(CHANNEL) || $(FAIL)
	@[ "$(CHANNEL)" = "master" ] || docker push $(1)/$(2)-$(3):$(VERSION)-$(CHANNEL)
	@docker push $(1)/$(2)-$(3):$(CHANNEL) || $(FAIL)
	@$(OK) docker promote $(1)/$(2)-$(3):$(VERSION) to $(1)/$(2)-$(3):$(CHANNEL) || $(FAIL)
img.release.promote: img.release.promote.$(1).$(2).$(3)

img.release.clean.$(1).$(2).$(3):
	@[ -z "$$$$(docker images -q $(1)/$(2)-$(3):$(VERSION))" ] || docker rmi $(1)/$(2)-$(3):$(VERSION)
	@[ -z "$$$$(docker images -q $(1)/$(2)-$(3):$(VERSION)-$(CHANNEL))" ] || docker rmi $(1)/$(2)-$(3):$(VERSION)-$(CHANNEL)
	@[ -z "$$$$(docker images -q $(1)/$(2)-$(3):$(CHANNEL))" ] || docker rmi $(1)/$(2)-$(3):$(CHANNEL)
img.release.clean: img.release.clean.$(1).$(2).$(3)
endef
# makefile (from `build/makelib/k8s_tools.mk', line 24)
ISTIO_DOWNLOAD_TUPLE := osx
# environment
VSCODE_LOG_NATIVE = false
# makefile (from `build/makelib/common.mk', line 90)
REMOTE_NAME = origin
# makefile (from `build/makelib/image.mk', line 75)
PRUNE_DRYRUN = 0
# automatic
?D = $(patsubst %/,%,$(dir $?))
# makefile (from `Makefile', line 38)
GO_TEST_PARALLEL := 5
# makefile (from `build/makelib/golang.mk', line 38)
GO_COVER_MODE = count
# automatic
@D = $(patsubst %/,%,$(dir $@))
# automatic
@F = $(notdir $@)
# makefile (from `Makefile', line 12)
TERRAFORM_PROVIDER_DOWNLOAD_URL_PREFIX := https://github.com/spectrocloud/terraform-provider-spectrocloud/releases/download/v0.7.7
# makefile
CURDIR := /Users/justinbarksdale/git/provider-jet-palette
# makefile (from `build/makelib/common.mk', line 56)
OK = echo ${TIME} ${GREEN}[ OK ]${CNone}
# makefile (from `build/makelib/common.mk', line 19)
SHELL := /bin/bash
# makefile (from `build/makelib/image.mk', line 94)
BUILD_ARGS = -q
# makefile (from `build/makelib/golang.mk', line 84)
GO := go
# makefile (from `build/makelib/common.mk', line 63)
V = 0
# environment
VSCODE_NLS_CONFIG = {"locale":"en-us","availableLanguages":{},"_languagePackSupport":true}
# makefile (from `build/makelib/image.mk', line 52)
BUILD_REGISTRY := build-e2886f39
# environment
_ = /usr/bin/make
# makefile (from `build/makelib/common.mk', line 35)
YELLOW_BOLD := [33;1m
# makefile (from `build/makelib/common.mk', line 36)
BLUE := [34m
# makefile (from `build/makelib/golang.mk', line 126)
GO_PKG_STATIC_FLAGS := -pkgdir /Users/justinbarksdale/git/provider-jet-palette/.work/pkg/darwin_arm64_static
# makefile (from `build/makelib/common.mk', line 196)
TOOLS_HOST_DIR := /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64
# makefile (from `build/makelib/golang.mk', line 86)
GO_VERSION := 1.17
# makefile (from `Makefile', line 55)
IMAGES = provider-jet-palette provider-jet-palette-controller
# makefile (from `Makefile', line 40)
GO_STATIC_PACKAGES = $(GO_PROJECT)/cmd/provider
# makefile (from `build/makelib/image.mk', line 1)
MAKEFILE_LIST :=  Makefile build/makelib/common.mk build/makelib/output.mk build/makelib/golang.mk build/makelib/k8s_tools.mk build/makelib/image.mk
# makefile (from `build/makelib/common.mk', line 43)
WHITE_BOLD := [37;1m
# makefile (from `build/makelib/golang.mk', line 56)
GOOS := darwin
# makefile (from `Makefile', line 43)
GO111MODULE = on
# makefile (from `build/makelib/image.mk', line 265)
define IMAGE_HELPTEXT
DEPRECATED: this module has been replaced by imagelight.mk and may be removed in the future. 

Image Targets:
    prune        Prune orphaned and cached images.

Image Options:
    PRUNE_HOURS  The number of hours from when an image is last used for it to be
                 considered a target for pruning. Default is 48 hrs.
    PRUNE_KEEP   The minimum number of cached images to keep. Default is 24 images.

endef
# makefile (from `build/makelib/common.mk', line 71)
DEBUG = 0
# makefile (from `build/makelib/common.mk', line 185)
WORK_DIR := /Users/justinbarksdale/git/provider-jet-palette/.work
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
# environment
AUTOJUMP_SOURCED = 1
# makefile (from `build/makelib/common.mk', line 213)
VERSION := v0.0.0-1.g69503ad.dirty
# environment
VSCODE_VERBOSE_LOGGING = true
# makefile (from `build/makelib/output.mk', line 31)
S3_SYNC_DEL := aws s3 sync --only-show-errors --delete
# environment
__CFBundleIdentifier = com.microsoft.VSCode
# environment
INFOPATH = /opt/homebrew/share/info:
# makefile (from `build/makelib/common.mk', line 221)
VERSION_REGEX := ^v\([0-9]*\)[.]\([0-9]*\)[.]\([0-9]*\)$$
# makefile (from `build/makelib/common.mk', line 254)
COMMA := ,
# environment
VSCODE_IPC_HOOK_EXTHOST = /var/folders/c3/40rs861j0d93j1mp5t8ms17r0000gn/T/vscode-ipc-511c51b0-5321-487a-9bdc-ed6820668847.sock
# makefile (from `build/makelib/golang.mk', line 102)
GO_BIN_DIR := /Users/justinbarksdale/git/provider-jet-palette/_output/bin
# environment
VSCODE_CWD = /
# makefile (from `build/makelib/common.mk', line 49)
TIME_LONG = `date +%Y-%m-%d' '%H:%M:%S`
# environment
GOPROXY = https://proxy.golang.org,direct
 
# makefile (from `Makefile', line 76)
TERRAFORM_PROVIDER_SCHEMA := config/schema.json
# makefile (from `build/makelib/image.mk', line 41)
OSBASEIMAGE = arm64v8/$(OSBASE)
# makefile (from `build/makelib/golang.mk', line 65)
GO_INTEGRATION_TEST_PACKAGES := 
# makefile (from `build/makelib/image.mk', line 37)
OSBASE = alpine:3.13
# environment
PATH = /Users/justinbarksdale/.krew/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/VMware Fusion Tech Preview.app/Contents/Public:/Users/justinbarksdale/go/bin
# makefile (from `build/makelib/common.mk', line 149)
BUILD_PLATFORMS = linux_$(TARGETARCH)
# makefile (from `build/makelib/golang.mk', line 90)
GOFMT_VERSION := 1.11
# makefile (from `build/makelib/golang.mk', line 100)
GOLANGCILINT := /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/golangci-lint-v1.31.0
# makefile (from `build/makelib/k8s_tools.mk', line 46)
HELM3 := /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/helm-v3.7.1
# makefile (from `build/makelib/common.mk', line 31)
RED_BOLD := [31;1m
# makefile (from `build/makelib/golang.mk', line 79)
DEP := /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/dep-v0.5.1
# environment
LSCOLORS = Gxfxcxdxbxegedabagacad
# makefile (from `build/makelib/golang.mk', line 32)
GO_BUILDFLAGS = 
# makefile (from `build/makelib/common.mk', line 29)
BLACK_BOLD := [30;1m
# makefile (from `build/makelib/golang.mk', line 99)
GOLANGCILINT_VERSION = 1.31.0
# makefile (from `Makefile', line 5)
PROJECT_REPO := github.com/crossplane-contrib/provider-jet-palette
# makefile (from `build/makelib/common.mk', line 135)
SAFEHOSTPLATFORM := darwin-amd64
# makefile (from `build/makelib/k8s_tools.mk', line 21)
ISTIOOS := darwin
# makefile (from `build/makelib/common.mk', line 41)
CYAN_BOLD := [36;1m
# makefile (from `build/makelib/golang.mk', line 307)
define GO_HELPTEXT
Go Targets:
    generate        Runs go code generation followed by goimports on generated files.
    fmt             Checks go source code for formatting issues.
    fmt.simplify    Format, simplify, update source files.
    imports         Checks go source code import lines for issues.
    imports.fix     Updates go source files to fix issues with import lines.
    vendor          Updates vendor packages.
    vendor.check    Fail the build if vendor packages have changed.
    vendor.update   Update vendor dependencies.
    vet             Checks go source code and reports suspicious constructs.
    test.unit.nocov Runs unit tests without coverage (faster for iterative development)
endef
# makefile (from `build/makelib/golang.mk', line 78)
DEP_VERSION = v0.5.1
# makefile (from `build/makelib/golang.mk', line 29)
GO_PKG_DIR = $(WORK_DIR)/pkg
# makefile (from `build/makelib/golang.mk', line 139)
GOPATH = $(abspath $(GO_PKG_DIR))
# makefile (from `build/makelib/k8s_tools.mk', line 54)
HELM := /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/helm-v2.17.0
# makefile (from `build/makelib/image.mk', line 55)
MANIFEST_TOOL_VERSION = v0.7.0
# environment
VSCODE_LOG_STACK = false
# environment
ELECTRON_RUN_AS_NODE = 1
# makefile (from `build/makelib/image.mk', line 23)
IMAGE_DIR := /Users/justinbarksdale/git/provider-jet-palette/cluster/images
# makefile (from `build/makelib/golang.mk', line 52)
GO_LDFLAGS = -X $(GO_PROJECT)/internal/version.Version=$(VERSION) -s -w
# makefile (from `build/makelib/image.mk', line 83)
IMAGE_ARCHS := amd64 arm64
# default
.FEATURES := target-specific order-only second-expansion else-if archives jobserver check-symlink
# makefile (from `build/makelib/golang.mk', line 81)
GOCOVER_COBERTURA := /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/gocover-cobertura
# makefile (from `build/makelib/k8s_tools.mk', line 53)
HELM_VERSION = v2.17.0
# makefile (from `build/makelib/golang.mk', line 61)
GOHOSTOS := darwin
# makefile (from `build/makelib/golang.mk', line 106)
GO_LINT_DIR := /Users/justinbarksdale/git/provider-jet-palette/_output/lint
# makefile (from `build/makelib/image.mk', line 79)
CACHE_PRUNE_DATE := 2022-06-08.123942
# environment
SSH_AUTH_SOCK = /private/tmp/com.apple.launchd.DAYjhAYmzc/Listeners
# automatic
%F = $(notdir $%)
# makefile (from `build/makelib/golang.mk', line 19)
GO_PROJECT = $(PROJECT_REPO)
# makefile (from `build/makelib/image.mk', line 78)
CACHE_DATE_FORMAT := "%Y-%m-%d.%H%M%S"
# makefile (from `build/makelib/common.mk', line 51)
TIME = $(TIME_SHORT)
# makefile (from `build/makelib/k8s_tools.mk', line 33)
KUBECTL := /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/kubectl-v1.22.2
# makefile (from `build/makelib/common.mk', line 77)
CHANNEL = master
# makefile (from `build/makelib/common.mk', line 87)
BRANCH_NAME := main
# makefile (from `Makefile', line 15)
PLATFORMS = linux_amd64 linux_arm64
# makefile (from `build/makelib/golang.mk', line 34)
GO_TAGS = 
# makefile (from `build/makelib/common.mk', line 222)
VERSION_VALID := 0
# environment
VSCODE_PIPE_LOGGING = true
# makefile (from `build/makelib/image.mk', line 66)
CACHE_REGISTRY := cache
# environment
PWD = /Users/justinbarksdale/git/provider-jet-palette
# makefile (from `build/makelib/k8s_tools.mk', line 32)
KUBECTL_VERSION = v1.22.2
# environment
HOMEBREW_CELLAR = /opt/homebrew/Cellar
# makefile (from `build/makelib/common.mk', line 195)
TOOLS_DIR := /Users/justinbarksdale/git/provider-jet-palette/.cache/tools
# makefile (from `build/makelib/golang.mk', line 131)
GO_GENERATE_FLAGS = $(GO_BUILDFLAGS) -tags 'generate $(GO_TAGS)'
# makefile (from `build/makelib/common.mk', line 111)
SAFEHOSTARCH := amd64
# environment
ORIGINAL_XDG_CURRENT_DESKTOP = undefined
# makefile (from `build/makelib/common.mk', line 32)
GREEN := [32m
# makefile (from `build/makelib/common.mk', line 136)
SAFEHOST_PLATFORM := darwin_amd64
# environment
MANPATH = /opt/homebrew/share/man::
# environment
GOMODCACHE = /Users/justinbarksdale/go/pkg/mod
# environment
HOME = /Users/justinbarksdale
# makefile (from `build/makelib/image.mk', line 80)
CACHE_TAG := 2022-06-10.123942
# makefile (from `build/makelib/common.mk', line 192)
CACHE_DIR := /Users/justinbarksdale/git/provider-jet-palette/.cache
# default
MAKEFILEPATH = $(shell /usr/bin/xcode-select -print-path 2>/dev/null || echo /Developer)/Makefiles
# environment
VSCODE_CODE_CACHE_PATH = /Users/justinbarksdale/Library/Application Support/Code/CachedData/4af164ea3a06f701fe3e89a2bcbb421d2026b68f
# makefile (from `build/makelib/common.mk', line 54)
WARN = echo ${TIME} ${YELLOW}[WARN]${CNone}
# environment
LOGNAME = justinbarksdale
# makefile (from `build/makelib/common.mk', line 39)
MAGENTA_BOLD := [35;1m
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = 1
# makefile (from `build/makelib/golang.mk', line 94)
GOFMT := /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/gofmt1.11
# makefile (from `build/makelib/image.mk', line 27)
IMAGE_OUTPUT_DIR := /Users/justinbarksdale/git/provider-jet-palette/_output/images/darwin_arm64
# makefile (from `Makefile', line 75)
TERRAFORM_WORKDIR := /Users/justinbarksdale/git/provider-jet-palette/.work/terraform
# environment
ZSH = /Users/justinbarksdale/.oh-my-zsh
# makefile (from `build/makelib/image.mk', line 31)
IMAGE_TEMP_DIR := /var/folders/c3/40rs861j0d93j1mp5t8ms17r0000gn/T/tmp.DKuexcSU
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# makefile (from `build/makelib/output.mk', line 29)
S3_CP := aws s3 cp --only-show-errors
# automatic
^D = $(patsubst %/,%,$(dir $^))
# makefile (from `build/makelib/common.mk', line 44)
CNone := [0m
# makefile (from `build/makelib/common.mk', line 202)
HOSTNAME := jb-2.local
# makefile (from `build/makelib/golang.mk', line 62)
GOHOSTARCH := arm64
# makefile (from `build/makelib/common.mk', line 178)
OUTPUT_DIR := /Users/justinbarksdale/git/provider-jet-palette/_output
# environment
XPC_FLAGS = 0x0
# default
MAKE = $(MAKE_COMMAND)
# default
MAKECMDGOALS := all
# makefile (from `build/makelib/common.mk', line 50)
TIME_SHORT = `date +%H:%M:%S`
# makefile (from `Makefile', line 54)
DOCKER_REGISTRY = crossplane
# environment
SHLVL = 1
 
# makefile (from `build/makelib/common.mk', line 42)
WHITE := [37m
# makefile (from `build/makelib/image.mk', line 69)
PRUNE_HOURS = 48
# makefile (from `build/makelib/golang.mk', line 129)
GO_COMMON_FLAGS = $(GO_BUILDFLAGS) -tags '$(GO_TAGS)'
# default
MAKE_VERSION := 3.81
# environment
USER = justinbarksdale
# makefile (from `build/makelib/common.mk', line 160)
NPROCS := 10
# makefile (from `build/makelib/common.mk', line 100)
HOSTOS := darwin
# makefile (from `build/makelib/golang.mk', line 36)
GO_TEST_SUITE = 
# makefile
.DEFAULT_GOAL := all
# makefile (from `build/makelib/common.mk', line 33)
GREEN_BOLD := [32;1m
# makefile (from `build/makelib/image.mk', line 106)
TINI_VERSION = v0.16.1
# makefile (from `build/makelib/golang.mk', line 130)
GO_STATIC_FLAGS = $(GO_COMMON_FLAGS) $(GO_PKG_STATIC_FLAGS) -installsuffix static  -ldflags '$(GO_LDFLAGS)'
# makefile (from `build/makelib/common.mk', line 223)
VERSION_MAJOR := v0.0.0-1.g69503ad.dirty
# makefile (from `build/makelib/golang.mk', line 37)
GO_NOCOV = 
# environment
LESS = -R
# automatic
%D = $(patsubst %/,%,$(dir $%))
# makefile (from `build/makelib/golang.mk', line 103)
GO_OUT_DIR := /Users/justinbarksdale/git/provider-jet-palette/_output/bin/darwin_arm64
# makefile (from `build/makelib/common.mk', line 37)
BLUE_BOLD := [34;1m
# makefile (from `build/makelib/image.mk', line 98)
PULL = 1
# makefile (from `build/makelib/common.mk', line 55)
ERR = echo ${TIME} ${RED}[FAIL]${CNone}
# default
MAKE_COMMAND := /Library/Developer/CommandLineTools/usr/bin/make
# makefile (from `build/makelib/image.mk', line 102)
BUILD_BASE_ARGS = --pull $(BUILD_ARGS)
# makefile (from `build/makelib/common.mk', line 252)
SED_CMD = sed -i -e
# makefile (from `build/makelib/k8s_tools.mk', line 37)
KUSTOMIZE := /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/kustomize-v3.3.0
# default
.VARIABLES := 
# environment
TMPDIR = /var/folders/c3/40rs861j0d93j1mp5t8ms17r0000gn/T/
# automatic
*F = $(notdir $*)
# makefile (from `build/makelib/common.mk', line 156)
OS := darwin
# environment
VSCODE_IPC_HOOK = /Users/justinbarksdale/Library/Application Support/Code/1.68.0-main.sock
# makefile (from `Makefile', line 42)
GO_SUBDIRS = cmd internal apis
# makefile (from `build/makelib/common.mk', line 30)
RED := [31m
# makefile (from `build/makelib/common.mk', line 438)
define HELPTEXT
Usage: make [make-options] <target> [options]

Common Targets:
    build        Build source code and other artifacts for host platform.
    build.all    Build source code and other artifacts for all platforms.
    clean        Remove all files created during the build.
    distclean    Remove all files created during the build including cached tools.
    lint         Run lint and code analysis tools.
    help         Show this help info.
    test         Runs unit tests.
    e2e          Runs end-to-end integration tests.
    generate     Run code generation.
    reviewable   Validate that a PR is ready for review.
    check-diff   Ensure the reviewable target doesn't create a git diff.

Common Options:
    DEBUG        Whether to generate debug symbols. Default is 0.
    PLATFORM     The platform to build.
    SUITE        The test suite to run.
    TESTFILTER   Tests to run in a suite.
    V            Set to 1 enable verbose build. Default is 0.

Release Targets:
    publish      Build and publish final releasable artifacts
    promote      Promote a release to a release channel
    tag          Tag a release

Release Options:
    VERSION      The version information for binaries and releases.
    CHANNEL      Sets the release channel. Can be set to master, main, alpha, beta, or stable.

endef
# makefile (from `build/makelib/common.mk', line 57)
FAIL = (echo ${TIME} ${RED}[FAIL]${CNone} && false)
# makefile (from `build/makelib/common.mk', line 157)
ARCH := arm64
# makefile
MAKEFLAGS =  --no-print-directory -Rrqp
# makefile (from `build/makelib/golang.mk', line 80)
GOJUNIT := /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/go-junit-report
# environment
MFLAGS = - --no-print-directory -Rrqp
# automatic
*D = $(patsubst %/,%,$(dir $*))
# makefile (from `build/makelib/k8s_tools.mk', line 36)
KUSTOMIZE_VERSION = v3.3.0
# makefile (from `build/makelib/common.mk', line 28)
BLACK := [30m
# makefile (from `build/makelib/output.mk', line 30)
S3_SYNC := aws s3 sync --only-show-errors
# environment
XPC_SERVICE_NAME = application.com.microsoft.VSCode.28402901.28402907
# makefile (from `build/makelib/golang.mk', line 105)
GO_TEST_OUTPUT := /Users/justinbarksdale/git/provider-jet-palette/_output/tests/darwin_arm64
# makefile (from `Makefile', line 10)
TERRAFORM_PROVIDER_VERSION := 0.7.7
# environment
HOMEBREW_PREFIX = /opt/homebrew
# automatic
+D = $(patsubst %/,%,$(dir $+))
# makefile (from `build/makelib/common.mk', line 34)
YELLOW := [33m
# makefile (from `build/makelib/golang.mk', line 85)
GOHOST := GOOS=darwin GOARCH=arm64 go
# makefile (from `build/makelib/common.mk', line 40)
CYAN := [36m
# automatic
+F = $(notdir $+)
# environment
HOMEBREW_REPOSITORY = /opt/homebrew
# makefile (from `Makefile', line 11)
TERRAFORM_PROVIDER_DOWNLOAD_NAME := terraform-provider-spectrocloud
# makefile (from `build/makelib/image.mk', line 82)
REGISTRIES = $(DOCKER_REGISTRY)
# makefile (from `build/makelib/k8s_tools.mk', line 29)
KIND := /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/kind-v0.11.1
# environment
__CF_USER_TEXT_ENCODING = 0x1F5:0x0:0x0
# makefile (from `build/makelib/common.mk', line 106)
HOSTARCH := arm64
# makefile (from `build/makelib/golang.mk', line 104)
GO_TEST_DIR := /Users/justinbarksdale/git/provider-jet-palette/_output/tests
# environment
COMMAND_MODE = unix2003
# makefile (from `build/makelib/common.mk', line 141)
PLATFORM := darwin_arm64
# default
MAKEFILES := 
# makefile (from `build/makelib/common.mk', line 134)
HOST_PLATFORM := darwin_arm64
# makefile (from `build/makelib/common.mk', line 256)
SPACE := $(subst ,, )
# automatic
<F = $(notdir $<)
# makefile (from `Makefile', line 74)
TERRAFORM := /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/terraform-1.1.6
# makefile (from `build/makelib/k8s_tools.mk', line 28)
KIND_VERSION = v0.11.1
# makefile (from `Makefile', line 4)
PROJECT_NAME := provider-jet-palette
# makefile (from `build/makelib/common.mk', line 225)
VERSION_PATCH := v0.0.0-1.g69503ad.dirty
# makefile (from `Makefile', line 135)
define CROSSPLANE_MAKE_HELP
Crossplane Targets:
    cobertura             Generate a coverage report for cobertura applying exclusions on generated files.
    submodules            Update the submodules, such as the common build scripts.
    run                   Run crossplane locally, out-of-cluster. Useful for development.

endef
# makefile (from `build/makelib/common.mk', line 112)
TARGETARCH := arm64
# environment
PAGER = less
# environment
LC_ALL = C
# makefile (from `build/makelib/common.mk', line 137)
TARGET_PLATFORM := darwin_arm64
# makefile (from `Makefile', line 7)
TERRAFORM_VERSION := 1.1.6
# `override' directive (from `build/makelib/common.mk', line 83)
COMMIT_HASH := 69503ad5769b49e91e73cb74c8a9f73465a1c67f
# makefile (from `build/makelib/golang.mk', line 64)
GO_PACKAGES := github.com/crossplane-contrib/provider-jet-palette/cmd/... github.com/crossplane-contrib/provider-jet-palette/internal/... github.com/crossplane-contrib/provider-jet-palette/apis/...
# makefile (from `build/makelib/golang.mk', line 57)
GOARCH := arm64
# makefile (from `build/makelib/k8s_tools.mk', line 40)
OLMBUNDLE_VERSION = v0.4.0
# automatic
^F = $(notdir $^)
# default
SUFFIXES := 
# makefile (from `build/makelib/golang.mk', line 82)
GOIMPORTS := /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/goimports
# makefile (from `Makefile', line 13)
TERRAFORM_NATIVE_PROVIDER_BINARY := terraform-provider-spectrocloud_v0.7.7
# makefile (from `build/makelib/k8s_tools.mk', line 44)
USE_HELM3 = false
# makefile (from `build/makelib/image.mk', line 56)
MANIFEST_TOOL := /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/manifest-tool-v0.7.0
 
# makefile (from `build/makelib/golang.mk', line 125)
GO_PKG_BASE_DIR := /Users/justinbarksdale/git/provider-jet-palette/.work/pkg/darwin_arm64
# makefile (from `build/makelib/common.mk', line 173)
ROOT_DIR := /Users/justinbarksdale/git/provider-jet-palette
# makefile (from `build/makelib/golang.mk', line 68)
GO_TEST_FLAGS =  -p $(GO_TEST_PARALLEL)
# makefile (from `build/makelib/common.mk', line 169)
COMMON_SELF_DIR := build/makelib/
# makefile (from `build/makelib/common.mk', line 38)
MAGENTA := [35m
# makefile (from `build/makelib/golang.mk', line 25)
GO_INTEGRATION_TESTS_SUBDIRS = 
# environment
MAKELEVEL := 0
# makefile (from `build/makelib/k8s_tools.mk', line 20)
ISTIO := /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/istioctl-1.8.1
# environment
AUTOJUMP_ERROR_PATH = /Users/justinbarksdale/Library/autojump/errors.log
# makefile (from `build/makelib/common.mk', line 53)
INFO = echo ${TIME} ${BLUE}[ .. ]${CNone}
# makefile (from `build/makelib/image.mk', line 72)
PRUNE_KEEP = 24
# makefile (from `build/makelib/k8s_tools.mk', line 45)
HELM3_VERSION = v3.7.1
# makefile (from `build/makelib/common.mk', line 259)
define \n


endef
# environment
LANG = C
# makefile (from `Makefile', line 9)
TERRAFORM_PROVIDER_SOURCE := spectrocloud/spectrocloud
# makefile (from `build/makelib/k8s_tools.mk', line 19)
ISTIO_VERSION = 1.8.1
# environment
VSCODE_PID = 58784
# makefile (from `build/makelib/common.mk', line 224)
VERSION_MINOR := v0.0.0-1.g69503ad.dirty
# makefile (from `build/makelib/image.mk', line 84)
IMAGE_PLATFORMS := linux/amd64,linux/arm64
# variable set hash-table stats:
# Load=244/1024=24%, Rehash=0, Collisions=173/1063=16%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 16777233, inode 28689582): 19 files, no impossibilities.

# 19 files, no impossibilities in 1 directories.

# Implicit Rules

do.build.platform.%:
#  commands to execute (from `build/makelib/common.mk', line 316):
	@$(MAKE) build.check.platform PLATFORM=$*
	@$(MAKE) build.code.platform PLATFORM=$*
	

do.build.artifacts.%:
#  commands to execute (from `build/makelib/common.mk', line 322):
	@$(MAKE) build.artifacts.platform PLATFORM=$*
	

img.release.manifest.publish.%: img.release.publish /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/manifest-tool-v0.7.0
#  commands to execute (from `build/makelib/image.mk', line 218):
	@$(MANIFEST_TOOL) push from-args --platforms $(IMAGE_PLATFORMS) --template $(DOCKER_REGISTRY)/$*-ARCH:$(VERSION) --target $(DOCKER_REGISTRY)/$*:$(VERSION) || $(FAIL)
	

img.release.manifest.promote.%: img.release.promote /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/manifest-tool-v0.7.0
#  commands to execute (from `build/makelib/image.mk', line 221):
	@[ "$(CHANNEL)" = "master" ] || $(MANIFEST_TOOL) push from-args --platforms $(IMAGE_PLATFORMS) --template $(DOCKER_REGISTRY)/$*-ARCH:$(VERSION) --target $(DOCKER_REGISTRY)/$*:$(VERSION)-$(CHANNEL) || $(FAIL)
	@$(MANIFEST_TOOL) push from-args --platforms $(IMAGE_PLATFORMS) --template $(DOCKER_REGISTRY)/$*-ARCH:$(VERSION) --target $(DOCKER_REGISTRY)/$*:$(CHANNEL) || $(FAIL)
	

do.build.image.%:
#  commands to execute (from `build/makelib/image.mk', line 234):
	@$(MAKE) -C $(IMAGE_DIR)/$* PLATFORM=$(PLATFORM)
	

# 5 implicit rules, 0 (0.0%) terminal.

# Files

/Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/golangci-lint-v1.31.0:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/golang.mk', line 341):
	@$(INFO) installing golangci-lint-v$(GOLANGCILINT_VERSION) $(SAFEHOSTPLATFORM)
	@mkdir -p $(TOOLS_HOST_DIR)/tmp-golangci-lint || $(FAIL)
	@curl -fsSL https://github.com/golangci/golangci-lint/releases/download/v$(GOLANGCILINT_VERSION)/golangci-lint-$(GOLANGCILINT_VERSION)-$(SAFEHOSTPLATFORM).tar.gz | tar -xz --strip-components=1 -C $(TOOLS_HOST_DIR)/tmp-golangci-lint || $(FAIL)
	@mv $(TOOLS_HOST_DIR)/tmp-golangci-lint/golangci-lint $(GOLANGCILINT) || $(FAIL)
	@rm -fr $(TOOLS_HOST_DIR)/tmp-golangci-lint
	@$(OK) installing golangci-lint-v$(GOLANGCILINT_VERSION) $(SAFEHOSTPLATFORM)
	

build.init: go.init output.init
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 288):
	@:
	

/Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/dep-v0.5.1:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/golang.mk', line 333):
	@$(INFO) installing dep-$(DEP_VERSION) $(SAFEHOSTPLATFORM)
	@mkdir -p $(TOOLS_HOST_DIR)/tmp-dep || $(FAIL)
	@curl -fsSL -o $(DEP) https://github.com/golang/dep/releases/download/$(DEP_VERSION)/dep-$(SAFEHOSTPLATFORM) || $(FAIL)
	@chmod +x $(DEP) || $(FAIL)
	@rm -fr $(TOOLS_HOST_DIR)/tmp-dep
	@$(OK) installing dep-$(DEP_VERSION) $(SAFEHOSTPLATFORM)
	

/Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/kind-v0.11.1:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/k8s_tools.mk', line 83):
	@$(INFO) installing kind $(KIND_VERSION)
	@mkdir -p $(TOOLS_HOST_DIR) || $(FAIL)
	@curl -fsSLo $(KIND) https://github.com/kubernetes-sigs/kind/releases/download/$(KIND_VERSION)/kind-$(SAFEHOSTPLATFORM) || $(FAIL)
	@chmod +x $(KIND)
	@$(OK) installing kind $(KIND_VERSION)
	

build.code.platform: go.build
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 302):
	@:
	

build.artifacts.platform: do.build.images
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 308):
	@:
	

go.clean:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/golang.mk', line 260):
	@# `go modules` creates read-only folders under WORK_DIR
	@# make all folders within WORK_DIR writable, so they can be deleted
	@if [ -d $(WORK_DIR) ]; then chmod -R +w $(WORK_DIR); fi 
	@rm -fr $(GO_BIN_DIR) $(GO_TEST_DIR)
	

img.release.build.crossplane.provider-jet-palette.amd64:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/image.mk', line 215):
	@echo `date +%H:%M:%S` [34m[ .. ][0m docker build crossplane/provider-jet-palette-amd64:v0.0.0-1.g69503ad.dirty
	@docker tag build-e2886f39/provider-jet-palette-amd64 crossplane/provider-jet-palette-amd64:v0.0.0-1.g69503ad.dirty || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
	@# Save image as _output/images/linux_<arch>/<image>.tar.gz (no builds for darwin or windows)
	@mkdir -p /Users/justinbarksdale/git/provider-jet-palette/_output/images/linux_amd64 || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
	@docker save build-e2886f39/provider-jet-palette-amd64 | gzip -c > /Users/justinbarksdale/git/provider-jet-palette/_output/images/linux_amd64/provider-jet-palette.tar.gz || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
	@echo `date +%H:%M:%S` [32m[ OK ][0m docker build crossplane/provider-jet-palette-amd64:v0.0.0-1.g69503ad.dirty
	

e2e:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 376):
	@$(MAKE) e2e.init
	@$(MAKE) e2e.run
	@$(MAKE) e2e.done
	

# Not a target:
build/makelib/output.mk:
#  A default, MAKEFILES, or -include/sinclude makefile.
#  Implicit rule search has been done.
#  Last modified 2022-04-25 19:38:25
#  File has been updated.
#  Successfully updated.
# variable set hash-table stats:
 
# Load=0/32=0%, Rehash=0, Collisions=0/0=0%

test.run: go.test.unit
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 362):
	@:
	

cobertura:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 113):
	@cat $(GO_TEST_OUTPUT)/coverage.txt | \
	grep -v zz_ | \
	$(GOCOVER_COBERTURA) > $(GO_TEST_OUTPUT)/cobertura-coverage.xml
	

go.vendor.lite:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/golang.mk', line 217):
	@$(INFO) verify dependencies have expected content
	@$(GOHOST) mod verify || $(FAIL)
	@$(OK) go modules dependencies verified
	

debug.nuke:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/image.mk', line 170):
	@for c in $$(docker ps -a -q --no-trunc); do \
	if [ "$$c" != "$(SELF_CID)" ]; then \
	echo stopping and removing container $${c}; \
	docker stop $${c}; \
	docker rm $${c}; \
	fi; \
	done
	@for i in $$(docker images -q); do \
	echo removing image $$i; \
	docker rmi -f $$i > /dev/null 2>&1; \
	done
	

img.release.clean.crossplane.provider-jet-palette-controller.arm64:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/image.mk', line 215):
	@[ -z "$$(docker images -q crossplane/provider-jet-palette-controller-arm64:v0.0.0-1.g69503ad.dirty)" ] || docker rmi crossplane/provider-jet-palette-controller-arm64:v0.0.0-1.g69503ad.dirty
	@[ -z "$$(docker images -q crossplane/provider-jet-palette-controller-arm64:v0.0.0-1.g69503ad.dirty-master)" ] || docker rmi crossplane/provider-jet-palette-controller-arm64:v0.0.0-1.g69503ad.dirty-master
	@[ -z "$$(docker images -q crossplane/provider-jet-palette-controller-arm64:master)" ] || docker rmi crossplane/provider-jet-palette-controller-arm64:master
	

vendor.check: go.vendor.check
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

/Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/kustomize-v3.3.0:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/k8s_tools.mk', line 98):
	@$(INFO) installing kustomize $(KUSTOMIZE_VERSION)
	@mkdir -p $(TOOLS_HOST_DIR)/tmp-kustomize
	@curl -fsSL https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize/$(KUSTOMIZE_VERSION)/kustomize_$(KUSTOMIZE_VERSION)_$(SAFEHOST_PLATFORM).tar.gz | tar -xz -C $(TOOLS_HOST_DIR)/tmp-kustomize
	@mv $(TOOLS_HOST_DIR)/tmp-kustomize/kustomize $(KUSTOMIZE)
	@rm -fr $(TOOLS_HOST_DIR)/tmp-kustomize
	@$(OK) installing kustomize $(KUSTOMIZE_VERSION)
	

all: build
#  Phony target (prerequisite of .PHONY).
#  Command-line target.
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/8=0%

go.test.unit: /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/go-junit-report /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/gocover-cobertura
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/golang.mk', line 163):
	@$(INFO) go test unit-tests
	@mkdir -p $(GO_TEST_OUTPUT)
	@CGO_ENABLED=$(GO_CGO_ENABLED) $(GOHOST) test -i -cover $(GO_STATIC_FLAGS) $(GO_PACKAGES) || $(FAIL)
	@CGO_ENABLED=$(GO_CGO_ENABLED) $(GOHOST) test -v -covermode=$(GO_COVER_MODE) -coverprofile=$(GO_TEST_OUTPUT)/coverage.txt $(GO_TEST_FLAGS) $(GO_STATIC_FLAGS) $(GO_PACKAGES) 2>&1 | tee $(GO_TEST_OUTPUT)/unit-tests.log || $(FAIL)
	@cat $(GO_TEST_OUTPUT)/unit-tests.log | $(GOJUNIT) -set-exit-code > $(GO_TEST_OUTPUT)/unit-tests.xml || $(FAIL)
	@$(GOCOVER_COBERTURA) < $(GO_TEST_OUTPUT)/coverage.txt > $(GO_TEST_OUTPUT)/coverage.xml
	@$(OK) go test unit-tests
	

do.build.artifacts.%:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

/Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/helm-v2.17.0:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/k8s_tools.mk', line 115):
	@$(INFO) installing helm $(HELM_VERSION)
	@mkdir -p $(TOOLS_HOST_DIR)/tmp-helm
	@curl -fsSL https://get.helm.sh/helm-$(HELM_VERSION)-$(SAFEHOSTPLATFORM).tar.gz | tar -xz -C $(TOOLS_HOST_DIR)/tmp-helm
	@mv $(TOOLS_HOST_DIR)/tmp-helm/$(SAFEHOSTPLATFORM)/helm $(HELM)
	@rm -fr $(TOOLS_HOST_DIR)/tmp-helm
	@$(OK) installing helm $(HELM_VERSION)
	

.PHONY: all build.init build.check build.check.platform build.code build.code.platform build.artifacts build.artifacts.platform build.done do.build.platform.% do.build.platform do.build.artifacts.% do.build.artifacts build.all build clean distclean lint test test.init test.run test.done e2e.init e2e.run e2e.done publish.init publish.artifacts publish promote.init promote.artifacts promote tag generate reviewable check-diff help help-special go.init go.build go.install go.test.unit go.test.integration go.test.codecov go.lint go.vet go.fmt go.generate go.validate go.vendor.lite go.vendor go.vendor.check go.vendor.update go.clean go.distclean fmt vendor vet go.help prune img.help config/schema.json cobertura submodules fallthrough run crds.clean crossplane.help help-special
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

img.cache:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/image.mk', line 140):
	@for i in $(CACHE_IMAGES); do \
	IMGID=$$(docker images -q $$i); \
	if [ -n "$$IMGID" ]; then \
	echo === caching image $$i; \
	CACHE_IMAGE=$(CACHE_REGISTRY)/$${i#*/}; \
	docker tag $$i $${CACHE_IMAGE}:$(CACHE_TAG); \
	for r in $$(docker images --format "{{.ID}}#{{.Repository}}:{{.Tag}}" | grep $$IMGID | grep $(CACHE_REGISTRY)/ | grep -v $${CACHE_IMAGE}:$(CACHE_TAG)); do \
	docker rmi $${r#*#} > /dev/null 2>&1 || true; \
	done; \
	fi; \
	done
	

promote.artifacts: img.release.manifest.promote.provider-jet-palette img.release.manifest.promote.provider-jet-palette-controller
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 402):
	@:
	

# Not a target:
build/makelib/golang.mk:
#  A default, MAKEFILES, or -include/sinclude makefile.
#  Implicit rule search has been done.
#  Last modified 2022-04-25 19:38:25
#  File has been updated.
#  Successfully updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/0=0%

generate.init: config/schema.json go.init
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 413):
	@:
	

/Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/helm-v3.7.1:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/k8s_tools.mk', line 125):
	@$(INFO) installing helm3 $(HELM_VERSION)
	@mkdir -p $(TOOLS_HOST_DIR)/tmp-helm3
	@curl -fsSL https://get.helm.sh/helm-$(HELM3_VERSION)-$(SAFEHOSTPLATFORM).tar.gz | tar -xz -C $(TOOLS_HOST_DIR)/tmp-helm3
	@mv $(TOOLS_HOST_DIR)/tmp-helm3/$(SAFEHOSTPLATFORM)/helm $(HELM3)
	@rm -fr $(TOOLS_HOST_DIR)/tmp-helm3
	@$(OK) installing helm3 $(HELM_VERSION)
	

 
go.validate: go.vet go.fmt
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

submodules:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 119):
	@git submodule sync
	@git submodule update --init --recursive
	

img.release.publish.crossplane.provider-jet-palette.amd64:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/image.mk', line 215):
	@echo `date +%H:%M:%S` [34m[ .. ][0m docker push crossplane/provider-jet-palette-amd64:v0.0.0-1.g69503ad.dirty
	@docker push crossplane/provider-jet-palette-amd64:v0.0.0-1.g69503ad.dirty || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
	@echo `date +%H:%M:%S` [32m[ OK ][0m docker push crossplane/provider-jet-palette-amd64:v0.0.0-1.g69503ad.dirty
	

distclean: clean go.distclean
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 349):
	@rm -fr $(CACHE_DIR)
	

img.prune:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/image.mk', line 154):
	@$(INFO) pruning images older than $(PRUNE_HOURS) keeping a minimum of $(PRUNE_KEEP) images
	@EXPIRED=$$(docker images --format "{{.Tag}}#{{.Repository}}:{{.Tag}}" \
	| grep -E '$(CACHE_REGISTRY)/' \
	| sort -r \
	| awk -v i=0 -v cd="$(CACHE_PRUNE_DATE)" -F  "#" '{if ($$1 <= cd && i >= $(PRUNE_KEEP)) print $$2; i++ }') &&\
	for i in $$EXPIRED; do \
	echo removing expired cache image $$i; \
	[ $(PRUNE_DRYRUN) = 1 ] || docker rmi $$i > /dev/null 2>&1 || true; \
	done
	@for i in $$(docker images -q -f dangling=true); do \
	echo removing dangling image $$i; \
	docker rmi $$i > /dev/null 2>&1 || true; \
	done
	@$(OK) pruning
	

# Not a target:
do.build.image.provider-jet-palette:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
img.release.manifest.promote.provider-jet-palette-controller:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

e2e.done:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 373):
	@:
	

go.fmt.simplify: /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/gofmt1.11
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/golang.mk', line 208):
	@$(INFO) gofmt simplify
	@$(GOFMT) -l -s -w $(GO_SUBDIRS) $(GO_INTEGRATION_TESTS_SUBDIRS) || $(FAIL)
	@$(OK) gofmt simplify
	

img.release.promote: img.release.promote.crossplane.provider-jet-palette.amd64 img.release.promote.crossplane.provider-jet-palette.arm64 img.release.promote.crossplane.provider-jet-palette-controller.amd64 img.release.promote.crossplane.provider-jet-palette-controller.arm64
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

fallthrough: submodules
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 69):
	@echo Initial setup complete. Running make again . . .
	@make
	

go.vet:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/golang.mk', line 198):
	@$(INFO) go vet $(PLATFORM)
	@CGO_ENABLED=0 $(GOHOST) vet $(GO_COMMON_FLAGS) $(GO_PACKAGES) $(GO_INTEGRATION_TEST_PACKAGES) || $(FAIL)
	@$(OK) go vet $(PLATFORM)
	

.SUFFIXES:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

/Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/goimports:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/golang.mk', line 357):
	@$(INFO) installing goimports
	@mkdir -p $(TOOLS_HOST_DIR)/tmp-goimports || $(FAIL)
	@GO111MODULE=off GOPATH=$(TOOLS_HOST_DIR)/tmp-goimports GOBIN=$(TOOLS_HOST_DIR) $(GOHOST) get golang.org/x/tools/cmd/goimports || rm -fr $(TOOLS_HOST_DIR)/tmp-goimports || $(FAIL)
	@rm -fr $(TOOLS_HOST_DIR)/tmp-goimports
	@$(OK) installing goimports
	

go.generate:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/golang.mk', line 270):
	@$(INFO) go generate $(PLATFORM)
	@CGO_ENABLED=0 $(GOHOST) generate $(GO_GENERATE_FLAGS) $(GO_PACKAGES) $(GO_INTEGRATION_TEST_PACKAGES) || $(FAIL)
	@$(OK) go generate $(PLATFORM)
	@$(INFO) go mod tidy
	@$(GOHOST) mod tidy || $(FAIL)
	@$(OK) go mod tidy
	

generate.run: go.generate
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 414):
	@:
	

# Not a target:
Makefile:
#  Implicit rule search has been done.
#  Last modified 2022-06-08 06:53:48
#  File has been updated.
#  Successfully updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/0=0%

publish.init: img.release.build
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 388):
	@:
	

build.clean: output.clean
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

common.buildvars:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 268):
	@echo PROJECT_NAME=$(PROJECT_NAME)
	@echo PROJECT_REPO=$(PROJECT_REPO)
	@echo BUILD_HOST=$(HOSTNAME)
	@echo BUILD_REGISTRY=$(BUILD_REGISTRY)
	@echo DOCKER_REGISTRY=$(DOCKER_REGISTRY)
	@echo OUTPUT_DIR=$(OUTPUT_DIR)
	@echo WORK_DIR=$(WORK_DIR)
	@echo CACHE_DIR=$(CACHE_DIR)
	@echo HOSTOS=$(HOSTOS)
	@echo HOSTARCH=$(HOSTARCH)
	@echo SAFEHOSTARCH=$(SAFEHOSTARCH)
	@echo TARGETARCH=$(TARGETARCH)
	

img.release.build.crossplane.provider-jet-palette.arm64:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/image.mk', line 215):
	@echo `date +%H:%M:%S` [34m[ .. ][0m docker build crossplane/provider-jet-palette-arm64:v0.0.0-1.g69503ad.dirty
	@docker tag build-e2886f39/provider-jet-palette-arm64 crossplane/provider-jet-palette-arm64:v0.0.0-1.g69503ad.dirty || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
	@# Save image as _output/images/linux_<arch>/<image>.tar.gz (no builds for darwin or windows)
	@mkdir -p /Users/justinbarksdale/git/provider-jet-palette/_output/images/linux_arm64 || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
	@docker save build-e2886f39/provider-jet-palette-arm64 | gzip -c > /Users/justinbarksdale/git/provider-jet-palette/_output/images/linux_arm64/provider-jet-palette.tar.gz || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
	@echo `date +%H:%M:%S` [32m[ OK ][0m docker build crossplane/provider-jet-palette-arm64:v0.0.0-1.g69503ad.dirty
	

go.test.integration: /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/go-junit-report
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/golang.mk', line 184):
	@$(INFO) go test integration-tests
 
	@mkdir -p $(GO_TEST_OUTPUT) || $(FAIL)
	@CGO_ENABLED=0 $(GOHOST) test -i $(GO_STATIC_FLAGS) $(GO_INTEGRATION_TEST_PACKAGES) || $(FAIL)
	@CGO_ENABLED=0 $(GOHOST) test $(GO_TEST_FLAGS) $(GO_STATIC_FLAGS) $(GO_INTEGRATION_TEST_PACKAGES) $(TEST_FILTER_PARAM) 2>&1 | tee $(GO_TEST_OUTPUT)/integration-tests.log || $(FAIL)
	@cat $(GO_TEST_OUTPUT)/integration-tests.log | $(GOJUNIT) -set-exit-code > $(GO_TEST_OUTPUT)/integration-tests.xml || $(FAIL)
	@$(OK) go test integration-tests
	

test:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 366):
	@$(MAKE) test.init
	@$(MAKE) test.run
	@$(MAKE) test.done
	

img.release.clean: img.release.clean.crossplane.provider-jet-palette.amd64 img.release.clean.crossplane.provider-jet-palette.arm64 img.release.clean.crossplane.provider-jet-palette-controller.amd64 img.release.clean.crossplane.provider-jet-palette-controller.arm64
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

imports: go.imports
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

build:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: `'
#  File does not exist.
#  File has been updated.
#  Failed to be updated.
# automatic
# @ := build
# automatic
# % := 
# automatic
# * := 
# automatic
# + := 
# automatic
# | := 
# automatic
# < := 
# automatic
# ^ := 
# automatic
# ? := 
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=5/16=31%
#  commands to execute (from `build/makelib/common.mk', line 338):
	@$(MAKE) build.all PLATFORMS="$(BUILD_PLATFORMS)"
	

fmt.simplify: go.fmt.simplify
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

do.build.platform.%:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

# Not a target:
go.imports.fix:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
do.build.artifacts.linux_amd64:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
build/makelib/image.mk:
#  A default, MAKEFILES, or -include/sinclude makefile.
#  Implicit rule search has been done.
#  Last modified 2022-04-25 19:38:25
#  File has been updated.
#  Successfully updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/0=0%

vet: go.vet
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

/Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/kubectl-v1.22.2:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/k8s_tools.mk', line 91):
	@$(INFO) installing kubectl $(KUBECTL_VERSION)
	@curl -fsSLo $(KUBECTL) https://storage.googleapis.com/kubernetes-release/release/$(KUBECTL_VERSION)/bin/$(HOSTOS)/$(SAFEHOSTARCH)/kubectl || $(FAIL)
	@chmod +x $(KUBECTL)
	@$(OK) installing kubectl $(KUBECTL_VERSION)
	

version.isdirty:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 243):
	@if [[ $(VERSION) = *.dirty ]]; then \
	$(ERR) version '$(VERSION)' is dirty aborting publish. The following files changed: ;\
	git status --short;\
	exit 1; \
	fi
	

go.cachedir:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 108):
	@go env GOCACHE
	

config/schema.json: /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/terraform-1.1.6
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 88):
	@$(INFO) generating provider schema for $(TERRAFORM_PROVIDER_SOURCE) $(TERRAFORM_PROVIDER_VERSION)
	@mkdir -p $(TERRAFORM_WORKDIR)
	@echo '{"terraform":[{"required_providers":[{"provider":{"source":"'"$(TERRAFORM_PROVIDER_SOURCE)"'","version":"'"$(TERRAFORM_PROVIDER_VERSION)"'"}}],"required_version":"'"$(TERRAFORM_VERSION)"'"}]}' > $(TERRAFORM_WORKDIR)/main.tf.json
	@$(TERRAFORM) -chdir=$(TERRAFORM_WORKDIR) init > $(TERRAFORM_WORKDIR)/terraform-logs.txt 2>&1
	@$(TERRAFORM) -chdir=$(TERRAFORM_WORKDIR) providers schema -json=true > $(TERRAFORM_PROVIDER_SCHEMA) 2>> $(TERRAFORM_WORKDIR)/terraform-logs.txt
	@$(OK) generating provider schema for $(TERRAFORM_PROVIDER_SOURCE) $(TERRAFORM_PROVIDER_VERSION)
	

img.release.publish.crossplane.provider-jet-palette.arm64:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/image.mk', line 215):
	@echo `date +%H:%M:%S` [34m[ .. ][0m docker push crossplane/provider-jet-palette-arm64:v0.0.0-1.g69503ad.dirty
	@docker push crossplane/provider-jet-palette-arm64:v0.0.0-1.g69503ad.dirty || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
	@echo `date +%H:%M:%S` [32m[ OK ][0m docker push crossplane/provider-jet-palette-arm64:v0.0.0-1.g69503ad.dirty
	

build.all:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 327):
	@$(MAKE) build.init
	@$(MAKE) build.check
	@$(MAKE) build.code
	@$(MAKE) do.build.platform
	@$(MAKE) build.artifacts
	@$(MAKE) do.build.artifacts
	@$(MAKE) build.done
	

go.vendor.update:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/golang.mk', line 222):
	@$(INFO) update go modules
	@$(GOHOST) get -u ./... || $(FAIL)
	@$(OK) update go modules
	

tag: release.tag
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

help:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 476):
	@echo "$$HELPTEXT"
	@$(MAKE) help-special
	

test.done:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 363):
	@:
	

img.release.promote.crossplane.provider-jet-palette.amd64:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/image.mk', line 215):
	@echo `date +%H:%M:%S` [34m[ .. ][0m docker promote crossplane/provider-jet-palette-amd64:v0.0.0-1.g69503ad.dirty to crossplane/provider-jet-palette-amd64:master
	@docker pull crossplane/provider-jet-palette-amd64:v0.0.0-1.g69503ad.dirty || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
	@[ "master" = "master" ] || docker tag crossplane/provider-jet-palette-amd64:v0.0.0-1.g69503ad.dirty crossplane/provider-jet-palette-amd64:v0.0.0-1.g69503ad.dirty-master || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
	@docker tag crossplane/provider-jet-palette-amd64:v0.0.0-1.g69503ad.dirty crossplane/provider-jet-palette-amd64:master || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
	@[ "master" = "master" ] || docker push crossplane/provider-jet-palette-amd64:v0.0.0-1.g69503ad.dirty-master
	@docker push crossplane/provider-jet-palette-amd64:master || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
 
	@echo `date +%H:%M:%S` [32m[ OK ][0m docker promote crossplane/provider-jet-palette-amd64:v0.0.0-1.g69503ad.dirty to crossplane/provider-jet-palette-amd64:master || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
	

imports.fix: go.imports.fix
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

lint.init: go.init
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 352):
	@:
	

img.release.publish.crossplane.provider-jet-palette-controller.amd64:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/image.mk', line 215):
	@echo `date +%H:%M:%S` [34m[ .. ][0m docker push crossplane/provider-jet-palette-controller-amd64:v0.0.0-1.g69503ad.dirty
	@docker push crossplane/provider-jet-palette-controller-amd64:v0.0.0-1.g69503ad.dirty || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
	@echo `date +%H:%M:%S` [32m[ OK ][0m docker push crossplane/provider-jet-palette-controller-amd64:v0.0.0-1.g69503ad.dirty
	

output.init:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/output.mk', line 37):
	@mkdir -p $(OUTPUT_DIR)
	@echo "$(VERSION)" > $(OUTPUT_DIR)/version
	

/Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/manifest-tool-v0.7.0:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/image.mk', line 290):
	@$(INFO) installing manifest-tool $(MANIFEST_TOOL_VERSION)
	@mkdir -p $(TOOLS_HOST_DIR) || $(FAIL)
	@curl -fsSL https://github.com/estesp/manifest-tool/releases/download/$(MANIFEST_TOOL_VERSION)/manifest-tool-$(HOSTOS)-$(SAFEHOSTARCH) > $@ || $(FAIL)
	@chmod +x $@ || $(FAIL)
	@$(OK) installing manifest-tool $(MANIFEST_TOOL_VERSION)
	

build.check: go.lint
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 292):
	@:
	

build.done: img.cache img.done
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 312):
	@:
	

generate:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 418):
	@$(MAKE) generate.init
	@$(MAKE) generate.run
	@$(MAKE) generate.done
	

# Not a target:
do.build.image.provider-jet-palette-controller:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

/Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/gofmt1.11:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/golang.mk', line 349):
	@$(INFO) installing gofmt$(GOFMT_VERSION)
	@mkdir -p $(TOOLS_HOST_DIR)/tmp-fmt || $(FAIL)
	@curl -sL https://dl.google.com/go/go$(GOFMT_VERSION).$(SAFEHOSTPLATFORM).tar.gz | tar -xz -C $(TOOLS_HOST_DIR)/tmp-fmt || $(FAIL)
	@mv $(TOOLS_HOST_DIR)/tmp-fmt/go/bin/gofmt $(GOFMT) || $(FAIL)
	@rm -fr $(TOOLS_HOST_DIR)/tmp-fmt
	@$(OK) installing gofmt$(GOFMT_VERSION)
	

go.build:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/golang.mk', line 152):
	@$(INFO) go build $(PLATFORM)
	$(foreach p,$(GO_STATIC_PACKAGES),@CGO_ENABLED=0 $(GO) build -v -i -o $(GO_OUT_DIR)/$(lastword $(subst /, ,$(p)))$(GO_OUT_EXT) $(GO_STATIC_FLAGS) $(p) || $(FAIL) ${\n})
	$(foreach p,$(GO_TEST_PACKAGES) $(GO_LONGHAUL_TEST_PACKAGES),@CGO_ENABLED=0 $(GO) test -i -c -o $(GO_TEST_OUTPUT)/$(lastword $(subst /, ,$(p)))$(GO_OUT_EXT) $(GO_STATIC_FLAGS) $(p) || $(FAIL) ${\n})
	@$(OK) go build $(PLATFORM)
	

check-diff: generate
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 430):
	@$(INFO) checking that branch is clean
	@if git status --porcelain | grep . ; then $(FAIL); else $(OK) branch is clean; fi
	

prune: img.prune
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

/Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/go-junit-report:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/golang.mk', line 364):
	@$(INFO) installing go-junit-report
	@mkdir -p $(TOOLS_HOST_DIR)/tmp-junit || $(FAIL)
	@GO111MODULE=off GOPATH=$(TOOLS_HOST_DIR)/tmp-junit GOBIN=$(TOOLS_HOST_DIR) $(GOHOST) get github.com/jstemmer/go-junit-report || rm -fr $(TOOLS_HOST_DIR)/tmp-junit || $(FAIL)
	@rm -fr $(TOOLS_HOST_DIR)/tmp-junit
	@$(OK) installing go-junit-report
	

promote.init:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 399):
	@:
	

img.release.clean.crossplane.provider-jet-palette.amd64:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/image.mk', line 215):
	@[ -z "$$(docker images -q crossplane/provider-jet-palette-amd64:v0.0.0-1.g69503ad.dirty)" ] || docker rmi crossplane/provider-jet-palette-amd64:v0.0.0-1.g69503ad.dirty
	@[ -z "$$(docker images -q crossplane/provider-jet-palette-amd64:v0.0.0-1.g69503ad.dirty-master)" ] || docker rmi crossplane/provider-jet-palette-amd64:v0.0.0-1.g69503ad.dirty-master
	@[ -z "$$(docker images -q crossplane/provider-jet-palette-amd64:master)" ] || docker rmi crossplane/provider-jet-palette-amd64:master
	

build.code:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 299):
	@:
	

lint.run: go.lint
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 353):
	@:
	

/Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/terraform-1.1.6:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 79):
	@$(INFO) installing terraform $(HOSTOS)-$(HOSTARCH)
	@mkdir -p $(TOOLS_HOST_DIR)/tmp-terraform
	@curl -fsSL https://releases.hashicorp.com/terraform/$(TERRAFORM_VERSION)/terraform_$(TERRAFORM_VERSION)_$(SAFEHOST_PLATFORM).zip -o $(TOOLS_HOST_DIR)/tmp-terraform/terraform.zip
	@unzip $(TOOLS_HOST_DIR)/tmp-terraform/terraform.zip -d $(TOOLS_HOST_DIR)/tmp-terraform
	@mv $(TOOLS_HOST_DIR)/tmp-terraform/terraform $(TERRAFORM)
	@rm -fr $(TOOLS_HOST_DIR)/tmp-terraform
	@$(OK) installing terraform $(HOSTOS)-$(HOSTARCH)
	

vendor.update: go.vendor.update
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

build.artifacts:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 305):
	@:
	

img.release.build.crossplane.provider-jet-palette-controller.arm64:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/image.mk', line 215):
 
	@echo `date +%H:%M:%S` [34m[ .. ][0m docker build crossplane/provider-jet-palette-controller-arm64:v0.0.0-1.g69503ad.dirty
	@docker tag build-e2886f39/provider-jet-palette-controller-arm64 crossplane/provider-jet-palette-controller-arm64:v0.0.0-1.g69503ad.dirty || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
	@# Save image as _output/images/linux_<arch>/<image>.tar.gz (no builds for darwin or windows)
	@mkdir -p /Users/justinbarksdale/git/provider-jet-palette/_output/images/linux_arm64 || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
	@docker save build-e2886f39/provider-jet-palette-controller-arm64 | gzip -c > /Users/justinbarksdale/git/provider-jet-palette/_output/images/linux_arm64/provider-jet-palette-controller.tar.gz || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
	@echo `date +%H:%M:%S` [32m[ OK ][0m docker build crossplane/provider-jet-palette-controller-arm64:v0.0.0-1.g69503ad.dirty
	

img.help:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/image.mk', line 280):
	@echo "$$IMAGE_HELPTEXT"
	

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
do.build.platform.linux_amd64:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
do.build.artifacts.linux_arm64:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

/Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/olm-bundle-v0.4.0:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/k8s_tools.mk', line 107):
	@$(INFO) installing olm-bundle $(OLMBUNDLE_VERSION)
	@curl -fsSLo $(OLMBUNDLE) https://github.com/upbound/olm-bundle/releases/download/$(OLMBUNDLE_VERSION)/olm-bundle_$(SAFEHOSTPLATFORM) || $(FAIL)
	@chmod +x $(OLMBUNDLE)
	@$(OK) installing olm-bundle $(OLMBUNDLE_VERSION)
	

publish: version.isdirty
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 395):
	@$(MAKE) publish.init
	@$(MAKE) publish.artifacts
	

# Not a target:
img.release.manifest.publish.provider-jet-palette:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

img.release.publish: img.release.publish.crossplane.provider-jet-palette.amd64 img.release.publish.crossplane.provider-jet-palette.arm64 img.release.publish.crossplane.provider-jet-palette-controller.amd64 img.release.publish.crossplane.provider-jet-palette-controller.arm64
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

img.clean:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/image.mk', line 132):
	@$(INFO) cleaning images for $(BUILD_REGISTRY)
	@$(MAKE) do.img.clean CLEAN_IMAGES="$(shell docker images | grep -E '^$(BUILD_REGISTRY)/' | awk '{print $$1":"$$2}')"
	@$(OK) cleaning images for $(BUILD_REGISTRY)
	

release.tag:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 229):
	$(error invalid version $(VERSION). must be a semantic version with v[Major].[Minor].[Patch] only)
	@$(INFO) tagging commit hash $(COMMIT_HASH) with v$(VERSION_MAJOR).$(VERSION_MINOR).$(VERSION_PATCH)
	git tag -f -m "release $(VERSION)" v$(VERSION_MAJOR).$(VERSION_MINOR).$(VERSION_PATCH) $(COMMIT_HASH)
	git push $(REMOTE_NAME) v$(VERSION_MAJOR).$(VERSION_MINOR).$(VERSION_PATCH)
	@set -e; if ! git ls-remote --heads $(REMOTE_NAME) | grep -q refs/heads/release-$(VERSION_MAJOR).$(VERSION_MINOR); then \
	echo === creating new release branch release-$(VERSION_MAJOR).$(VERSION_MINOR) ;\
	git branch -f release-$(VERSION_MAJOR).$(VERSION_MINOR) $(COMMIT_HASH) ;\
	git push $(REMOTE_NAME) release-$(VERSION_MAJOR).$(VERSION_MINOR) ;\
	fi
	@$(OK) tagging
	

do.img.clean:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/image.mk', line 116):
	@for i in $(CLEAN_IMAGES); do \
	if [ -n "$$(docker images -q $$i)" ]; then \
	for c in $$(docker ps -a -q --no-trunc --filter=ancestor=$$i); do \
	if [ "$$c" != "$(SELF_CID)" ]; then \
	echo stopping and removing container $${c} referencing image $$i; \
	docker stop $${c}; \
	docker rm $${c}; \
	fi; \
	done; \
	echo cleaning image $$i; \
	docker rmi $$i > /dev/null 2>&1 || true; \
	fi; \
	done
	

generate.done:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 415):
	@:
	

run: go.build
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 126):
	@$(INFO) Running Crossplane locally out-of-cluster . . .
	@# To see other arguments that can be provided, run the command with --help instead
	$(GO_OUT_DIR)/provider --debug
	

clean: img.clean img.release.clean go.clean
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 345):
	@rm -fr $(OUTPUT_DIR) $(WORK_DIR)
	

# Not a target:
build/makelib/common.mk:
#  A default, MAKEFILES, or -include/sinclude makefile.
#  Implicit rule search has been done.
#  Last modified 2022-04-25 19:38:25
#  File has been updated.
#  Successfully updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/0=0%

go.fmt: /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/gofmt1.11
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/golang.mk', line 203):
	@$(INFO) go fmt
	@gofmt_out=$$($(GOFMT) -s -d -e $(GO_SUBDIRS) $(GO_INTEGRATION_TESTS_SUBDIRS) 2>&1) && [ -z "$${gofmt_out}" ] || (echo "$${gofmt_out}" 1>&2; $(FAIL))
	@$(OK) go fmt
	

img.release.promote.crossplane.provider-jet-palette.arm64:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/image.mk', line 215):
	@echo `date +%H:%M:%S` [34m[ .. ][0m docker promote crossplane/provider-jet-palette-arm64:v0.0.0-1.g69503ad.dirty to crossplane/provider-jet-palette-arm64:master
	@docker pull crossplane/provider-jet-palette-arm64:v0.0.0-1.g69503ad.dirty || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
	@[ "master" = "master" ] || docker tag crossplane/provider-jet-palette-arm64:v0.0.0-1.g69503ad.dirty crossplane/provider-jet-palette-arm64:v0.0.0-1.g69503ad.dirty-master || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
	@docker tag crossplane/provider-jet-palette-arm64:v0.0.0-1.g69503ad.dirty crossplane/provider-jet-palette-arm64:master || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
	@[ "master" = "master" ] || docker push crossplane/provider-jet-palette-arm64:v0.0.0-1.g69503ad.dirty-master
	@docker push crossplane/provider-jet-palette-arm64:master || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
	@echo `date +%H:%M:%S` [32m[ OK ][0m docker promote crossplane/provider-jet-palette-arm64:v0.0.0-1.g69503ad.dirty to crossplane/provider-jet-palette-arm64:master || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
	

e2e.init:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 371):
	@:
 
	

img.release.publish.crossplane.provider-jet-palette-controller.arm64:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/image.mk', line 215):
	@echo `date +%H:%M:%S` [34m[ .. ][0m docker push crossplane/provider-jet-palette-controller-arm64:v0.0.0-1.g69503ad.dirty
	@docker push crossplane/provider-jet-palette-controller-arm64:v0.0.0-1.g69503ad.dirty || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
	@echo `date +%H:%M:%S` [32m[ OK ][0m docker push crossplane/provider-jet-palette-controller-arm64:v0.0.0-1.g69503ad.dirty
	

/Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/gocover-cobertura:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/golang.mk', line 371):
	@$(INFO) installing gocover-cobertura
	@mkdir -p $(TOOLS_HOST_DIR)/tmp-gocover-cobertura || $(FAIL)
	@GO111MODULE=off GOPATH=$(TOOLS_HOST_DIR)/tmp-gocover-cobertura GOBIN=$(TOOLS_HOST_DIR) $(GOHOST) get github.com/t-yuki/gocover-cobertura || rm -fr $(TOOLS_HOST_DIR)/tmp-covcover-cobertura || $(FAIL)
	@rm -fr $(TOOLS_HOST_DIR)/tmp-gocover-cobertura
	@$(OK) installing gocover-cobertura
	

build.vars: common.buildvars k8s_tools.buildvars
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

go.init: go.vendor.lite
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/golang.mk', line 147):
	@if [ "$(GO111MODULE)" != "on" ] && [ "$(realpath ../../../..)" !=  "$(realpath $(GOPATH))" ]; then \
	$(WARN) the source directory is not relative to the GOPATH at $(GOPATH) or you are you using symlinks. The build might run into issue. Please move the source directory to be at $(GOPATH)/src/$(GO_PROJECT) ;\
	fi
	

img.release.promote.crossplane.provider-jet-palette-controller.amd64:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/image.mk', line 215):
	@echo `date +%H:%M:%S` [34m[ .. ][0m docker promote crossplane/provider-jet-palette-controller-amd64:v0.0.0-1.g69503ad.dirty to crossplane/provider-jet-palette-controller-amd64:master
	@docker pull crossplane/provider-jet-palette-controller-amd64:v0.0.0-1.g69503ad.dirty || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
	@[ "master" = "master" ] || docker tag crossplane/provider-jet-palette-controller-amd64:v0.0.0-1.g69503ad.dirty crossplane/provider-jet-palette-controller-amd64:v0.0.0-1.g69503ad.dirty-master || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
	@docker tag crossplane/provider-jet-palette-controller-amd64:v0.0.0-1.g69503ad.dirty crossplane/provider-jet-palette-controller-amd64:master || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
	@[ "master" = "master" ] || docker push crossplane/provider-jet-palette-controller-amd64:v0.0.0-1.g69503ad.dirty-master
	@docker push crossplane/provider-jet-palette-controller-amd64:master || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
	@echo `date +%H:%M:%S` [32m[ OK ][0m docker promote crossplane/provider-jet-palette-controller-amd64:v0.0.0-1.g69503ad.dirty to crossplane/provider-jet-palette-controller-amd64:master || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
	

do.build.artifacts: do.build.artifacts.linux_amd64 do.build.artifacts.linux_arm64
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

go.help:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/golang.mk', line 323):
	@echo "$$GO_HELPTEXT"
	

crds.clean:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

output.clean:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/output.mk', line 41):
	@rm -fr $(OUTPUT_DIR)
	@$(INFO) skipped publishing outputs to an s3 bucket since 'S3_BUCKET' is not set
	

img.release.clean.crossplane.provider-jet-palette.arm64:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/image.mk', line 215):
	@[ -z "$$(docker images -q crossplane/provider-jet-palette-arm64:v0.0.0-1.g69503ad.dirty)" ] || docker rmi crossplane/provider-jet-palette-arm64:v0.0.0-1.g69503ad.dirty
	@[ -z "$$(docker images -q crossplane/provider-jet-palette-arm64:v0.0.0-1.g69503ad.dirty-master)" ] || docker rmi crossplane/provider-jet-palette-arm64:v0.0.0-1.g69503ad.dirty-master
	@[ -z "$$(docker images -q crossplane/provider-jet-palette-arm64:master)" ] || docker rmi crossplane/provider-jet-palette-arm64:master
	

/Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/istioctl-1.8.1:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/k8s_tools.mk', line 74):
	@$(INFO) installing istio $(ISTIO_VERSION)
	@mkdir -p $(TOOLS_HOST_DIR)/tmp-istio || $(FAIL)
	@curl --progress-bar -fsSL https://github.com/istio/istio/releases/download/$(ISTIO_VERSION)/istio-$(ISTIO_VERSION)-$(ISTIO_DOWNLOAD_TUPLE).tar.gz | tar -xz -C $(TOOLS_HOST_DIR)/tmp-istio || $(FAIL)
	@mv $(TOOLS_HOST_DIR)/tmp-istio/istio-$(ISTIO_VERSION)/bin/istioctl $(ISTIO) || $(FAIL)
	@rm -fr $(TOOLS_HOST_DIR)/tmp-istio || $(FAIL)
	@$(OK) $(ISTIO) installing istio $(ISTIO_VERSION)
	

e2e.run:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 372):
	@:
	

k8s_tools.buildvars:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/k8s_tools.mk', line 61):
	@echo KIND=$(KIND)
	@echo KUBECTL=$(KUBECTL)
	@echo KUSTOMIZE=$(KUSTOMIZE)
	@echo HELM=$(HELM)
	@echo HELM3=$(HELM3)
	

fmt: go.imports
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

img.release.build: img.release.build.crossplane.provider-jet-palette.amd64 img.release.build.crossplane.provider-jet-palette.arm64 img.release.build.crossplane.provider-jet-palette-controller.amd64 img.release.build.crossplane.provider-jet-palette-controller.arm64
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

go.vendor:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/golang.mk', line 227):
	@$(INFO) go mod vendor
	@$(GOHOST) mod vendor || $(FAIL)
	@$(OK) go mod vendor
	

lint:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 356):
	@$(MAKE) lint.init
	@$(MAKE) lint.run
	@$(MAKE) lint.done
	

# Not a target:
build/makelib/k8s_tools.mk:
#  A default, MAKEFILES, or -include/sinclude makefile.
#  Implicit rule search has been done.
#  Last modified 2022-04-25 19:38:25
#  File has been updated.
#  Successfully updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/0=0%

# Not a target:
do.build.platform.linux_arm64:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

img.release.clean.crossplane.provider-jet-palette-controller.amd64:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
 
#  commands to execute (from `build/makelib/image.mk', line 215):
	@[ -z "$$(docker images -q crossplane/provider-jet-palette-controller-amd64:v0.0.0-1.g69503ad.dirty)" ] || docker rmi crossplane/provider-jet-palette-controller-amd64:v0.0.0-1.g69503ad.dirty
	@[ -z "$$(docker images -q crossplane/provider-jet-palette-controller-amd64:v0.0.0-1.g69503ad.dirty-master)" ] || docker rmi crossplane/provider-jet-palette-controller-amd64:v0.0.0-1.g69503ad.dirty-master
	@[ -z "$$(docker images -q crossplane/provider-jet-palette-controller-amd64:master)" ] || docker rmi crossplane/provider-jet-palette-controller-amd64:master
	

publish.artifacts: img.release.manifest.publish.provider-jet-palette img.release.manifest.publish.provider-jet-palette-controller
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 391):
	@:
	

# Not a target:
go.imports:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

reviewable:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 424):
	@$(MAKE) generate
	@$(MAKE) lint
	@$(MAKE) test
	

crossplane.help:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 147):
	@echo "$$CROSSPLANE_MAKE_HELP"
	

img.done:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/image.mk', line 137):
	@rm -fr $(IMAGE_TEMP_DIR)
	

do.build.images: do.build.image.provider-jet-palette do.build.image.provider-jet-palette-controller
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/image.mk', line 235):
	

promote:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 406):
	@$(MAKE) promote.init
	@$(MAKE) promote.artifacts
	

# Not a target:
img.release.manifest.promote.provider-jet-palette:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

help-special: img.help crossplane.help go.help
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 473):
	@:
	

go.distclean:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/golang.mk', line 267):
	@rm -rf $(GO_VENDOR_DIR) $(GO_PKG_DIR)
	

# Not a target:
img.release.manifest.publish.provider-jet-palette-controller:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

vendor: go.vendor
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

img.release.build.crossplane.provider-jet-palette-controller.amd64:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/image.mk', line 215):
	@echo `date +%H:%M:%S` [34m[ .. ][0m docker build crossplane/provider-jet-palette-controller-amd64:v0.0.0-1.g69503ad.dirty
	@docker tag build-e2886f39/provider-jet-palette-controller-amd64 crossplane/provider-jet-palette-controller-amd64:v0.0.0-1.g69503ad.dirty || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
	@# Save image as _output/images/linux_<arch>/<image>.tar.gz (no builds for darwin or windows)
	@mkdir -p /Users/justinbarksdale/git/provider-jet-palette/_output/images/linux_amd64 || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
	@docker save build-e2886f39/provider-jet-palette-controller-amd64 | gzip -c > /Users/justinbarksdale/git/provider-jet-palette/_output/images/linux_amd64/provider-jet-palette-controller.tar.gz || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
	@echo `date +%H:%M:%S` [32m[ OK ][0m docker build crossplane/provider-jet-palette-controller-amd64:v0.0.0-1.g69503ad.dirty
	

build.check.platform:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 296):
	@:
	

test.init: go.init
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 361):
	@:
	

go.vendor.check:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/golang.mk', line 217):
	@$(INFO) verify dependencies have expected content
	@$(GOHOST) mod verify || $(FAIL)
	@$(OK) go modules dependencies verified
	

go.lint: /Users/justinbarksdale/git/provider-jet-palette/.cache/tools/darwin_arm64/golangci-lint-v1.31.0
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/golang.mk', line 192):
	@$(INFO) golangci-lint
	@mkdir -p $(GO_LINT_OUTPUT)
	@$(GOLANGCILINT) run $(GO_LINT_ARGS) || $(FAIL)
	@$(OK) golangci-lint
	

lint.done:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/common.mk', line 354):
	@:
	

go.install:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/golang.mk', line 158):
	@$(INFO) go install $(PLATFORM)
	$(foreach p,$(GO_STATIC_PACKAGES),@CGO_ENABLED=0 $(GO) install -v $(GO_STATIC_FLAGS) $(p) || $(FAIL) ${\n})
	@$(OK) go install $(PLATFORM)
	

go.test.codecov:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `build/makelib/golang.mk', line 179):
	@$(INFO) go test codecov
	@cd $(GO_TEST_OUTPUT) && bash <(curl -s https://codecov.io/bash) || $(FAIL)
	@$(OK) go test codecov
	

do.build.platform: do.build.platform.linux_amd64 do.build.platform.linux_arm64
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

img.release.promote.crossplane.provider-jet-palette-controller.arm64:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `build/makelib/image.mk', line 215):
	@echo `date +%H:%M:%S` [34m[ .. ][0m docker promote crossplane/provider-jet-palette-controller-arm64:v0.0.0-1.g69503ad.dirty to crossplane/provider-jet-palette-controller-arm64:master
	@docker pull crossplane/provider-jet-palette-controller-arm64:v0.0.0-1.g69503ad.dirty || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
	@[ "master" = "master" ] || docker tag crossplane/provider-jet-palette-controller-arm64:v0.0.0-1.g69503ad.dirty crossplane/provider-jet-palette-controller-arm64:v0.0.0-1.g69503ad.dirty-master || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
	@docker tag crossplane/provider-jet-palette-controller-arm64:v0.0.0-1.g69503ad.dirty crossplane/provider-jet-palette-controller-arm64:master || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
	@[ "master" = "master" ] || docker push crossplane/provider-jet-palette-controller-arm64:v0.0.0-1.g69503ad.dirty-master
 
	@docker push crossplane/provider-jet-palette-controller-arm64:master || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
	@echo `date +%H:%M:%S` [32m[ OK ][0m docker promote crossplane/provider-jet-palette-controller-arm64:v0.0.0-1.g69503ad.dirty to crossplane/provider-jet-palette-controller-arm64:master || (echo `date +%H:%M:%S` [31m[FAIL][0m && false)
	

# files hash-table stats:
# Load=152/1024=15%, Rehash=0, Collisions=35/365=10%
# VPATH Search Paths

# No `vpath' search paths.

# No general (`VPATH' variable) search path.

# # of strings in strcache: 6
# # of strcache buffers: 1
# strcache size: total = 4096 / max = 4096 / min = 4096 / avg = 4096
# strcache free: total = 3965 / max = 3965 / min = 3965 / avg = 3965

# Finished Make data base on Fri Jun 10 08:39:42 2022

 
